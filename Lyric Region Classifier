{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import lyricsgenius\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import re #regular expressions\n",
    "import scipy.stats\n",
    "import datetime as dt\n",
    "%matplotlib inline\n",
    "import math\n",
    "from matplotlib.mlab import PCA as mlabPCA\n",
    "from sklearn  import preprocessing\n",
    "from sklearn.decomposition import PCA \n",
    "from sklearn import ensemble\n",
    "from sklearn.model_selection import cross_val_score, GridSearchCV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "#initiate api\n",
    "api = lyricsgenius.Genius(\"hTVqUO8LkM1kGkMJ0WXsHAIfZGAY6zUfqHHD0tOIKB9fMybRzTQzQhQBZ2zJCbp8\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "artist_list = ['Kendrick Lamar', 'Kanye West', 'J. Cole','Nas','Snoop Dogg', 'Tupac', 'T.I.','Killer Mike','Mac Miller', 'The Notorious B.I.G','Eminem', 'Dr. Dre','Eazy-E','E-40','Busta Rhymes','Big Daddy Kane','Scarface','Rakim','CL Smooth','Slick Rick','Beastie Boys','Kurtis Blow', 'Queen Latifah', 'Rapsody', 'Big Pun', 'The Sugarhill Gang', 'Salt-N-Pepa', 'The Roots', 'Loyle Carner', 'Dizzee Rascal', 'Lethal Dialect', 'Skepta', 'MF Doom', 'Roots Manuva']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import spotipy\n",
    "from spotipy.oauth2 import SpotifyClientCredentials\n",
    "id_ = \"52fbc503e96f458ab52d7f737a429386\"\n",
    "secret = \"ca7c90fd8e404439ae48b6368d0d52dd\"\n",
    "ccm = SpotifyClientCredentials(client_id=id_, client_secret=secret)\n",
    "sp = spotipy.Spotify(client_credentials_manager=ccm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotify:artist:2YZyLoL8N0Wb9xBt1NhZWg\n"
     ]
    }
   ],
   "source": [
    "results = sp.search(\"artist:Kendrick Lamar\")\n",
    "artist_id = results['tracks']['items'][0]['artists'][0]['uri']\n",
    "print(artist_id)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Functions to automate this process"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "#function...\n",
    "def artist_album_collector(artistname):\n",
    "    results=sp.search(\"artist:{}\".format(artistname))\n",
    "    artist_id = results['tracks']['items'][0]['artists'][0]['uri'].split(':')[2]\n",
    "    return artist_id"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2YZyLoL8N0Wb9xBt1NhZWg\n"
     ]
    }
   ],
   "source": [
    "print(artist_album_collector('Kendrick Lamar'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [],
   "source": [
    "artist_id_list = [artist_album_collector(x) for x in artist_list]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['2YZyLoL8N0Wb9xBt1NhZWg', '5K4W6rqBFWDnAN6FQUkS6x', '3NFIj19rUHIJ96Bd0960Oa', '4OBJLual30L7gRl5UkeRcT', '4RnBFZRiMLRyZy0AzzTg2C', '2N4EYkIlG1kv25g6Wv8LGI', '6l3HvQ5sa6mXTsMTB19rO5', '4LLpKhyESsyAXpc4laK94U', '7dGJo4pcD2V6oG8kP0tJRR', '4EnEZVjo3w1cwcQYePccay', '5cZb3wrs38vZDwfhrnm6lV', '7hJcb9fa4alzcOq3EaNPoG', '6DPYiyq5kWVQS4RGwxzPC7', '7B4hKK0S9QYnaoqa9OuwgX', '3crnzLy8R4lVwaigKEOz7V', '7jVv8c5Fj3E9VhNjxT4snq', '5me0Irg2ANcsgc93uaYrpb', '34EP7KEpOjXcM2TCat1ISk', '3nFkdlSjzX9mRTtwJOzDYB', '1YfEcTuGvBQ8xSD1f53UnK', '09hVIj6vWgoCDtT03h8ZCa', '1Z8ODXyhEBi3WynYw0Rya6', '1G9G7WwrXka3Z1r7aIDjI7', '3f5fB1YUbkUnW7cf7I0R48', '6ZhjJOJXXwnPS8PrXdmjLw', '3F2Y683ovlWT53WKCeq0oj', '26s8LSolLfCIY88ysQbIuT', '19KwjzvIL92r29IINtlPNP', '3PyWEKLWI0vHPmoNrIX0QE', '6Mo9PoU6svvhgEum7wh2Nd', '1caiinx0vcmzj48sfAhBav', '1W9qOBYRTfP7HcizWN43G1', '03r4iKL2g2442PT9n2UKsx', '25TKXk9zo9yk0HMJQ3TuE9', '5m7wCUhYhBh7A3A3YMxrbt', '4wmdO2g6g8UZkOnOA1FK6p', '6NL31G53xThQXkFs7lDpL5', '2Xu7q46Hf02xOoEIm4E1Qs', '3CQIn7N5CuRDP8wEI7FiDA', '7zliF6Q946WznVk3ZMYhZX', '7wqtxqI3eo7Gn1P7SpP6cQ', '6futYSDVulYR2PktBjTB5W', '6oMuImdp5ZcFhWP0ESe6mG', '4V8LLVI7PbaPR0K2TGSxFF', '73sIBHcqh3Z3NyqHKZ7FOL', '78xUyw6FkVZrRAtziFdtdu', '4oDjh8wNW5vDHyFRrDYC4k', '0gusqTJKxtU1UTmNRMHZcv', '3zq9XgqDVkjUAthjE50m9m', '2p1fiYHYiXz9qi0JJyxBzN', '2pAWfrd7WFF3XhVt9GooDL', '4sSSkVtrCTzENCgm2vokiY']\n"
     ]
    }
   ],
   "source": [
    "print(artist_id_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [],
   "source": [
    "def album_collector(artistid):\n",
    "    return sp.artist_albums('{}'.format(artistid), country=\"US\", limit=50)\n",
    "\n",
    "albums = [album_collector(x) for x in artist_id_list]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "list indices must be integers or slices, not str",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-114-c8eb0dda2c27>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[1;31m#collect album details and print\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 2\u001b[1;33m \u001b[0malbum_ids\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;33m[\u001b[0m\u001b[0malbum\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'uri'\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;32mfor\u001b[0m \u001b[0malbum\u001b[0m \u001b[1;32min\u001b[0m \u001b[0malbums\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'items'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      3\u001b[0m \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0malbum_ids\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      4\u001b[0m \u001b[0mprint\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0malbum_ids\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mTypeError\u001b[0m: list indices must be integers or slices, not str"
     ]
    }
   ],
   "source": [
    "#collect album details and print\n",
    "album_ids = [album['uri'] for album in albums['items']]\n",
    "print(len(album_ids))\n",
    "print(album_ids[0])\n",
    "\n",
    "all_tracks = []\n",
    "for album_id in album_ids:\n",
    "    tracks = sp.album_tracks(album_id, limit=50)\n",
    "    all_tracks.append(tracks)\n",
    "    \n",
    "for tracks, album in zip(all_tracks, albums.get('items')):\n",
    "    print(\n",
    "        len(tracks.get('items')),\n",
    "        \"\\t\",\n",
    "        album.get('name')\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---------------------------------------------------------------------------------------------------------------------------\n",
    "I think I can just parse this through to the functions below and it will give me a huge database with all the albums and tracks of all these artists.\n",
    "\n",
    "---------------------------------------------------------------------------------------------------------------------------\n",
    "# regular code picks up from here..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "albums = sp.artist_albums('2YZyLoL8N0Wb9xBt1NhZWg', country=\"US\", limit=50)\n",
    "print(albums['next'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50\n",
      "spotify:album:3pLdWdkj83EYfDN6H2N8MR\n"
     ]
    }
   ],
   "source": [
    "album_ids = [album['uri'] for album in albums['items']]\n",
    "print(len(album_ids))\n",
    "print(album_ids[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "all_tracks = []\n",
    "for album_id in album_ids:\n",
    "    tracks = sp.album_tracks(album_id, limit=50)\n",
    "    all_tracks.append(tracks)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "14 \t Black Panther The Album Music From And Inspired By\n",
      "14 \t Black Panther The Album Music From And Inspired By\n",
      "14 \t DAMN. COLLECTORS EDITION.\n",
      "14 \t DAMN. COLLECTORS EDITION.\n",
      "14 \t DAMN.\n",
      "14 \t DAMN.\n",
      "8 \t untitled unmastered.\n",
      "16 \t To Pimp A Butterfly\n",
      "16 \t To Pimp A Butterfly\n",
      "16 \t good kid, m.A.A.d city (Deluxe)\n",
      "17 \t good kid, m.A.A.d city (Deluxe)\n",
      "13 \t good kid, m.A.A.d city\n",
      "13 \t good kid, m.A.A.d city\n",
      "16 \t Section.80\n",
      "12 \t Overly Dedicated\n",
      "1 \t The Mantra\n",
      "1 \t The Mantra\n",
      "1 \t King's Dead (with Kendrick Lamar, Future & James Blake)\n",
      "1 \t King's Dead (with Kendrick Lamar, Future & James Blake)\n",
      "1 \t All The Stars (with SZA)\n",
      "1 \t All The Stars (with SZA)\n",
      "1 \t HUMBLE. (SKRILLEX REMIX)\n",
      "1 \t untitled 07 | levitate\n",
      "1 \t untitled 07 | levitate\n",
      "1 \t Alright\n",
      "1 \t Alright\n",
      "1 \t These Walls\n",
      "1 \t These Walls\n",
      "1 \t County Building Blues\n",
      "1 \t Swimming Pools (Drank) [Black Hippy Remix]\n",
      "1 \t i\n",
      "1 \t i\n",
      "1 \t Bitch, Don't Kill My Vibe (Remix)\n",
      "4 \t Sneak Peek: good kid, m.A.A.d city\n",
      "1 \t Swimming Pools (Drank)\n",
      "1 \t Swimming Pools (Drank)\n",
      "3 \t Push Thru (feat. Kendrick Lamar and Curren$y)\n",
      "1 \t My People - Single\n",
      "1 \t She Needs Me [Remix] (Ringtone)\n",
      "37 \t Gym Pump\n",
      "14 \t Rap Or Go To The League\n",
      "14 \t Rap Or Go To The League\n",
      "14 \t Rap Or Go To The League\n",
      "10 \t Relaxing Classical Playlist: Soothing Guitar Covers for All Day\n",
      "25 \t New Year, New Me\n",
      "15 \t Creed II: The Album\n",
      "15 \t Creed II: The Album\n",
      "14 \t Oxnard\n",
      "14 \t Oxnard\n",
      "2 \t Who R U?\n"
     ]
    }
   ],
   "source": [
    "\n",
    "for tracks, album in zip(all_tracks, albums.get('items')):\n",
    "    print(\n",
    "        len(tracks.get('items')),\n",
    "        \"\\t\",\n",
    "        album.get('name')\n",
    "    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "#going to need to remove duplicates"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "track_ids = []\n",
    "for tracks in all_tracks:\n",
    "    album_tracks = []\n",
    "    for track in tracks.get('items'):\n",
    "        album_tracks.append(track.get('uri'))\n",
    "    track_ids.append(album_tracks)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "track_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    tracks = sp.tracks(track_id_list)\n",
    "    track_objects.append(tracks)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "album_ids = [album['uri'] for album in albums['items']]\n",
    "print(len(album_ids))\n",
    "print(album_ids[0])\n",
    "\n",
    "all_tracks = []\n",
    "for album_id in album_ids:\n",
    "    tracks = sp.album_tracks(album_id, limit=50)\n",
    "    all_tracks.append(tracks)\n",
    "    \n",
    "for tracks, album in zip(all_tracks, albums.get('items')):\n",
    "    print(\n",
    "        len(tracks.get('items')),\n",
    "        \"\\t\",\n",
    "        album.get('name')\n",
    "    )\n",
    "\n",
    "track_ids = []\n",
    "for tracks in all_tracks:\n",
    "    album_tracks = []\n",
    "    for track in tracks.get('items'):\n",
    "        album_tracks.append(track.get('uri'))\n",
    "    track_ids.append(album_tracks)\n",
    "\n",
    "\n",
    "track_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    tracks = sp.tracks(track_id_list)\n",
    "    track_objects.append(tracks)\n",
    "\n",
    "#collecting other features\n",
    "\n",
    "audio_feature_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    features = sp.audio_features(track_id_list)\n",
    "    audio_feature_objects.append(features)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "spotify_data_kendrick = {\n",
    "    \"audio_features\": audio_feature_objects,\n",
    "    \"tracks\": track_objects\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "name                                                    Black Panther\n",
      "duration_ms                                                    130613\n",
      "popularity                                                         62\n",
      "num_markets                                                        79\n",
      "album               Black Panther The Album Music From And Inspire...\n",
      "disc_number                                                         1\n",
      "is_explicit                                                      True\n",
      "track_number                                                        1\n",
      "release_date                                               2018-02-09\n",
      "artist                                                 Kendrick Lamar\n",
      "danceability                                                    0.618\n",
      "energy                                                          0.582\n",
      "key                                                                 1\n",
      "loudness                                                       -9.454\n",
      "mode                                                                1\n",
      "speechiness                                                     0.297\n",
      "acousticness                                                    0.625\n",
      "instrumentalness                                             3.84e-06\n",
      "liveness                                                        0.265\n",
      "valence                                                          0.48\n",
      "tempo                                                          90.035\n",
      "time_signature                                                      4\n",
      "Name: 0, dtype: object\n"
     ]
    }
   ],
   "source": [
    "\n",
    "\n",
    "df = pd.DataFrame(columns=[\n",
    "    'name',\n",
    "    'duration_ms',\n",
    "    'popularity',\n",
    "    'num_markets',\n",
    "    'album',\n",
    "    'disc_number',\n",
    "    'is_explicit',\n",
    "    'track_number',\n",
    "    'release_date',\n",
    "    'artist',\n",
    "    'danceability',\n",
    "    'energy',\n",
    "    'key',\n",
    "    'loudness',\n",
    "    'mode',\n",
    "    'speechiness',\n",
    "    'acousticness',\n",
    "    'instrumentalness',\n",
    "    'liveness',\n",
    "    'valence',\n",
    "    'tempo',\n",
    "    'time_signature',\n",
    "])\n",
    "for album_info, album_features in zip(\n",
    "        spotify_data_kendrick.get('tracks'), \n",
    "        spotify_data_kendrick.get('audio_features')\n",
    "        ):\n",
    "    for track_info, track_features in zip(\n",
    "        album_info.get('tracks'),\n",
    "        album_features\n",
    "        ):\n",
    "        y = {\n",
    "            'name': track_info['name'],\n",
    "            'duration_ms': track_info['duration_ms'],\n",
    "            'popularity': track_info['popularity'],\n",
    "            'num_markets': len(track_info['available_markets']),\n",
    "            'album': track_info['album']['name'],\n",
    "            'disc_number': track_info['disc_number'],\n",
    "            'is_explicit': track_info['explicit'],\n",
    "            'track_number': track_info['track_number'],\n",
    "            'release_date': track_info['album']['release_date'],\n",
    "            'artist': track_info['artists'][0]['name'],\n",
    "            'danceability': track_features['danceability'],\n",
    "            'energy': track_features['energy'],\n",
    "            'key': track_features['key'],\n",
    "            'loudness': track_features['loudness'],\n",
    "            'mode': track_features['mode'],\n",
    "            'speechiness': track_features['speechiness'],\n",
    "            'acousticness': track_features['acousticness'],\n",
    "            'instrumentalness': track_features['instrumentalness'],\n",
    "            'liveness': track_features['liveness'],\n",
    "            'valence': track_features['valence'],\n",
    "            'tempo': track_features['tempo'],\n",
    "            'time_signature': track_features['time_signature'],\n",
    "        }\n",
    "        df = df.append(y, ignore_index=True)\n",
    "df.to_csv( index=False)\n",
    "print(df.iloc[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\kendrick.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "#save lyrics for kendrick\n",
    "\n",
    "#kendrick = api.search_artist('Kendrick Lamar', max_songs=100)\n",
    "#kendricklyrics = kendrick.save_lyrics()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "def getLyric(song, artist):\n",
    "#return lyrics for a single song or None if not found\n",
    "    try: \n",
    "        return api.search_song(song, artist).lyrics\n",
    "    except:\n",
    "            #if there was an error then the lyrics weren't found so return None\n",
    "        return"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "#cleaning spotify data\n",
    "df = df[df['artist'] == 'Kendrick Lamar']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "#clean to album level\n",
    "damn = df[df['album'] == 'DAMN.']\n",
    "damn = damn[damn['is_explicit'] == 1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>duration_ms</th>\n",
       "      <th>popularity</th>\n",
       "      <th>num_markets</th>\n",
       "      <th>album</th>\n",
       "      <th>disc_number</th>\n",
       "      <th>is_explicit</th>\n",
       "      <th>track_number</th>\n",
       "      <th>release_date</th>\n",
       "      <th>artist</th>\n",
       "      <th>...</th>\n",
       "      <th>key</th>\n",
       "      <th>loudness</th>\n",
       "      <th>mode</th>\n",
       "      <th>speechiness</th>\n",
       "      <th>acousticness</th>\n",
       "      <th>instrumentalness</th>\n",
       "      <th>liveness</th>\n",
       "      <th>valence</th>\n",
       "      <th>tempo</th>\n",
       "      <th>time_signature</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>BLOOD.</td>\n",
       "      <td>118066</td>\n",
       "      <td>61</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>Kendrick Lamar</td>\n",
       "      <td>...</td>\n",
       "      <td>8</td>\n",
       "      <td>-16.780</td>\n",
       "      <td>0</td>\n",
       "      <td>0.2650</td>\n",
       "      <td>0.142000</td>\n",
       "      <td>0.085900</td>\n",
       "      <td>0.5500</td>\n",
       "      <td>0.494</td>\n",
       "      <td>156.907</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>DNA.</td>\n",
       "      <td>185946</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>Kendrick Lamar</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.664</td>\n",
       "      <td>1</td>\n",
       "      <td>0.3570</td>\n",
       "      <td>0.004540</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0842</td>\n",
       "      <td>0.422</td>\n",
       "      <td>139.913</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>YAH.</td>\n",
       "      <td>160293</td>\n",
       "      <td>65</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>3</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>Kendrick Lamar</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>-7.893</td>\n",
       "      <td>1</td>\n",
       "      <td>0.1960</td>\n",
       "      <td>0.576000</td>\n",
       "      <td>0.000005</td>\n",
       "      <td>0.2260</td>\n",
       "      <td>0.648</td>\n",
       "      <td>69.986</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>ELEMENT.</td>\n",
       "      <td>208733</td>\n",
       "      <td>72</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>4</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>Kendrick Lamar</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>-4.547</td>\n",
       "      <td>0</td>\n",
       "      <td>0.4850</td>\n",
       "      <td>0.204000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.2460</td>\n",
       "      <td>0.483</td>\n",
       "      <td>189.891</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>FEEL.</td>\n",
       "      <td>214826</td>\n",
       "      <td>64</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>5</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>Kendrick Lamar</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>-8.382</td>\n",
       "      <td>1</td>\n",
       "      <td>0.3490</td>\n",
       "      <td>0.137000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.1390</td>\n",
       "      <td>0.553</td>\n",
       "      <td>109.968</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>LOYALTY. FEAT. RIHANNA.</td>\n",
       "      <td>227360</td>\n",
       "      <td>73</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>6</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>Kendrick Lamar</td>\n",
       "      <td>...</td>\n",
       "      <td>9</td>\n",
       "      <td>-8.983</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0573</td>\n",
       "      <td>0.026500</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.2000</td>\n",
       "      <td>0.419</td>\n",
       "      <td>110.684</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>PRIDE.</td>\n",
       "      <td>275253</td>\n",
       "      <td>66</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>7</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>Kendrick Lamar</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>-7.056</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0572</td>\n",
       "      <td>0.078600</td>\n",
       "      <td>0.000017</td>\n",
       "      <td>0.1540</td>\n",
       "      <td>0.370</td>\n",
       "      <td>138.842</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>HUMBLE.</td>\n",
       "      <td>177000</td>\n",
       "      <td>83</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>8</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>Kendrick Lamar</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.638</td>\n",
       "      <td>0</td>\n",
       "      <td>0.1020</td>\n",
       "      <td>0.000282</td>\n",
       "      <td>0.000054</td>\n",
       "      <td>0.0958</td>\n",
       "      <td>0.421</td>\n",
       "      <td>150.011</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>LUST.</td>\n",
       "      <td>307880</td>\n",
       "      <td>64</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>9</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>Kendrick Lamar</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>-9.197</td>\n",
       "      <td>0</td>\n",
       "      <td>0.5080</td>\n",
       "      <td>0.193000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.1040</td>\n",
       "      <td>0.566</td>\n",
       "      <td>94.241</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>LOVE. FEAT. ZACARI.</td>\n",
       "      <td>213400</td>\n",
       "      <td>78</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>10</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>Kendrick Lamar</td>\n",
       "      <td>...</td>\n",
       "      <td>10</td>\n",
       "      <td>-7.343</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0924</td>\n",
       "      <td>0.264000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.1530</td>\n",
       "      <td>0.779</td>\n",
       "      <td>126.058</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>XXX. FEAT. U2.</td>\n",
       "      <td>254200</td>\n",
       "      <td>67</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>11</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>Kendrick Lamar</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>-6.899</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4140</td>\n",
       "      <td>0.138000</td>\n",
       "      <td>0.000002</td>\n",
       "      <td>0.1100</td>\n",
       "      <td>0.293</td>\n",
       "      <td>170.115</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>67</th>\n",
       "      <td>FEAR.</td>\n",
       "      <td>460573</td>\n",
       "      <td>65</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>12</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>Kendrick Lamar</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>-7.039</td>\n",
       "      <td>1</td>\n",
       "      <td>0.2810</td>\n",
       "      <td>0.604000</td>\n",
       "      <td>0.000007</td>\n",
       "      <td>0.5270</td>\n",
       "      <td>0.434</td>\n",
       "      <td>150.414</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>GOD.</td>\n",
       "      <td>248826</td>\n",
       "      <td>64</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>13</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>Kendrick Lamar</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>-5.800</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0813</td>\n",
       "      <td>0.034700</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.2760</td>\n",
       "      <td>0.205</td>\n",
       "      <td>132.980</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>DUCKWORTH.</td>\n",
       "      <td>248613</td>\n",
       "      <td>64</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>14</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>Kendrick Lamar</td>\n",
       "      <td>...</td>\n",
       "      <td>7</td>\n",
       "      <td>-6.873</td>\n",
       "      <td>1</td>\n",
       "      <td>0.6150</td>\n",
       "      <td>0.053600</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.2580</td>\n",
       "      <td>0.632</td>\n",
       "      <td>174.516</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>14 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                       name duration_ms popularity num_markets  album  \\\n",
       "56                   BLOOD.      118066         61          79  DAMN.   \n",
       "57                     DNA.      185946         79          79  DAMN.   \n",
       "58                     YAH.      160293         65          79  DAMN.   \n",
       "59                 ELEMENT.      208733         72          79  DAMN.   \n",
       "60                    FEEL.      214826         64          79  DAMN.   \n",
       "61  LOYALTY. FEAT. RIHANNA.      227360         73          79  DAMN.   \n",
       "62                   PRIDE.      275253         66          79  DAMN.   \n",
       "63                  HUMBLE.      177000         83          79  DAMN.   \n",
       "64                    LUST.      307880         64          79  DAMN.   \n",
       "65      LOVE. FEAT. ZACARI.      213400         78          79  DAMN.   \n",
       "66           XXX. FEAT. U2.      254200         67          79  DAMN.   \n",
       "67                    FEAR.      460573         65          79  DAMN.   \n",
       "68                     GOD.      248826         64          79  DAMN.   \n",
       "69               DUCKWORTH.      248613         64          79  DAMN.   \n",
       "\n",
       "   disc_number is_explicit track_number release_date          artist  ...  \\\n",
       "56           1        True            1   2017-04-14  Kendrick Lamar  ...   \n",
       "57           1        True            2   2017-04-14  Kendrick Lamar  ...   \n",
       "58           1        True            3   2017-04-14  Kendrick Lamar  ...   \n",
       "59           1        True            4   2017-04-14  Kendrick Lamar  ...   \n",
       "60           1        True            5   2017-04-14  Kendrick Lamar  ...   \n",
       "61           1        True            6   2017-04-14  Kendrick Lamar  ...   \n",
       "62           1        True            7   2017-04-14  Kendrick Lamar  ...   \n",
       "63           1        True            8   2017-04-14  Kendrick Lamar  ...   \n",
       "64           1        True            9   2017-04-14  Kendrick Lamar  ...   \n",
       "65           1        True           10   2017-04-14  Kendrick Lamar  ...   \n",
       "66           1        True           11   2017-04-14  Kendrick Lamar  ...   \n",
       "67           1        True           12   2017-04-14  Kendrick Lamar  ...   \n",
       "68           1        True           13   2017-04-14  Kendrick Lamar  ...   \n",
       "69           1        True           14   2017-04-14  Kendrick Lamar  ...   \n",
       "\n",
       "    key  loudness mode  speechiness acousticness  instrumentalness  liveness  \\\n",
       "56    8   -16.780    0       0.2650     0.142000          0.085900    0.5500   \n",
       "57    1    -6.664    1       0.3570     0.004540          0.000000    0.0842   \n",
       "58    1    -7.893    1       0.1960     0.576000          0.000005    0.2260   \n",
       "59    4    -4.547    0       0.4850     0.204000          0.000000    0.2460   \n",
       "60    0    -8.382    1       0.3490     0.137000          0.000000    0.1390   \n",
       "61    9    -8.983    0       0.0573     0.026500          0.000000    0.2000   \n",
       "62    4    -7.056    0       0.0572     0.078600          0.000017    0.1540   \n",
       "63    1    -6.638    0       0.1020     0.000282          0.000054    0.0958   \n",
       "64    3    -9.197    0       0.5080     0.193000          0.000000    0.1040   \n",
       "65   10    -7.343    1       0.0924     0.264000          0.000000    0.1530   \n",
       "66    1    -6.899    1       0.4140     0.138000          0.000002    0.1100   \n",
       "67    1    -7.039    1       0.2810     0.604000          0.000007    0.5270   \n",
       "68    0    -5.800    1       0.0813     0.034700          0.000000    0.2760   \n",
       "69    7    -6.873    1       0.6150     0.053600          0.000000    0.2580   \n",
       "\n",
       "    valence    tempo  time_signature  \n",
       "56    0.494  156.907               4  \n",
       "57    0.422  139.913               4  \n",
       "58    0.648   69.986               4  \n",
       "59    0.483  189.891               4  \n",
       "60    0.553  109.968               4  \n",
       "61    0.419  110.684               4  \n",
       "62    0.370  138.842               4  \n",
       "63    0.421  150.011               4  \n",
       "64    0.566   94.241               4  \n",
       "65    0.779  126.058               4  \n",
       "66    0.293  170.115               4  \n",
       "67    0.434  150.414               4  \n",
       "68    0.205  132.980               4  \n",
       "69    0.632  174.516               4  \n",
       "\n",
       "[14 rows x 22 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "damn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"BLOOD.\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"DNA.\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"YAH.\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"ELEMENT.\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"FEEL.\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"LOYALTY. FEAT. RIHANNA.\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"PRIDE.\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"HUMBLE.\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"LUST.\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"LOVE. FEAT. ZACARI.\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"XXX. FEAT. U2.\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"FEAR.\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"GOD.\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"DUCKWORTH.\" by Kendrick Lamar...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "damn_list=[]\n",
    "for row in damn['name']:\n",
    "\n",
    "    damn_list.append(getLyric(row, 'Kendrick Lamar')),\n",
    "        \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "damnlyricsdf = pd.DataFrame(damn_list, columns=['string_values'])\n",
    "damnlyricsdf.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\damnlyrics.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0     [Intro: Bēkon]\\nIs it wickedness?\\nIs it weakn...\n",
      "1     [Verse 1]\\nI got, I got, I got, I got—\\nLoyalt...\n",
      "2     [Intro: Kid Capri]\\nNew shit, new Kung Fu Kenn...\n",
      "3     [Intro: Kid Capri & Kendrick Lamar]\\nNew Kung ...\n",
      "4     [Intro: Kendrick Lamar & Chelsea Blythe]\\nAin'...\n",
      "5     [Intro: Mr. Talkbox]\\n\\n[Pre-Chorus: DJ Dahi]\\...\n",
      "6     [Intro: Bēkon]\\nLove's gonna get you killed\\nB...\n",
      "7     [Intro]\\nNobody pray for me\\nIt's been that da...\n",
      "8     [Chorus: Kendrick Lamar]\\nI need some water\\nS...\n",
      "9     [Letra de \"Kendrick Lamar - LOVE. ft. Zacari (...\n",
      "10    [Letra de \"Kendrick Lamar - XXX. ft. U2 (Tradu...\n",
      "11    [Intro]\\nPoverty's paradise\\nI don’t think I c...\n",
      "12    [Chorus]\\nThis what God feel like, huh, he-yea...\n",
      "13    [Intro: Bēkon & Kid Capri]\\nIt was always me v...\n",
      "Name: string_values, dtype: object\n"
     ]
    }
   ],
   "source": [
    "print(damnlyricsdf['string_values'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0     [Intro: Bēkon]\\nIs it wickedness?\\nIs it weakn...\n",
      "1     [Verse 1]\\nI got, I got, I got, I got—\\nLoyalt...\n",
      "2     [Intro: Kid Capri]\\nNew shit, new Kung Fu Kenn...\n",
      "3     [Intro: Kid Capri & Kendrick Lamar]\\nNew Kung ...\n",
      "4     [Intro: Kendrick Lamar & Chelsea Blythe]\\nAin'...\n",
      "5     [Intro: Mr. Talkbox]\\n\\n[Pre-Chorus: DJ Dahi]\\...\n",
      "6     [Intro: Bēkon]\\nLove's gonna get you killed\\nB...\n",
      "7     [Intro]\\nNobody pray for me\\nIt's been that da...\n",
      "8     [Chorus: Kendrick Lamar]\\nI need some water\\nS...\n",
      "9     [Letra de \"Kendrick Lamar - LOVE. ft. Zacari (...\n",
      "10    [Letra de \"Kendrick Lamar - XXX. ft. U2 (Tradu...\n",
      "11    [Intro]\\nPoverty's paradise\\nI don’t think I c...\n",
      "12    [Chorus]\\nThis what God feel like, huh, he-yea...\n",
      "13    [Intro: Bēkon & Kid Capri]\\nIt was always me v...\n",
      "Name: string_values, dtype: object\n"
     ]
    }
   ],
   "source": [
    "damnlyricsdf['string_values'] = damnlyricsdf['string_values']\n",
    "print(damnlyricsdf['string_values'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "damn = damn.reset_index()\n",
    "damn = damn.drop('index',1)\n",
    "\n",
    "damn['lyrics']=damnlyricsdf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"LOVE\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"XXX\" by Kendrick Lamar...\n",
      "Done.\n",
      "0     [Intro: Bēkon]\\nIs it wickedness?\\nIs it weakn...\n",
      "1     [Verse 1]\\nI got, I got, I got, I got—\\nLoyalt...\n",
      "2     [Intro: Kid Capri]\\nNew shit, new Kung Fu Kenn...\n",
      "3     [Intro: Kid Capri & Kendrick Lamar]\\nNew Kung ...\n",
      "4     [Intro: Kendrick Lamar & Chelsea Blythe]\\nAin'...\n",
      "5     [Intro: Mr. Talkbox]\\n\\n[Pre-Chorus: DJ Dahi]\\...\n",
      "6     [Intro: Bēkon]\\nLove's gonna get you killed\\nB...\n",
      "7     [Intro]\\nNobody pray for me\\nIt's been that da...\n",
      "8     [Chorus: Kendrick Lamar]\\nI need some water\\nS...\n",
      "9     [Intro: Kendrick Lamar]\\nDamn, love or lust\\nD...\n",
      "10    [Intro: Bēkon & Kid Capri]\\nAmerica, God bless...\n",
      "11    [Intro]\\nPoverty's paradise\\nI don’t think I c...\n",
      "12    [Chorus]\\nThis what God feel like, huh, he-yea...\n",
      "13    [Intro: Bēkon & Kid Capri]\\nIt was always me v...\n",
      "Name: lyrics, dtype: object\n"
     ]
    }
   ],
   "source": [
    "#collect and replace abberant lyrics\n",
    "love = getLyric('LOVE', 'Kendrick Lamar')\n",
    "xxx = getLyric('XXX', 'Kendrick Lamar')\n",
    "\n",
    "damn['lyrics'].iloc[9] = love\n",
    "damn['lyrics'].iloc[10] = xxx\n",
    "print(damn['lyrics'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Sherane a.k.a Master Splinter’s Daughter\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Bitch, Don’t Kill My Vibe\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Backseat Freestyle\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"The Art of Peer Pressure\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Money Trees\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Poetic Justice\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"good kid\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"m.A.A.d city\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Swimming Pools (Drank) - Extended Version\" by Kendrick Lamar...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Sing About Me, I'm Dying Of Thirst\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Real\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Compton\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Bitch, Don’t Kill My Vibe - Remix\" by Kendrick Lamar...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album goodkidmadcity\n",
    "#clean to album level\n",
    "goodkid = df[df['album'] == 'good kid, m.A.A.d city']\n",
    "goodkid = goodkid[goodkid['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "goodkid_list=[]\n",
    "for row in goodkid['name']:\n",
    "\n",
    "    goodkid_list.append(getLyric(row, 'Kendrick Lamar')),\n",
    "\n",
    "goodkidlyrics = pd.DataFrame(goodkid_list, columns=['string_values'])\n",
    "\n",
    "goodkid = goodkid.reset_index()\n",
    "#add lyrics\n",
    "goodkid['lyrics'] = goodkidlyrics['string_values']\n",
    "\n",
    "#clean\n",
    "goodkid = goodkid.drop('index', 1)\n",
    "goodkid = goodkid.drop([12])\n",
    "goodkid = goodkid.drop([8])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"F*ck Your Ethnicity\" by Kendrick Lamar...\n",
      "No results found for: 'F*ck Your Ethnicity Kendrick Lamar'\n",
      "Searching for \"Hol' Up\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"A.D.H.D\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"No Make-Up (Her Vice)\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Tammy's Song (Her Evils)\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Chapter Six\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Ronald Reagan Era\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Poe Mans Dreams (His Vice)\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"The Spiteful Chant\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Chapter Ten\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Keisha's Song (Her Pain)\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Rigamortus\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Kush & Corinthians\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Blow My High (Members Only)\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Ab-Souls Outro\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"HiiiPower\" by Kendrick Lamar...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album section80\n",
    "#clean to album level\n",
    "section80 = df[df['album'] == 'Section.80']\n",
    "section80 = section80[section80['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "section80_list=[]\n",
    "for row in section80['name']:\n",
    "\n",
    "    section80_list.append(getLyric(row, 'Kendrick Lamar')),\n",
    "\n",
    "section80lyrics = pd.DataFrame(section80_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "section80 = section80.reset_index()\n",
    "#add lyrics\n",
    "section80['lyrics'] = section80lyrics['string_values']\n",
    "#clean\n",
    "section80 = section80.drop('index', 1)\n",
    "section80 = section80.drop([0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Wesley's Theory\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"For Free? - Interlude\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"King Kunta\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Institutionalized\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"These Walls\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"u\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Alright\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"For Sale? - Interlude\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Momma\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Hood Politics\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"How Much A Dollar Cost\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Complexion (A Zulu Love)\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"The Blacker The Berry\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"You Ain't Gotta Lie (Momma Said)\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"i\" by Kendrick Lamar...\n",
      "Done.\n",
      "Searching for \"Mortal Man\" by Kendrick Lamar...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album tpab\n",
    "#clean to album level\n",
    "tpab = df[df['album'] == 'To Pimp A Butterfly']\n",
    "tpab = tpab[tpab['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "tpab_list=[]\n",
    "for row in tpab['name']:\n",
    "\n",
    "    tpab_list.append(getLyric(row, 'Kendrick Lamar')),\n",
    "\n",
    "tpablyrics = pd.DataFrame(tpab_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "tpab = tpab.reset_index()\n",
    "#add lyrics\n",
    "tpab['lyrics'] = tpablyrics['string_values']\n",
    "#clean\n",
    "tpab = tpab.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                       name duration_ms popularity num_markets  album  \\\n",
      "0                    BLOOD.      118066         61          79  DAMN.   \n",
      "1                      DNA.      185946         79          79  DAMN.   \n",
      "2                      YAH.      160293         65          79  DAMN.   \n",
      "3                  ELEMENT.      208733         72          79  DAMN.   \n",
      "4                     FEEL.      214826         64          79  DAMN.   \n",
      "5   LOYALTY. FEAT. RIHANNA.      227360         73          79  DAMN.   \n",
      "6                    PRIDE.      275253         66          79  DAMN.   \n",
      "7                   HUMBLE.      177000         83          79  DAMN.   \n",
      "8                     LUST.      307880         64          79  DAMN.   \n",
      "9       LOVE. FEAT. ZACARI.      213400         78          79  DAMN.   \n",
      "10           XXX. FEAT. U2.      254200         67          79  DAMN.   \n",
      "11                    FEAR.      460573         65          79  DAMN.   \n",
      "12                     GOD.      248826         64          79  DAMN.   \n",
      "13               DUCKWORTH.      248613         64          79  DAMN.   \n",
      "\n",
      "   disc_number is_explicit track_number release_date          artist  ...  \\\n",
      "0            1        True            1   2017-04-14  Kendrick Lamar  ...   \n",
      "1            1        True            2   2017-04-14  Kendrick Lamar  ...   \n",
      "2            1        True            3   2017-04-14  Kendrick Lamar  ...   \n",
      "3            1        True            4   2017-04-14  Kendrick Lamar  ...   \n",
      "4            1        True            5   2017-04-14  Kendrick Lamar  ...   \n",
      "5            1        True            6   2017-04-14  Kendrick Lamar  ...   \n",
      "6            1        True            7   2017-04-14  Kendrick Lamar  ...   \n",
      "7            1        True            8   2017-04-14  Kendrick Lamar  ...   \n",
      "8            1        True            9   2017-04-14  Kendrick Lamar  ...   \n",
      "9            1        True           10   2017-04-14  Kendrick Lamar  ...   \n",
      "10           1        True           11   2017-04-14  Kendrick Lamar  ...   \n",
      "11           1        True           12   2017-04-14  Kendrick Lamar  ...   \n",
      "12           1        True           13   2017-04-14  Kendrick Lamar  ...   \n",
      "13           1        True           14   2017-04-14  Kendrick Lamar  ...   \n",
      "\n",
      "    loudness  mode speechiness  acousticness instrumentalness  liveness  \\\n",
      "0    -16.780     0      0.2650      0.142000         0.085900    0.5500   \n",
      "1     -6.664     1      0.3570      0.004540         0.000000    0.0842   \n",
      "2     -7.893     1      0.1960      0.576000         0.000005    0.2260   \n",
      "3     -4.547     0      0.4850      0.204000         0.000000    0.2460   \n",
      "4     -8.382     1      0.3490      0.137000         0.000000    0.1390   \n",
      "5     -8.983     0      0.0573      0.026500         0.000000    0.2000   \n",
      "6     -7.056     0      0.0572      0.078600         0.000017    0.1540   \n",
      "7     -6.638     0      0.1020      0.000282         0.000054    0.0958   \n",
      "8     -9.197     0      0.5080      0.193000         0.000000    0.1040   \n",
      "9     -7.343     1      0.0924      0.264000         0.000000    0.1530   \n",
      "10    -6.899     1      0.4140      0.138000         0.000002    0.1100   \n",
      "11    -7.039     1      0.2810      0.604000         0.000007    0.5270   \n",
      "12    -5.800     1      0.0813      0.034700         0.000000    0.2760   \n",
      "13    -6.873     1      0.6150      0.053600         0.000000    0.2580   \n",
      "\n",
      "    valence    tempo  time_signature  \\\n",
      "0     0.494  156.907               4   \n",
      "1     0.422  139.913               4   \n",
      "2     0.648   69.986               4   \n",
      "3     0.483  189.891               4   \n",
      "4     0.553  109.968               4   \n",
      "5     0.419  110.684               4   \n",
      "6     0.370  138.842               4   \n",
      "7     0.421  150.011               4   \n",
      "8     0.566   94.241               4   \n",
      "9     0.779  126.058               4   \n",
      "10    0.293  170.115               4   \n",
      "11    0.434  150.414               4   \n",
      "12    0.205  132.980               4   \n",
      "13    0.632  174.516               4   \n",
      "\n",
      "                                               lyrics  \n",
      "0   [Intro: Bēkon]\\nIs it wickedness?\\nIs it weakn...  \n",
      "1   [Verse 1]\\nI got, I got, I got, I got—\\nLoyalt...  \n",
      "2   [Intro: Kid Capri]\\nNew shit, new Kung Fu Kenn...  \n",
      "3   [Intro: Kid Capri & Kendrick Lamar]\\nNew Kung ...  \n",
      "4   [Intro: Kendrick Lamar & Chelsea Blythe]\\nAin'...  \n",
      "5   [Intro: Mr. Talkbox]\\n\\n[Pre-Chorus: DJ Dahi]\\...  \n",
      "6   [Intro: Bēkon]\\nLove's gonna get you killed\\nB...  \n",
      "7   [Intro]\\nNobody pray for me\\nIt's been that da...  \n",
      "8   [Chorus: Kendrick Lamar]\\nI need some water\\nS...  \n",
      "9   [Intro: Kendrick Lamar]\\nDamn, love or lust\\nD...  \n",
      "10  [Intro: Bēkon & Kid Capri]\\nAmerica, God bless...  \n",
      "11  [Intro]\\nPoverty's paradise\\nI don’t think I c...  \n",
      "12  [Chorus]\\nThis what God feel like, huh, he-yea...  \n",
      "13  [Intro: Bēkon & Kid Capri]\\nIt was always me v...  \n",
      "\n",
      "[14 rows x 23 columns]\n"
     ]
    }
   ],
   "source": [
    "print(damn)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---------------------------------------------------------------------------------------------------------------------------------------"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "#joinall dataframes for kendrick\n",
    "kendrick = pd.concat([tpab,section80,damn,goodkid])\n",
    "kendrick=kendrick.reset_index()\n",
    "#add region data\n",
    "region= []\n",
    "for row in kendrick['name']:\n",
    "    region.append('westcoast')\n",
    "\n",
    "kendrick['region'] = region\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "kendrick.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\kendrickfinal.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>index</th>\n",
       "      <th>name</th>\n",
       "      <th>duration_ms</th>\n",
       "      <th>popularity</th>\n",
       "      <th>num_markets</th>\n",
       "      <th>album</th>\n",
       "      <th>disc_number</th>\n",
       "      <th>is_explicit</th>\n",
       "      <th>track_number</th>\n",
       "      <th>release_date</th>\n",
       "      <th>...</th>\n",
       "      <th>mode</th>\n",
       "      <th>speechiness</th>\n",
       "      <th>acousticness</th>\n",
       "      <th>instrumentalness</th>\n",
       "      <th>liveness</th>\n",
       "      <th>valence</th>\n",
       "      <th>tempo</th>\n",
       "      <th>time_signature</th>\n",
       "      <th>lyrics</th>\n",
       "      <th>region</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Wesley's Theory</td>\n",
       "      <td>287360</td>\n",
       "      <td>60</td>\n",
       "      <td>78</td>\n",
       "      <td>To Pimp A Butterfly</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>2015-03-16</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.2650</td>\n",
       "      <td>0.359000</td>\n",
       "      <td>0.000028</td>\n",
       "      <td>0.2600</td>\n",
       "      <td>0.5070</td>\n",
       "      <td>114.449</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Flying Lotus &amp; Ronald \"Flippa\" Co...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>For Free? - Interlude</td>\n",
       "      <td>130893</td>\n",
       "      <td>55</td>\n",
       "      <td>78</td>\n",
       "      <td>To Pimp A Butterfly</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>2</td>\n",
       "      <td>2015-03-16</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.1970</td>\n",
       "      <td>0.588000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.3700</td>\n",
       "      <td>0.7450</td>\n",
       "      <td>129.313</td>\n",
       "      <td>1</td>\n",
       "      <td>[Produced by Terrace Martin]\\n\\n[Intro: Darlen...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>King Kunta</td>\n",
       "      <td>234693</td>\n",
       "      <td>73</td>\n",
       "      <td>78</td>\n",
       "      <td>To Pimp A Butterfly</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>3</td>\n",
       "      <td>2015-03-16</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0977</td>\n",
       "      <td>0.005890</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.1540</td>\n",
       "      <td>0.4890</td>\n",
       "      <td>107.059</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Sounwave; Additional production b...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Institutionalized</td>\n",
       "      <td>271773</td>\n",
       "      <td>59</td>\n",
       "      <td>78</td>\n",
       "      <td>To Pimp A Butterfly</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>4</td>\n",
       "      <td>2015-03-16</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.4530</td>\n",
       "      <td>0.112000</td>\n",
       "      <td>0.000001</td>\n",
       "      <td>0.1290</td>\n",
       "      <td>0.5680</td>\n",
       "      <td>81.114</td>\n",
       "      <td>4</td>\n",
       "      <td>[Part I]\\n\\n[Intro: Kendrick Lamar]\\nWhat mone...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>These Walls</td>\n",
       "      <td>300973</td>\n",
       "      <td>61</td>\n",
       "      <td>78</td>\n",
       "      <td>To Pimp A Butterfly</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>5</td>\n",
       "      <td>2015-03-16</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.1370</td>\n",
       "      <td>0.110000</td>\n",
       "      <td>0.000004</td>\n",
       "      <td>0.2020</td>\n",
       "      <td>0.3730</td>\n",
       "      <td>108.005</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Terrace Martin &amp; Larrance Dopson;...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>5</td>\n",
       "      <td>u</td>\n",
       "      <td>268493</td>\n",
       "      <td>58</td>\n",
       "      <td>78</td>\n",
       "      <td>To Pimp A Butterfly</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>6</td>\n",
       "      <td>2015-03-16</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.4320</td>\n",
       "      <td>0.260000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.4610</td>\n",
       "      <td>0.5800</td>\n",
       "      <td>71.547</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Taz Arnold &amp; Whoarei; Additional ...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>6</td>\n",
       "      <td>Alright</td>\n",
       "      <td>219333</td>\n",
       "      <td>70</td>\n",
       "      <td>78</td>\n",
       "      <td>To Pimp A Butterfly</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>7</td>\n",
       "      <td>2015-03-16</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.2380</td>\n",
       "      <td>0.074200</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0827</td>\n",
       "      <td>0.5580</td>\n",
       "      <td>110.034</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Pharrell Williams &amp; Sounwave]\\n[D...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>For Sale? - Interlude</td>\n",
       "      <td>291720</td>\n",
       "      <td>55</td>\n",
       "      <td>78</td>\n",
       "      <td>To Pimp A Butterfly</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>8</td>\n",
       "      <td>2015-03-16</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0831</td>\n",
       "      <td>0.442000</td>\n",
       "      <td>0.000115</td>\n",
       "      <td>0.1210</td>\n",
       "      <td>0.2760</td>\n",
       "      <td>79.036</td>\n",
       "      <td>3</td>\n",
       "      <td>[Produced by Taz Arnold; Additional production...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>8</td>\n",
       "      <td>Momma</td>\n",
       "      <td>283120</td>\n",
       "      <td>56</td>\n",
       "      <td>78</td>\n",
       "      <td>To Pimp A Butterfly</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>9</td>\n",
       "      <td>2015-03-16</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.3250</td>\n",
       "      <td>0.254000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.6650</td>\n",
       "      <td>0.5150</td>\n",
       "      <td>111.914</td>\n",
       "      <td>5</td>\n",
       "      <td>[Produced by Knxwledge &amp; Taz Arnold]\\n\\n[Intro...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>9</td>\n",
       "      <td>Hood Politics</td>\n",
       "      <td>292520</td>\n",
       "      <td>59</td>\n",
       "      <td>78</td>\n",
       "      <td>To Pimp A Butterfly</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>10</td>\n",
       "      <td>2015-03-16</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.3760</td>\n",
       "      <td>0.145000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.1200</td>\n",
       "      <td>0.3690</td>\n",
       "      <td>87.912</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Tae Beast, Sounwave &amp; Thundercat]...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>10</td>\n",
       "      <td>How Much A Dollar Cost</td>\n",
       "      <td>261746</td>\n",
       "      <td>58</td>\n",
       "      <td>78</td>\n",
       "      <td>To Pimp A Butterfly</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>11</td>\n",
       "      <td>2015-03-16</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.1980</td>\n",
       "      <td>0.415000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.1350</td>\n",
       "      <td>0.3340</td>\n",
       "      <td>87.948</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by LoveDragon]\\n\\n[Verse 1: Kendrick...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>11</td>\n",
       "      <td>Complexion (A Zulu Love)</td>\n",
       "      <td>263360</td>\n",
       "      <td>56</td>\n",
       "      <td>78</td>\n",
       "      <td>To Pimp A Butterfly</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>12</td>\n",
       "      <td>2015-03-16</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.3030</td>\n",
       "      <td>0.566000</td>\n",
       "      <td>0.000005</td>\n",
       "      <td>0.2190</td>\n",
       "      <td>0.3700</td>\n",
       "      <td>89.953</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Thundercat &amp; Sounwave; Additional...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>12</td>\n",
       "      <td>The Blacker The Berry</td>\n",
       "      <td>328826</td>\n",
       "      <td>60</td>\n",
       "      <td>78</td>\n",
       "      <td>To Pimp A Butterfly</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>13</td>\n",
       "      <td>2015-03-16</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.3050</td>\n",
       "      <td>0.007130</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.4630</td>\n",
       "      <td>0.2700</td>\n",
       "      <td>176.058</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Boi-1da &amp; Koz]\\n\\n[Intro: Kendric...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>13</td>\n",
       "      <td>You Ain't Gotta Lie (Momma Said)</td>\n",
       "      <td>241680</td>\n",
       "      <td>56</td>\n",
       "      <td>78</td>\n",
       "      <td>To Pimp A Butterfly</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>14</td>\n",
       "      <td>2015-03-16</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.2230</td>\n",
       "      <td>0.455000</td>\n",
       "      <td>0.000021</td>\n",
       "      <td>0.2850</td>\n",
       "      <td>0.6720</td>\n",
       "      <td>93.742</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by LoveDragon]\\n\\n[Intro]\\nStudy lon...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>14</td>\n",
       "      <td>i</td>\n",
       "      <td>336013</td>\n",
       "      <td>59</td>\n",
       "      <td>78</td>\n",
       "      <td>To Pimp A Butterfly</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>15</td>\n",
       "      <td>2015-03-16</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.3240</td>\n",
       "      <td>0.708000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.7200</td>\n",
       "      <td>0.7530</td>\n",
       "      <td>120.094</td>\n",
       "      <td>4</td>\n",
       "      <td>i Snapback:\\n\\ni T-Shirt:</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>15</td>\n",
       "      <td>Mortal Man</td>\n",
       "      <td>727106</td>\n",
       "      <td>53</td>\n",
       "      <td>78</td>\n",
       "      <td>To Pimp A Butterfly</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>16</td>\n",
       "      <td>2015-03-16</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.7500</td>\n",
       "      <td>0.665000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.7080</td>\n",
       "      <td>0.4160</td>\n",
       "      <td>86.935</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Sounwave]\\n\\n[Chorus 1]\\nThe ghos...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1</td>\n",
       "      <td>Hol' Up</td>\n",
       "      <td>173158</td>\n",
       "      <td>57</td>\n",
       "      <td>79</td>\n",
       "      <td>Section.80</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>2</td>\n",
       "      <td>2011-07-02</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.3450</td>\n",
       "      <td>0.781000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.1370</td>\n",
       "      <td>0.5770</td>\n",
       "      <td>155.983</td>\n",
       "      <td>4</td>\n",
       "      <td>[Verse 1]\\nI wrote this record while thirty-th...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2</td>\n",
       "      <td>A.D.H.D</td>\n",
       "      <td>215509</td>\n",
       "      <td>69</td>\n",
       "      <td>79</td>\n",
       "      <td>Section.80</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>3</td>\n",
       "      <td>2011-07-02</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.2400</td>\n",
       "      <td>0.330000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.1080</td>\n",
       "      <td>0.5820</td>\n",
       "      <td>157.740</td>\n",
       "      <td>4</td>\n",
       "      <td>[Intro: Kendrick Lamar]\\nUh-uh, fuck that (fuc...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>3</td>\n",
       "      <td>No Make-Up (Her Vice)</td>\n",
       "      <td>235921</td>\n",
       "      <td>50</td>\n",
       "      <td>79</td>\n",
       "      <td>Section.80</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>4</td>\n",
       "      <td>2011-07-02</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0901</td>\n",
       "      <td>0.541000</td>\n",
       "      <td>0.005210</td>\n",
       "      <td>0.6300</td>\n",
       "      <td>0.2130</td>\n",
       "      <td>91.002</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Sounwave]\\n\\n[Chorus: Colin Munro...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>4</td>\n",
       "      <td>Tammy's Song (Her Evils)</td>\n",
       "      <td>161670</td>\n",
       "      <td>55</td>\n",
       "      <td>79</td>\n",
       "      <td>Section.80</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>5</td>\n",
       "      <td>2011-07-02</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.4380</td>\n",
       "      <td>0.924000</td>\n",
       "      <td>0.000508</td>\n",
       "      <td>0.1290</td>\n",
       "      <td>0.5200</td>\n",
       "      <td>97.317</td>\n",
       "      <td>3</td>\n",
       "      <td>[Produced by THC]\\n\\n[Intro]\\nDon't judge me\\n...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>5</td>\n",
       "      <td>Chapter Six</td>\n",
       "      <td>161137</td>\n",
       "      <td>50</td>\n",
       "      <td>79</td>\n",
       "      <td>Section.80</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>6</td>\n",
       "      <td>2011-07-02</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0823</td>\n",
       "      <td>0.533000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.1850</td>\n",
       "      <td>0.6700</td>\n",
       "      <td>67.900</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Tommy Black]\\n\\n[Chorus]\\nRidin' ...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>6</td>\n",
       "      <td>Ronald Reagan Era</td>\n",
       "      <td>216899</td>\n",
       "      <td>55</td>\n",
       "      <td>79</td>\n",
       "      <td>Section.80</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>7</td>\n",
       "      <td>2011-07-02</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.3350</td>\n",
       "      <td>0.015200</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.3890</td>\n",
       "      <td>0.3000</td>\n",
       "      <td>167.469</td>\n",
       "      <td>4</td>\n",
       "      <td>[Intro: Ash Riser]\\nWe're far from good, not g...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>7</td>\n",
       "      <td>Poe Mans Dreams (His Vice)</td>\n",
       "      <td>261874</td>\n",
       "      <td>54</td>\n",
       "      <td>79</td>\n",
       "      <td>Section.80</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>8</td>\n",
       "      <td>2011-07-02</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.2800</td>\n",
       "      <td>0.619000</td>\n",
       "      <td>0.000001</td>\n",
       "      <td>0.1110</td>\n",
       "      <td>0.5970</td>\n",
       "      <td>88.124</td>\n",
       "      <td>4</td>\n",
       "      <td>[Hook: Kendrick Lamar]\\nSmoke good, eat good, ...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>8</td>\n",
       "      <td>The Spiteful Chant</td>\n",
       "      <td>320957</td>\n",
       "      <td>57</td>\n",
       "      <td>79</td>\n",
       "      <td>Section.80</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>9</td>\n",
       "      <td>2011-07-02</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0313</td>\n",
       "      <td>0.050600</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.1810</td>\n",
       "      <td>0.3340</td>\n",
       "      <td>127.018</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Sounwave]\\n\\n[Pre-Chorus 1: Kendr...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>9</td>\n",
       "      <td>Chapter Ten</td>\n",
       "      <td>75535</td>\n",
       "      <td>46</td>\n",
       "      <td>79</td>\n",
       "      <td>Section.80</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>10</td>\n",
       "      <td>2011-07-02</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.2150</td>\n",
       "      <td>0.035500</td>\n",
       "      <td>0.000373</td>\n",
       "      <td>0.2870</td>\n",
       "      <td>0.5410</td>\n",
       "      <td>135.772</td>\n",
       "      <td>4</td>\n",
       "      <td>[Intro: JaVonté]\\nIn time you'll learn this is...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>10</td>\n",
       "      <td>Keisha's Song (Her Pain)</td>\n",
       "      <td>227291</td>\n",
       "      <td>51</td>\n",
       "      <td>79</td>\n",
       "      <td>Section.80</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>11</td>\n",
       "      <td>2011-07-02</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.3770</td>\n",
       "      <td>0.429000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.6180</td>\n",
       "      <td>0.1990</td>\n",
       "      <td>85.126</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Tae Beast]\\n\\n[Chorus: Ash Riser]...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>11</td>\n",
       "      <td>Rigamortus</td>\n",
       "      <td>168591</td>\n",
       "      <td>63</td>\n",
       "      <td>79</td>\n",
       "      <td>Section.80</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>12</td>\n",
       "      <td>2011-07-02</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4090</td>\n",
       "      <td>0.240000</td>\n",
       "      <td>0.002570</td>\n",
       "      <td>0.1990</td>\n",
       "      <td>0.6280</td>\n",
       "      <td>178.012</td>\n",
       "      <td>4</td>\n",
       "      <td>[Intro]\\nAlright, here we go, third take\\nReal...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>12</td>\n",
       "      <td>Kush &amp; Corinthians</td>\n",
       "      <td>304668</td>\n",
       "      <td>50</td>\n",
       "      <td>79</td>\n",
       "      <td>Section.80</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>13</td>\n",
       "      <td>2011-07-02</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.2010</td>\n",
       "      <td>0.726000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.5040</td>\n",
       "      <td>0.3060</td>\n",
       "      <td>176.781</td>\n",
       "      <td>4</td>\n",
       "      <td>[Intro: Kendrick Lamar]\\nCheck, check, check, ...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>13</td>\n",
       "      <td>Blow My High (Members Only)</td>\n",
       "      <td>215791</td>\n",
       "      <td>57</td>\n",
       "      <td>79</td>\n",
       "      <td>Section.80</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>14</td>\n",
       "      <td>2011-07-02</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.2740</td>\n",
       "      <td>0.316000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.2740</td>\n",
       "      <td>0.8400</td>\n",
       "      <td>119.933</td>\n",
       "      <td>4</td>\n",
       "      <td>[Chorus: Kendrick Lamar]\\nSmoking out, pouring...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>14</td>\n",
       "      <td>Ab-Souls Outro</td>\n",
       "      <td>350001</td>\n",
       "      <td>45</td>\n",
       "      <td>79</td>\n",
       "      <td>Section.80</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>15</td>\n",
       "      <td>2011-07-02</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.3790</td>\n",
       "      <td>0.116000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.6580</td>\n",
       "      <td>0.6390</td>\n",
       "      <td>115.790</td>\n",
       "      <td>4</td>\n",
       "      <td>[Verse 1: Ab-Soul &amp; Alori Joh]\\nWhat's your li...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>15</td>\n",
       "      <td>HiiiPower</td>\n",
       "      <td>279854</td>\n",
       "      <td>60</td>\n",
       "      <td>79</td>\n",
       "      <td>Section.80</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>16</td>\n",
       "      <td>2011-07-02</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.2820</td>\n",
       "      <td>0.179000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.2830</td>\n",
       "      <td>0.5380</td>\n",
       "      <td>81.024</td>\n",
       "      <td>4</td>\n",
       "      <td>[Intro: Kendrick Lamar]\\nEverybody put three f...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>0</td>\n",
       "      <td>BLOOD.</td>\n",
       "      <td>118066</td>\n",
       "      <td>61</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.2650</td>\n",
       "      <td>0.142000</td>\n",
       "      <td>0.085900</td>\n",
       "      <td>0.5500</td>\n",
       "      <td>0.4940</td>\n",
       "      <td>156.907</td>\n",
       "      <td>4</td>\n",
       "      <td>[Intro: Bēkon]\\nIs it wickedness?\\nIs it weakn...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>1</td>\n",
       "      <td>DNA.</td>\n",
       "      <td>185946</td>\n",
       "      <td>79</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>2</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.3570</td>\n",
       "      <td>0.004540</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0842</td>\n",
       "      <td>0.4220</td>\n",
       "      <td>139.913</td>\n",
       "      <td>4</td>\n",
       "      <td>[Verse 1]\\nI got, I got, I got, I got—\\nLoyalt...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>2</td>\n",
       "      <td>YAH.</td>\n",
       "      <td>160293</td>\n",
       "      <td>65</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>3</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.1960</td>\n",
       "      <td>0.576000</td>\n",
       "      <td>0.000005</td>\n",
       "      <td>0.2260</td>\n",
       "      <td>0.6480</td>\n",
       "      <td>69.986</td>\n",
       "      <td>4</td>\n",
       "      <td>[Intro: Kid Capri]\\nNew shit, new Kung Fu Kenn...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>3</td>\n",
       "      <td>ELEMENT.</td>\n",
       "      <td>208733</td>\n",
       "      <td>72</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>4</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.4850</td>\n",
       "      <td>0.204000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.2460</td>\n",
       "      <td>0.4830</td>\n",
       "      <td>189.891</td>\n",
       "      <td>4</td>\n",
       "      <td>[Intro: Kid Capri &amp; Kendrick Lamar]\\nNew Kung ...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>4</td>\n",
       "      <td>FEEL.</td>\n",
       "      <td>214826</td>\n",
       "      <td>64</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>5</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.3490</td>\n",
       "      <td>0.137000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.1390</td>\n",
       "      <td>0.5530</td>\n",
       "      <td>109.968</td>\n",
       "      <td>4</td>\n",
       "      <td>[Intro: Kendrick Lamar &amp; Chelsea Blythe]\\nAin'...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>5</td>\n",
       "      <td>LOYALTY. FEAT. RIHANNA.</td>\n",
       "      <td>227360</td>\n",
       "      <td>73</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>6</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0573</td>\n",
       "      <td>0.026500</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.2000</td>\n",
       "      <td>0.4190</td>\n",
       "      <td>110.684</td>\n",
       "      <td>4</td>\n",
       "      <td>[Intro: Mr. Talkbox]\\n\\n[Pre-Chorus: DJ Dahi]\\...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>6</td>\n",
       "      <td>PRIDE.</td>\n",
       "      <td>275253</td>\n",
       "      <td>66</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>7</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0572</td>\n",
       "      <td>0.078600</td>\n",
       "      <td>0.000017</td>\n",
       "      <td>0.1540</td>\n",
       "      <td>0.3700</td>\n",
       "      <td>138.842</td>\n",
       "      <td>4</td>\n",
       "      <td>[Intro: Bēkon]\\nLove's gonna get you killed\\nB...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>7</td>\n",
       "      <td>HUMBLE.</td>\n",
       "      <td>177000</td>\n",
       "      <td>83</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>8</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.1020</td>\n",
       "      <td>0.000282</td>\n",
       "      <td>0.000054</td>\n",
       "      <td>0.0958</td>\n",
       "      <td>0.4210</td>\n",
       "      <td>150.011</td>\n",
       "      <td>4</td>\n",
       "      <td>[Intro]\\nNobody pray for me\\nIt's been that da...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>8</td>\n",
       "      <td>LUST.</td>\n",
       "      <td>307880</td>\n",
       "      <td>64</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>9</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.5080</td>\n",
       "      <td>0.193000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.1040</td>\n",
       "      <td>0.5660</td>\n",
       "      <td>94.241</td>\n",
       "      <td>4</td>\n",
       "      <td>[Chorus: Kendrick Lamar]\\nI need some water\\nS...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>9</td>\n",
       "      <td>LOVE. FEAT. ZACARI.</td>\n",
       "      <td>213400</td>\n",
       "      <td>78</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>10</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0924</td>\n",
       "      <td>0.264000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.1530</td>\n",
       "      <td>0.7790</td>\n",
       "      <td>126.058</td>\n",
       "      <td>4</td>\n",
       "      <td>[Intro: Kendrick Lamar]\\nDamn, love or lust\\nD...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>10</td>\n",
       "      <td>XXX. FEAT. U2.</td>\n",
       "      <td>254200</td>\n",
       "      <td>67</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>11</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4140</td>\n",
       "      <td>0.138000</td>\n",
       "      <td>0.000002</td>\n",
       "      <td>0.1100</td>\n",
       "      <td>0.2930</td>\n",
       "      <td>170.115</td>\n",
       "      <td>4</td>\n",
       "      <td>[Intro: Bēkon &amp; Kid Capri]\\nAmerica, God bless...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>11</td>\n",
       "      <td>FEAR.</td>\n",
       "      <td>460573</td>\n",
       "      <td>65</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>12</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.2810</td>\n",
       "      <td>0.604000</td>\n",
       "      <td>0.000007</td>\n",
       "      <td>0.5270</td>\n",
       "      <td>0.4340</td>\n",
       "      <td>150.414</td>\n",
       "      <td>4</td>\n",
       "      <td>[Intro]\\nPoverty's paradise\\nI don’t think I c...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>12</td>\n",
       "      <td>GOD.</td>\n",
       "      <td>248826</td>\n",
       "      <td>64</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>13</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0813</td>\n",
       "      <td>0.034700</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.2760</td>\n",
       "      <td>0.2050</td>\n",
       "      <td>132.980</td>\n",
       "      <td>4</td>\n",
       "      <td>[Chorus]\\nThis what God feel like, huh, he-yea...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>13</td>\n",
       "      <td>DUCKWORTH.</td>\n",
       "      <td>248613</td>\n",
       "      <td>64</td>\n",
       "      <td>79</td>\n",
       "      <td>DAMN.</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>14</td>\n",
       "      <td>2017-04-14</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.6150</td>\n",
       "      <td>0.053600</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.2580</td>\n",
       "      <td>0.6320</td>\n",
       "      <td>174.516</td>\n",
       "      <td>4</td>\n",
       "      <td>[Intro: Bēkon &amp; Kid Capri]\\nIt was always me v...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>0</td>\n",
       "      <td>Sherane a.k.a Master Splinter’s Daughter</td>\n",
       "      <td>273640</td>\n",
       "      <td>42</td>\n",
       "      <td>3</td>\n",
       "      <td>good kid, m.A.A.d city</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>1</td>\n",
       "      <td>2012</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.5200</td>\n",
       "      <td>0.486000</td>\n",
       "      <td>0.010200</td>\n",
       "      <td>0.1240</td>\n",
       "      <td>0.3170</td>\n",
       "      <td>81.908</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Tha Bizness]\\n\\n[Intro]\\nLord God...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>1</td>\n",
       "      <td>Bitch, Don’t Kill My Vibe</td>\n",
       "      <td>310720</td>\n",
       "      <td>63</td>\n",
       "      <td>3</td>\n",
       "      <td>good kid, m.A.A.d city</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>2</td>\n",
       "      <td>2012</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.0943</td>\n",
       "      <td>0.015200</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.4420</td>\n",
       "      <td>0.0985</td>\n",
       "      <td>133.954</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Sounwave]\\n\\n[Chorus]\\nI am a sin...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>2</td>\n",
       "      <td>Backseat Freestyle</td>\n",
       "      <td>212653</td>\n",
       "      <td>55</td>\n",
       "      <td>3</td>\n",
       "      <td>good kid, m.A.A.d city</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>3</td>\n",
       "      <td>2012</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.3000</td>\n",
       "      <td>0.000739</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.2350</td>\n",
       "      <td>0.6460</td>\n",
       "      <td>77.878</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Hit-Boy]\\n\\n[Intro]\\nUh, Martin h...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>3</td>\n",
       "      <td>The Art of Peer Pressure</td>\n",
       "      <td>324533</td>\n",
       "      <td>44</td>\n",
       "      <td>3</td>\n",
       "      <td>good kid, m.A.A.d city</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>4</td>\n",
       "      <td>2012</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.3560</td>\n",
       "      <td>0.286000</td>\n",
       "      <td>0.001060</td>\n",
       "      <td>0.2730</td>\n",
       "      <td>0.4110</td>\n",
       "      <td>94.939</td>\n",
       "      <td>4</td>\n",
       "      <td>[Part I]\\n\\n[Intro]\\nEverybody, everybody, eve...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>4</td>\n",
       "      <td>Money Trees</td>\n",
       "      <td>386906</td>\n",
       "      <td>66</td>\n",
       "      <td>3</td>\n",
       "      <td>good kid, m.A.A.d city</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>5</td>\n",
       "      <td>2012</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.1220</td>\n",
       "      <td>0.070300</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.2240</td>\n",
       "      <td>0.3440</td>\n",
       "      <td>71.994</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by DJ Dahi]\\n\\n[Verse 1: Kendrick La...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>5</td>\n",
       "      <td>Poetic Justice</td>\n",
       "      <td>300160</td>\n",
       "      <td>55</td>\n",
       "      <td>3</td>\n",
       "      <td>good kid, m.A.A.d city</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>6</td>\n",
       "      <td>2012</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.3780</td>\n",
       "      <td>0.157000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.2460</td>\n",
       "      <td>0.6470</td>\n",
       "      <td>135.956</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Scoop DeVille &amp; Sounwave]\\n\\n[Int...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>6</td>\n",
       "      <td>good kid</td>\n",
       "      <td>214120</td>\n",
       "      <td>43</td>\n",
       "      <td>3</td>\n",
       "      <td>good kid, m.A.A.d city</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>7</td>\n",
       "      <td>2012</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.3070</td>\n",
       "      <td>0.062300</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.1850</td>\n",
       "      <td>0.4100</td>\n",
       "      <td>176.162</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Pharrell Williams]\\n\\n[Hook: Phar...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>7</td>\n",
       "      <td>m.A.A.d city</td>\n",
       "      <td>350120</td>\n",
       "      <td>67</td>\n",
       "      <td>3</td>\n",
       "      <td>good kid, m.A.A.d city</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>8</td>\n",
       "      <td>2012</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.2710</td>\n",
       "      <td>0.053800</td>\n",
       "      <td>0.000004</td>\n",
       "      <td>0.4400</td>\n",
       "      <td>0.2170</td>\n",
       "      <td>91.048</td>\n",
       "      <td>4</td>\n",
       "      <td>[Part I: Produced by Sounwave]\\n\\n[Intro: Kend...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>9</td>\n",
       "      <td>Sing About Me, I'm Dying Of Thirst</td>\n",
       "      <td>723573</td>\n",
       "      <td>46</td>\n",
       "      <td>3</td>\n",
       "      <td>good kid, m.A.A.d city</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>10</td>\n",
       "      <td>2012</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.3950</td>\n",
       "      <td>0.303000</td>\n",
       "      <td>0.000081</td>\n",
       "      <td>0.1300</td>\n",
       "      <td>0.3710</td>\n",
       "      <td>110.722</td>\n",
       "      <td>5</td>\n",
       "      <td>[Part I: \"Sing About Me\"]\\n\\n[Chorus]\\nWhen th...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>10</td>\n",
       "      <td>Real</td>\n",
       "      <td>443413</td>\n",
       "      <td>42</td>\n",
       "      <td>3</td>\n",
       "      <td>good kid, m.A.A.d city</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>11</td>\n",
       "      <td>2012</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0.1940</td>\n",
       "      <td>0.028200</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.6640</td>\n",
       "      <td>0.1740</td>\n",
       "      <td>100.046</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Terrace Martin]\\n\\n[Chorus: Kendr...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>11</td>\n",
       "      <td>Compton</td>\n",
       "      <td>248093</td>\n",
       "      <td>42</td>\n",
       "      <td>3</td>\n",
       "      <td>good kid, m.A.A.d city</td>\n",
       "      <td>1</td>\n",
       "      <td>True</td>\n",
       "      <td>12</td>\n",
       "      <td>2012</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0.4150</td>\n",
       "      <td>0.081500</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.3830</td>\n",
       "      <td>0.2250</td>\n",
       "      <td>170.380</td>\n",
       "      <td>4</td>\n",
       "      <td>[Produced by Just Blaze]\\n\\n[Verse 1: Kendrick...</td>\n",
       "      <td>westcoast</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>56 rows × 25 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    index                                      name duration_ms popularity  \\\n",
       "0       0                           Wesley's Theory      287360         60   \n",
       "1       1                     For Free? - Interlude      130893         55   \n",
       "2       2                                King Kunta      234693         73   \n",
       "3       3                         Institutionalized      271773         59   \n",
       "4       4                               These Walls      300973         61   \n",
       "5       5                                         u      268493         58   \n",
       "6       6                                   Alright      219333         70   \n",
       "7       7                     For Sale? - Interlude      291720         55   \n",
       "8       8                                     Momma      283120         56   \n",
       "9       9                             Hood Politics      292520         59   \n",
       "10     10                    How Much A Dollar Cost      261746         58   \n",
       "11     11                  Complexion (A Zulu Love)      263360         56   \n",
       "12     12                     The Blacker The Berry      328826         60   \n",
       "13     13          You Ain't Gotta Lie (Momma Said)      241680         56   \n",
       "14     14                                         i      336013         59   \n",
       "15     15                                Mortal Man      727106         53   \n",
       "16      1                                   Hol' Up      173158         57   \n",
       "17      2                                   A.D.H.D      215509         69   \n",
       "18      3                     No Make-Up (Her Vice)      235921         50   \n",
       "19      4                  Tammy's Song (Her Evils)      161670         55   \n",
       "20      5                               Chapter Six      161137         50   \n",
       "21      6                         Ronald Reagan Era      216899         55   \n",
       "22      7                Poe Mans Dreams (His Vice)      261874         54   \n",
       "23      8                        The Spiteful Chant      320957         57   \n",
       "24      9                               Chapter Ten       75535         46   \n",
       "25     10                  Keisha's Song (Her Pain)      227291         51   \n",
       "26     11                                Rigamortus      168591         63   \n",
       "27     12                        Kush & Corinthians      304668         50   \n",
       "28     13               Blow My High (Members Only)      215791         57   \n",
       "29     14                            Ab-Souls Outro      350001         45   \n",
       "30     15                                 HiiiPower      279854         60   \n",
       "31      0                                    BLOOD.      118066         61   \n",
       "32      1                                      DNA.      185946         79   \n",
       "33      2                                      YAH.      160293         65   \n",
       "34      3                                  ELEMENT.      208733         72   \n",
       "35      4                                     FEEL.      214826         64   \n",
       "36      5                   LOYALTY. FEAT. RIHANNA.      227360         73   \n",
       "37      6                                    PRIDE.      275253         66   \n",
       "38      7                                   HUMBLE.      177000         83   \n",
       "39      8                                     LUST.      307880         64   \n",
       "40      9                       LOVE. FEAT. ZACARI.      213400         78   \n",
       "41     10                            XXX. FEAT. U2.      254200         67   \n",
       "42     11                                     FEAR.      460573         65   \n",
       "43     12                                      GOD.      248826         64   \n",
       "44     13                                DUCKWORTH.      248613         64   \n",
       "45      0  Sherane a.k.a Master Splinter’s Daughter      273640         42   \n",
       "46      1                 Bitch, Don’t Kill My Vibe      310720         63   \n",
       "47      2                        Backseat Freestyle      212653         55   \n",
       "48      3                  The Art of Peer Pressure      324533         44   \n",
       "49      4                               Money Trees      386906         66   \n",
       "50      5                            Poetic Justice      300160         55   \n",
       "51      6                                  good kid      214120         43   \n",
       "52      7                              m.A.A.d city      350120         67   \n",
       "53      9        Sing About Me, I'm Dying Of Thirst      723573         46   \n",
       "54     10                                      Real      443413         42   \n",
       "55     11                                   Compton      248093         42   \n",
       "\n",
       "   num_markets                   album disc_number is_explicit track_number  \\\n",
       "0           78     To Pimp A Butterfly           1        True            1   \n",
       "1           78     To Pimp A Butterfly           1        True            2   \n",
       "2           78     To Pimp A Butterfly           1        True            3   \n",
       "3           78     To Pimp A Butterfly           1        True            4   \n",
       "4           78     To Pimp A Butterfly           1        True            5   \n",
       "5           78     To Pimp A Butterfly           1        True            6   \n",
       "6           78     To Pimp A Butterfly           1        True            7   \n",
       "7           78     To Pimp A Butterfly           1        True            8   \n",
       "8           78     To Pimp A Butterfly           1        True            9   \n",
       "9           78     To Pimp A Butterfly           1        True           10   \n",
       "10          78     To Pimp A Butterfly           1        True           11   \n",
       "11          78     To Pimp A Butterfly           1        True           12   \n",
       "12          78     To Pimp A Butterfly           1        True           13   \n",
       "13          78     To Pimp A Butterfly           1        True           14   \n",
       "14          78     To Pimp A Butterfly           1        True           15   \n",
       "15          78     To Pimp A Butterfly           1        True           16   \n",
       "16          79              Section.80           1        True            2   \n",
       "17          79              Section.80           1        True            3   \n",
       "18          79              Section.80           1        True            4   \n",
       "19          79              Section.80           1        True            5   \n",
       "20          79              Section.80           1        True            6   \n",
       "21          79              Section.80           1        True            7   \n",
       "22          79              Section.80           1        True            8   \n",
       "23          79              Section.80           1        True            9   \n",
       "24          79              Section.80           1        True           10   \n",
       "25          79              Section.80           1        True           11   \n",
       "26          79              Section.80           1        True           12   \n",
       "27          79              Section.80           1        True           13   \n",
       "28          79              Section.80           1        True           14   \n",
       "29          79              Section.80           1        True           15   \n",
       "30          79              Section.80           1        True           16   \n",
       "31          79                   DAMN.           1        True            1   \n",
       "32          79                   DAMN.           1        True            2   \n",
       "33          79                   DAMN.           1        True            3   \n",
       "34          79                   DAMN.           1        True            4   \n",
       "35          79                   DAMN.           1        True            5   \n",
       "36          79                   DAMN.           1        True            6   \n",
       "37          79                   DAMN.           1        True            7   \n",
       "38          79                   DAMN.           1        True            8   \n",
       "39          79                   DAMN.           1        True            9   \n",
       "40          79                   DAMN.           1        True           10   \n",
       "41          79                   DAMN.           1        True           11   \n",
       "42          79                   DAMN.           1        True           12   \n",
       "43          79                   DAMN.           1        True           13   \n",
       "44          79                   DAMN.           1        True           14   \n",
       "45           3  good kid, m.A.A.d city           1        True            1   \n",
       "46           3  good kid, m.A.A.d city           1        True            2   \n",
       "47           3  good kid, m.A.A.d city           1        True            3   \n",
       "48           3  good kid, m.A.A.d city           1        True            4   \n",
       "49           3  good kid, m.A.A.d city           1        True            5   \n",
       "50           3  good kid, m.A.A.d city           1        True            6   \n",
       "51           3  good kid, m.A.A.d city           1        True            7   \n",
       "52           3  good kid, m.A.A.d city           1        True            8   \n",
       "53           3  good kid, m.A.A.d city           1        True           10   \n",
       "54           3  good kid, m.A.A.d city           1        True           11   \n",
       "55           3  good kid, m.A.A.d city           1        True           12   \n",
       "\n",
       "   release_date  ... mode  speechiness  acousticness instrumentalness  \\\n",
       "0    2015-03-16  ...    1       0.2650      0.359000         0.000028   \n",
       "1    2015-03-16  ...    1       0.1970      0.588000         0.000000   \n",
       "2    2015-03-16  ...    0       0.0977      0.005890         0.000000   \n",
       "3    2015-03-16  ...    0       0.4530      0.112000         0.000001   \n",
       "4    2015-03-16  ...    1       0.1370      0.110000         0.000004   \n",
       "5    2015-03-16  ...    0       0.4320      0.260000         0.000000   \n",
       "6    2015-03-16  ...    1       0.2380      0.074200         0.000000   \n",
       "7    2015-03-16  ...    1       0.0831      0.442000         0.000115   \n",
       "8    2015-03-16  ...    1       0.3250      0.254000         0.000000   \n",
       "9    2015-03-16  ...    0       0.3760      0.145000         0.000000   \n",
       "10   2015-03-16  ...    1       0.1980      0.415000         0.000000   \n",
       "11   2015-03-16  ...    0       0.3030      0.566000         0.000005   \n",
       "12   2015-03-16  ...    0       0.3050      0.007130         0.000000   \n",
       "13   2015-03-16  ...    0       0.2230      0.455000         0.000021   \n",
       "14   2015-03-16  ...    1       0.3240      0.708000         0.000000   \n",
       "15   2015-03-16  ...    0       0.7500      0.665000         0.000000   \n",
       "16   2011-07-02  ...    1       0.3450      0.781000         0.000000   \n",
       "17   2011-07-02  ...    1       0.2400      0.330000         0.000000   \n",
       "18   2011-07-02  ...    0       0.0901      0.541000         0.005210   \n",
       "19   2011-07-02  ...    0       0.4380      0.924000         0.000508   \n",
       "20   2011-07-02  ...    0       0.0823      0.533000         0.000000   \n",
       "21   2011-07-02  ...    0       0.3350      0.015200         0.000000   \n",
       "22   2011-07-02  ...    1       0.2800      0.619000         0.000001   \n",
       "23   2011-07-02  ...    0       0.0313      0.050600         0.000000   \n",
       "24   2011-07-02  ...    0       0.2150      0.035500         0.000373   \n",
       "25   2011-07-02  ...    1       0.3770      0.429000         0.000000   \n",
       "26   2011-07-02  ...    1       0.4090      0.240000         0.002570   \n",
       "27   2011-07-02  ...    1       0.2010      0.726000         0.000000   \n",
       "28   2011-07-02  ...    0       0.2740      0.316000         0.000000   \n",
       "29   2011-07-02  ...    0       0.3790      0.116000         0.000000   \n",
       "30   2011-07-02  ...    0       0.2820      0.179000         0.000000   \n",
       "31   2017-04-14  ...    0       0.2650      0.142000         0.085900   \n",
       "32   2017-04-14  ...    1       0.3570      0.004540         0.000000   \n",
       "33   2017-04-14  ...    1       0.1960      0.576000         0.000005   \n",
       "34   2017-04-14  ...    0       0.4850      0.204000         0.000000   \n",
       "35   2017-04-14  ...    1       0.3490      0.137000         0.000000   \n",
       "36   2017-04-14  ...    0       0.0573      0.026500         0.000000   \n",
       "37   2017-04-14  ...    0       0.0572      0.078600         0.000017   \n",
       "38   2017-04-14  ...    0       0.1020      0.000282         0.000054   \n",
       "39   2017-04-14  ...    0       0.5080      0.193000         0.000000   \n",
       "40   2017-04-14  ...    1       0.0924      0.264000         0.000000   \n",
       "41   2017-04-14  ...    1       0.4140      0.138000         0.000002   \n",
       "42   2017-04-14  ...    1       0.2810      0.604000         0.000007   \n",
       "43   2017-04-14  ...    1       0.0813      0.034700         0.000000   \n",
       "44   2017-04-14  ...    1       0.6150      0.053600         0.000000   \n",
       "45         2012  ...    0       0.5200      0.486000         0.010200   \n",
       "46         2012  ...    1       0.0943      0.015200         0.000000   \n",
       "47         2012  ...    1       0.3000      0.000739         0.000000   \n",
       "48         2012  ...    0       0.3560      0.286000         0.001060   \n",
       "49         2012  ...    1       0.1220      0.070300         0.000000   \n",
       "50         2012  ...    0       0.3780      0.157000         0.000000   \n",
       "51         2012  ...    0       0.3070      0.062300         0.000000   \n",
       "52         2012  ...    1       0.2710      0.053800         0.000004   \n",
       "53         2012  ...    0       0.3950      0.303000         0.000081   \n",
       "54         2012  ...    1       0.1940      0.028200         0.000000   \n",
       "55         2012  ...    0       0.4150      0.081500         0.000000   \n",
       "\n",
       "    liveness valence    tempo  time_signature  \\\n",
       "0     0.2600  0.5070  114.449               4   \n",
       "1     0.3700  0.7450  129.313               1   \n",
       "2     0.1540  0.4890  107.059               4   \n",
       "3     0.1290  0.5680   81.114               4   \n",
       "4     0.2020  0.3730  108.005               4   \n",
       "5     0.4610  0.5800   71.547               4   \n",
       "6     0.0827  0.5580  110.034               4   \n",
       "7     0.1210  0.2760   79.036               3   \n",
       "8     0.6650  0.5150  111.914               5   \n",
       "9     0.1200  0.3690   87.912               4   \n",
       "10    0.1350  0.3340   87.948               4   \n",
       "11    0.2190  0.3700   89.953               4   \n",
       "12    0.4630  0.2700  176.058               4   \n",
       "13    0.2850  0.6720   93.742               4   \n",
       "14    0.7200  0.7530  120.094               4   \n",
       "15    0.7080  0.4160   86.935               4   \n",
       "16    0.1370  0.5770  155.983               4   \n",
       "17    0.1080  0.5820  157.740               4   \n",
       "18    0.6300  0.2130   91.002               4   \n",
       "19    0.1290  0.5200   97.317               3   \n",
       "20    0.1850  0.6700   67.900               4   \n",
       "21    0.3890  0.3000  167.469               4   \n",
       "22    0.1110  0.5970   88.124               4   \n",
       "23    0.1810  0.3340  127.018               4   \n",
       "24    0.2870  0.5410  135.772               4   \n",
       "25    0.6180  0.1990   85.126               4   \n",
       "26    0.1990  0.6280  178.012               4   \n",
       "27    0.5040  0.3060  176.781               4   \n",
       "28    0.2740  0.8400  119.933               4   \n",
       "29    0.6580  0.6390  115.790               4   \n",
       "30    0.2830  0.5380   81.024               4   \n",
       "31    0.5500  0.4940  156.907               4   \n",
       "32    0.0842  0.4220  139.913               4   \n",
       "33    0.2260  0.6480   69.986               4   \n",
       "34    0.2460  0.4830  189.891               4   \n",
       "35    0.1390  0.5530  109.968               4   \n",
       "36    0.2000  0.4190  110.684               4   \n",
       "37    0.1540  0.3700  138.842               4   \n",
       "38    0.0958  0.4210  150.011               4   \n",
       "39    0.1040  0.5660   94.241               4   \n",
       "40    0.1530  0.7790  126.058               4   \n",
       "41    0.1100  0.2930  170.115               4   \n",
       "42    0.5270  0.4340  150.414               4   \n",
       "43    0.2760  0.2050  132.980               4   \n",
       "44    0.2580  0.6320  174.516               4   \n",
       "45    0.1240  0.3170   81.908               4   \n",
       "46    0.4420  0.0985  133.954               4   \n",
       "47    0.2350  0.6460   77.878               4   \n",
       "48    0.2730  0.4110   94.939               4   \n",
       "49    0.2240  0.3440   71.994               4   \n",
       "50    0.2460  0.6470  135.956               4   \n",
       "51    0.1850  0.4100  176.162               4   \n",
       "52    0.4400  0.2170   91.048               4   \n",
       "53    0.1300  0.3710  110.722               5   \n",
       "54    0.6640  0.1740  100.046               4   \n",
       "55    0.3830  0.2250  170.380               4   \n",
       "\n",
       "                                               lyrics     region  \n",
       "0   [Produced by Flying Lotus & Ronald \"Flippa\" Co...  westcoast  \n",
       "1   [Produced by Terrace Martin]\\n\\n[Intro: Darlen...  westcoast  \n",
       "2   [Produced by Sounwave; Additional production b...  westcoast  \n",
       "3   [Part I]\\n\\n[Intro: Kendrick Lamar]\\nWhat mone...  westcoast  \n",
       "4   [Produced by Terrace Martin & Larrance Dopson;...  westcoast  \n",
       "5   [Produced by Taz Arnold & Whoarei; Additional ...  westcoast  \n",
       "6   [Produced by Pharrell Williams & Sounwave]\\n[D...  westcoast  \n",
       "7   [Produced by Taz Arnold; Additional production...  westcoast  \n",
       "8   [Produced by Knxwledge & Taz Arnold]\\n\\n[Intro...  westcoast  \n",
       "9   [Produced by Tae Beast, Sounwave & Thundercat]...  westcoast  \n",
       "10  [Produced by LoveDragon]\\n\\n[Verse 1: Kendrick...  westcoast  \n",
       "11  [Produced by Thundercat & Sounwave; Additional...  westcoast  \n",
       "12  [Produced by Boi-1da & Koz]\\n\\n[Intro: Kendric...  westcoast  \n",
       "13  [Produced by LoveDragon]\\n\\n[Intro]\\nStudy lon...  westcoast  \n",
       "14                          i Snapback:\\n\\ni T-Shirt:  westcoast  \n",
       "15  [Produced by Sounwave]\\n\\n[Chorus 1]\\nThe ghos...  westcoast  \n",
       "16  [Verse 1]\\nI wrote this record while thirty-th...  westcoast  \n",
       "17  [Intro: Kendrick Lamar]\\nUh-uh, fuck that (fuc...  westcoast  \n",
       "18  [Produced by Sounwave]\\n\\n[Chorus: Colin Munro...  westcoast  \n",
       "19  [Produced by THC]\\n\\n[Intro]\\nDon't judge me\\n...  westcoast  \n",
       "20  [Produced by Tommy Black]\\n\\n[Chorus]\\nRidin' ...  westcoast  \n",
       "21  [Intro: Ash Riser]\\nWe're far from good, not g...  westcoast  \n",
       "22  [Hook: Kendrick Lamar]\\nSmoke good, eat good, ...  westcoast  \n",
       "23  [Produced by Sounwave]\\n\\n[Pre-Chorus 1: Kendr...  westcoast  \n",
       "24  [Intro: JaVonté]\\nIn time you'll learn this is...  westcoast  \n",
       "25  [Produced by Tae Beast]\\n\\n[Chorus: Ash Riser]...  westcoast  \n",
       "26  [Intro]\\nAlright, here we go, third take\\nReal...  westcoast  \n",
       "27  [Intro: Kendrick Lamar]\\nCheck, check, check, ...  westcoast  \n",
       "28  [Chorus: Kendrick Lamar]\\nSmoking out, pouring...  westcoast  \n",
       "29  [Verse 1: Ab-Soul & Alori Joh]\\nWhat's your li...  westcoast  \n",
       "30  [Intro: Kendrick Lamar]\\nEverybody put three f...  westcoast  \n",
       "31  [Intro: Bēkon]\\nIs it wickedness?\\nIs it weakn...  westcoast  \n",
       "32  [Verse 1]\\nI got, I got, I got, I got—\\nLoyalt...  westcoast  \n",
       "33  [Intro: Kid Capri]\\nNew shit, new Kung Fu Kenn...  westcoast  \n",
       "34  [Intro: Kid Capri & Kendrick Lamar]\\nNew Kung ...  westcoast  \n",
       "35  [Intro: Kendrick Lamar & Chelsea Blythe]\\nAin'...  westcoast  \n",
       "36  [Intro: Mr. Talkbox]\\n\\n[Pre-Chorus: DJ Dahi]\\...  westcoast  \n",
       "37  [Intro: Bēkon]\\nLove's gonna get you killed\\nB...  westcoast  \n",
       "38  [Intro]\\nNobody pray for me\\nIt's been that da...  westcoast  \n",
       "39  [Chorus: Kendrick Lamar]\\nI need some water\\nS...  westcoast  \n",
       "40  [Intro: Kendrick Lamar]\\nDamn, love or lust\\nD...  westcoast  \n",
       "41  [Intro: Bēkon & Kid Capri]\\nAmerica, God bless...  westcoast  \n",
       "42  [Intro]\\nPoverty's paradise\\nI don’t think I c...  westcoast  \n",
       "43  [Chorus]\\nThis what God feel like, huh, he-yea...  westcoast  \n",
       "44  [Intro: Bēkon & Kid Capri]\\nIt was always me v...  westcoast  \n",
       "45  [Produced by Tha Bizness]\\n\\n[Intro]\\nLord God...  westcoast  \n",
       "46  [Produced by Sounwave]\\n\\n[Chorus]\\nI am a sin...  westcoast  \n",
       "47  [Produced by Hit-Boy]\\n\\n[Intro]\\nUh, Martin h...  westcoast  \n",
       "48  [Part I]\\n\\n[Intro]\\nEverybody, everybody, eve...  westcoast  \n",
       "49  [Produced by DJ Dahi]\\n\\n[Verse 1: Kendrick La...  westcoast  \n",
       "50  [Produced by Scoop DeVille & Sounwave]\\n\\n[Int...  westcoast  \n",
       "51  [Produced by Pharrell Williams]\\n\\n[Hook: Phar...  westcoast  \n",
       "52  [Part I: Produced by Sounwave]\\n\\n[Intro: Kend...  westcoast  \n",
       "53  [Part I: \"Sing About Me\"]\\n\\n[Chorus]\\nWhen th...  westcoast  \n",
       "54  [Produced by Terrace Martin]\\n\\n[Chorus: Kendr...  westcoast  \n",
       "55  [Produced by Just Blaze]\\n\\n[Verse 1: Kendrick...  westcoast  \n",
       "\n",
       "[56 rows x 25 columns]"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kendrick"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Kanye"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotify:artist:5K4W6rqBFWDnAN6FQUkS6x\n"
     ]
    }
   ],
   "source": [
    "#get next artist data\n",
    "\n",
    "results = sp.search(\"artist:Kanye West\")\n",
    "artist_id = results['tracks']['items'][0]['artists'][0]['uri']\n",
    "print(artist_id)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://api.spotify.com/v1/artists/5K4W6rqBFWDnAN6FQUkS6x/albums?offset=50&limit=50&include_groups=album,single,compilation,appears_on&market=US\n"
     ]
    }
   ],
   "source": [
    "#get album details\n",
    "albums = sp.artist_albums('5K4W6rqBFWDnAN6FQUkS6x', country=\"US\", limit=50)\n",
    "print(albums['next'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50\n",
      "spotify:album:6pwuKxMUkNg673KETsXPUV\n",
      "7 \t KIDS SEE GHOSTS\n",
      "7 \t ye\n",
      "20 \t The Life Of Pablo\n",
      "10 \t Yeezus\n",
      "12 \t Kanye West Presents Good Music Cruel Summer\n",
      "13 \t My Beautiful Dark Twisted Fantasy\n",
      "13 \t My Beautiful Dark Twisted Fantasy\n",
      "12 \t 808s & Heartbreak\n",
      "13 \t Graduation\n",
      "13 \t Graduation\n",
      "21 \t Late Registration\n",
      "21 \t Late Registration\n",
      "21 \t The College Dropout\n",
      "21 \t The College Dropout\n",
      "1 \t I Love It [(Freaky Girl) Edit]\n",
      "1 \t I Love It\n",
      "1 \t I Love It\n",
      "1 \t XTCY\n",
      "1 \t XTCY\n",
      "1 \t Lift Yourself\n",
      "1 \t Ye vs. the People (starring TI as the People)\n",
      "1 \t Ye vs. the People (starring TI as the People)\n",
      "1 \t All Day\n",
      "1 \t All Day\n",
      "1 \t FourFiveSeconds\n",
      "1 \t Only One\n",
      "6 \t Wouldn't You Like to Ride (S&S Remixes)\n",
      "1 \t Cold\n",
      "1 \t Mercy\n",
      "1 \t Mercy\n",
      "1 \t New God Flow\n",
      "1 \t New God Flow\n",
      "1 \t Christmas In Harlem\n",
      "1 \t Homecoming\n",
      "1 \t Homecoming\n",
      "1 \t Love Lockdown\n",
      "2 \t Stronger (Remixes)\n",
      "1 \t Impossible\n",
      "1 \t Diamonds From Sierra Leone\n",
      "1 \t Diamonds From Sierra Leone Remix\n",
      "1 \t All Falls Down (Live From The House of Blues)\n",
      "1 \t Jesus Walks (Live Version)\n",
      "1 \t Spaceships (Live Version)\n",
      "1 \t The New Workout Plan (Live Version)\n",
      "1 \t We Don't Care (Live Version)\n",
      "1 \t Selfish\n",
      "30 \t Girl Power\n",
      "42 \t Hip Hop 00s\n",
      "37 \t Gym Pump\n",
      "2 \t American Boy (Lost Frequencies Remix)\n"
     ]
    }
   ],
   "source": [
    "#collect album details and print\n",
    "album_ids = [album['uri'] for album in albums['items']]\n",
    "print(len(album_ids))\n",
    "print(album_ids[0])\n",
    "\n",
    "all_tracks = []\n",
    "for album_id in album_ids:\n",
    "    tracks = sp.album_tracks(album_id, limit=50)\n",
    "    all_tracks.append(tracks)\n",
    "    \n",
    "for tracks, album in zip(all_tracks, albums.get('items')):\n",
    "    print(\n",
    "        len(tracks.get('items')),\n",
    "        \"\\t\",\n",
    "        album.get('name')\n",
    "    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "name                  Feel The Love\n",
      "duration_ms                  165053\n",
      "popularity                       70\n",
      "num_markets                      79\n",
      "album               KIDS SEE GHOSTS\n",
      "disc_number                       1\n",
      "is_explicit                    True\n",
      "track_number                      1\n",
      "release_date             2018-06-08\n",
      "artist              KIDS SEE GHOSTS\n",
      "danceability                   0.58\n",
      "energy                        0.469\n",
      "key                               0\n",
      "loudness                     -5.946\n",
      "mode                              0\n",
      "speechiness                   0.104\n",
      "acousticness                  0.126\n",
      "instrumentalness           7.32e-05\n",
      "liveness                      0.099\n",
      "valence                       0.369\n",
      "tempo                       110.573\n",
      "time_signature                    4\n",
      "Name: 0, dtype: object\n"
     ]
    }
   ],
   "source": [
    "#create df\n",
    "track_ids = []\n",
    "for tracks in all_tracks:\n",
    "    album_tracks = []\n",
    "    for track in tracks.get('items'):\n",
    "        album_tracks.append(track.get('uri'))\n",
    "    track_ids.append(album_tracks)\n",
    "\n",
    "\n",
    "track_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    tracks = sp.tracks(track_id_list)\n",
    "    track_objects.append(tracks)\n",
    "\n",
    "#collecting other features\n",
    "\n",
    "audio_feature_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    features = sp.audio_features(track_id_list)\n",
    "    audio_feature_objects.append(features)\n",
    "\n",
    "spotify_data = {\n",
    "    \"audio_features\": audio_feature_objects,\n",
    "    \"tracks\": track_objects\n",
    "}\n",
    "\n",
    "df = pd.DataFrame(columns=[\n",
    "    'name',\n",
    "    'duration_ms',\n",
    "    'popularity',\n",
    "    'num_markets',\n",
    "    'album',\n",
    "    'disc_number',\n",
    "    'is_explicit',\n",
    "    'track_number',\n",
    "    'release_date',\n",
    "    'artist',\n",
    "    'danceability',\n",
    "    'energy',\n",
    "    'key',\n",
    "    'loudness',\n",
    "    'mode',\n",
    "    'speechiness',\n",
    "    'acousticness',\n",
    "    'instrumentalness',\n",
    "    'liveness',\n",
    "    'valence',\n",
    "    'tempo',\n",
    "    'time_signature',\n",
    "])\n",
    "for album_info, album_features in zip(\n",
    "        spotify_data.get('tracks'), \n",
    "        spotify_data.get('audio_features')\n",
    "        ):\n",
    "    for track_info, track_features in zip(\n",
    "        album_info.get('tracks'),\n",
    "        album_features\n",
    "        ):\n",
    "        y = {\n",
    "            'name': track_info['name'],\n",
    "            'duration_ms': track_info['duration_ms'],\n",
    "            'popularity': track_info['popularity'],\n",
    "            'num_markets': len(track_info['available_markets']),\n",
    "            'album': track_info['album']['name'],\n",
    "            'disc_number': track_info['disc_number'],\n",
    "            'is_explicit': track_info['explicit'],\n",
    "            'track_number': track_info['track_number'],\n",
    "            'release_date': track_info['album']['release_date'],\n",
    "            'artist': track_info['artists'][0]['name'],\n",
    "            'danceability': track_features['danceability'],\n",
    "            'energy': track_features['energy'],\n",
    "            'key': track_features['key'],\n",
    "            'loudness': track_features['loudness'],\n",
    "            'mode': track_features['mode'],\n",
    "            'speechiness': track_features['speechiness'],\n",
    "            'acousticness': track_features['acousticness'],\n",
    "            'instrumentalness': track_features['instrumentalness'],\n",
    "            'liveness': track_features['liveness'],\n",
    "            'valence': track_features['valence'],\n",
    "            'tempo': track_features['tempo'],\n",
    "            'time_signature': track_features['time_signature'],\n",
    "        }\n",
    "        df = df.append(y, ignore_index=True)\n",
    "print(df.iloc[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\kanyemusic.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                 name duration_ms popularity  \\\n",
      "0                                       Feel The Love      165053         70   \n",
      "1                                                Fire      140526         64   \n",
      "2                                       4th Dimension      153351         70   \n",
      "3                           Freeee (Ghost Town Pt. 2)      206605         64   \n",
      "4                                              Reborn      324674         75   \n",
      "5                                     Kids See Ghosts      245098         65   \n",
      "6                                        Cudi Montage      197000         67   \n",
      "7                         I Thought About Killing You      274186         64   \n",
      "8                                               Yikes      188773         71   \n",
      "9                                            All Mine      145506         75   \n",
      "10                                     Wouldn't Leave      205546         66   \n",
      "11                                        No Mistakes      123040         64   \n",
      "12                                         Ghost Town      271386         72   \n",
      "13                                     Violent Crimes      215320         70   \n",
      "14                                    Ultralight Beam      320680         70   \n",
      "15                      Father Stretch My Hands Pt. 1      135920         73   \n",
      "16                                              Pt. 2      130293         66   \n",
      "17                                             Famous      196040         73   \n",
      "18                                           Feedback      147240         62   \n",
      "19                                         Low Lights      131773         58   \n",
      "20                                         Highlights      199866         61   \n",
      "21                                        Freestyle 4      123386         59   \n",
      "22                                       I Love Kanye       44826         59   \n",
      "23                                              Waves      181573         72   \n",
      "24                                                FML      236120         68   \n",
      "25                                       Real Friends      251573         67   \n",
      "26                                             Wolves      301586         68   \n",
      "27                                      Frank's Track       38333         60   \n",
      "28          Siiiiiiiiilver Surffffeeeeer Intermission       56560         55   \n",
      "29                                           30 Hours      323302         61   \n",
      "..                                                ...         ...        ...   \n",
      "323                     Hero - Album Version (Edited)      240093         28   \n",
      "324                         Dance Wiv Me - Radio Edit      204093         26   \n",
      "325                                           Alright      218280         31   \n",
      "326                                       Last Resort      199600         28   \n",
      "327          Let's Get Dirty (I Can't Get In Da Club)      233720         26   \n",
      "328                        Rollin' (Air Raid Vehicle)      213880         27   \n",
      "329                                      Tainted Love      153880         25   \n",
      "330                                    Collard Greens      299960         30   \n",
      "331                                   American Psycho      276773         25   \n",
      "332                      Foxtrot Uniform Charlie Kilo      171973         23   \n",
      "333                     Day 'N' Nite - Original Clean      220403         29   \n",
      "334                                          Kathleen      160886         22   \n",
      "335                                  Hood Billionaire      237400         25   \n",
      "336                           Wake Me Up - Radio Edit      247426         25   \n",
      "337                                       The Morning      275080         27   \n",
      "338                                          Wild Boy      230360         26   \n",
      "339                                            Demons      175200         33   \n",
      "340                                     Soul Survivor      280013         27   \n",
      "341                                          Pop That      303533         29   \n",
      "342                                Won't Let You Down      267066         23   \n",
      "343                                   U Mad - Revised      299573         25   \n",
      "344                                     All Around Me      198506         28   \n",
      "345                                        Chin Check      263040         23   \n",
      "346                     Echo - Album Version (Edited)      295066         23   \n",
      "347                        We Own It (Fast & Furious)      227893         40   \n",
      "348                             Prayer Of The Refugee      199386         24   \n",
      "349                               Poppin' Them Thangs      240800         27   \n",
      "350                            Changing Of The Guards      149200         23   \n",
      "351             American Boy - Lost Frequencies Remix      239726         61   \n",
      "352  American Boy - Lost Frequencies Remix / Extended      326801         40   \n",
      "\n",
      "    num_markets                                  album disc_number  \\\n",
      "0            79                        KIDS SEE GHOSTS           1   \n",
      "1            79                        KIDS SEE GHOSTS           1   \n",
      "2            79                        KIDS SEE GHOSTS           1   \n",
      "3            79                        KIDS SEE GHOSTS           1   \n",
      "4            79                        KIDS SEE GHOSTS           1   \n",
      "5            79                        KIDS SEE GHOSTS           1   \n",
      "6            79                        KIDS SEE GHOSTS           1   \n",
      "7            79                                     ye           1   \n",
      "8            79                                     ye           1   \n",
      "9            79                                     ye           1   \n",
      "10           79                                     ye           1   \n",
      "11           79                                     ye           1   \n",
      "12           79                                     ye           1   \n",
      "13           79                                     ye           1   \n",
      "14           79                      The Life Of Pablo           1   \n",
      "15           79                      The Life Of Pablo           1   \n",
      "16           79                      The Life Of Pablo           1   \n",
      "17           79                      The Life Of Pablo           1   \n",
      "18           79                      The Life Of Pablo           1   \n",
      "19           79                      The Life Of Pablo           1   \n",
      "20           79                      The Life Of Pablo           1   \n",
      "21           79                      The Life Of Pablo           1   \n",
      "22           79                      The Life Of Pablo           1   \n",
      "23           79                      The Life Of Pablo           1   \n",
      "24           79                      The Life Of Pablo           1   \n",
      "25           79                      The Life Of Pablo           1   \n",
      "26           79                      The Life Of Pablo           1   \n",
      "27           79                      The Life Of Pablo           1   \n",
      "28           79                      The Life Of Pablo           1   \n",
      "29           79                      The Life Of Pablo           1   \n",
      "..          ...                                    ...         ...   \n",
      "323          29                               Gym Pump           1   \n",
      "324          29                               Gym Pump           1   \n",
      "325          29                               Gym Pump           1   \n",
      "326          29                               Gym Pump           1   \n",
      "327          29                               Gym Pump           1   \n",
      "328          29                               Gym Pump           1   \n",
      "329          29                               Gym Pump           1   \n",
      "330          29                               Gym Pump           1   \n",
      "331          29                               Gym Pump           1   \n",
      "332          29                               Gym Pump           1   \n",
      "333          29                               Gym Pump           1   \n",
      "334          29                               Gym Pump           1   \n",
      "335          29                               Gym Pump           1   \n",
      "336          29                               Gym Pump           1   \n",
      "337          29                               Gym Pump           1   \n",
      "338          29                               Gym Pump           1   \n",
      "339          29                               Gym Pump           1   \n",
      "340          29                               Gym Pump           1   \n",
      "341          29                               Gym Pump           1   \n",
      "342          29                               Gym Pump           1   \n",
      "343          29                               Gym Pump           1   \n",
      "344          29                               Gym Pump           1   \n",
      "345          29                               Gym Pump           1   \n",
      "346          29                               Gym Pump           1   \n",
      "347          29                               Gym Pump           1   \n",
      "348          29                               Gym Pump           1   \n",
      "349          29                               Gym Pump           1   \n",
      "350          29                               Gym Pump           1   \n",
      "351          78  American Boy (Lost Frequencies Remix)           1   \n",
      "352          78  American Boy (Lost Frequencies Remix)           1   \n",
      "\n",
      "    is_explicit track_number release_date                     artist  ...  \\\n",
      "0          True            1   2018-06-08            KIDS SEE GHOSTS  ...   \n",
      "1          True            2   2018-06-08            KIDS SEE GHOSTS  ...   \n",
      "2          True            3   2018-06-08            KIDS SEE GHOSTS  ...   \n",
      "3          True            4   2018-06-08            KIDS SEE GHOSTS  ...   \n",
      "4          True            5   2018-06-08            KIDS SEE GHOSTS  ...   \n",
      "5          True            6   2018-06-08            KIDS SEE GHOSTS  ...   \n",
      "6          True            7   2018-06-08            KIDS SEE GHOSTS  ...   \n",
      "7          True            1   2018-06-01                 Kanye West  ...   \n",
      "8          True            2   2018-06-01                 Kanye West  ...   \n",
      "9          True            3   2018-06-01                 Kanye West  ...   \n",
      "10         True            4   2018-06-01                 Kanye West  ...   \n",
      "11         True            5   2018-06-01                 Kanye West  ...   \n",
      "12         True            6   2018-06-01                 Kanye West  ...   \n",
      "13         True            7   2018-06-01                 Kanye West  ...   \n",
      "14         True            1   2016-06-10                 Kanye West  ...   \n",
      "15         True            2   2016-06-10                 Kanye West  ...   \n",
      "16         True            3   2016-06-10                 Kanye West  ...   \n",
      "17         True            4   2016-06-10                 Kanye West  ...   \n",
      "18         True            5   2016-06-10                 Kanye West  ...   \n",
      "19         True            6   2016-06-10                 Kanye West  ...   \n",
      "20         True            7   2016-06-10                 Kanye West  ...   \n",
      "21         True            8   2016-06-10                 Kanye West  ...   \n",
      "22         True            9   2016-06-10                 Kanye West  ...   \n",
      "23         True           10   2016-06-10                 Kanye West  ...   \n",
      "24         True           11   2016-06-10                 Kanye West  ...   \n",
      "25         True           12   2016-06-10                 Kanye West  ...   \n",
      "26         True           13   2016-06-10                 Kanye West  ...   \n",
      "27         True           14   2016-06-10                 Kanye West  ...   \n",
      "28         True           15   2016-06-10                 Kanye West  ...   \n",
      "29         True           16   2016-06-10                 Kanye West  ...   \n",
      "..          ...          ...          ...                        ...  ...   \n",
      "323        True           10   2019-05-03                        Nas  ...   \n",
      "324       False           11   2019-05-03              Dizzee Rascal  ...   \n",
      "325        True           12   2019-05-03                      Logic  ...   \n",
      "326        True           13   2019-05-03                 Papa Roach  ...   \n",
      "327        True           14   2019-05-03                     Redman  ...   \n",
      "328        True           15   2019-05-03                Limp Bizkit  ...   \n",
      "329       False           16   2019-05-03                  Soft Cell  ...   \n",
      "330        True           17   2019-05-03                ScHoolboy Q  ...   \n",
      "331        True           18   2019-05-03                        D12  ...   \n",
      "332       False           19   2019-05-03            Bloodhound Gang  ...   \n",
      "333        True           20   2019-05-03                   Kid Cudi  ...   \n",
      "334       False           21   2019-05-03  Catfish and the Bottlemen  ...   \n",
      "335        True           22   2019-05-03                  Rick Ross  ...   \n",
      "336       False           23   2019-05-03                     Avicii  ...   \n",
      "337        True           24   2019-05-03                    Raekwon  ...   \n",
      "338        True           25   2019-05-03          Machine Gun Kelly  ...   \n",
      "339       False           26   2019-05-03            Imagine Dragons  ...   \n",
      "340        True           27   2019-05-03                      Jeezy  ...   \n",
      "341        True           28   2019-05-03             French Montana  ...   \n",
      "342        True           29   2019-05-03              Hilltop Hoods  ...   \n",
      "343        True           30   2019-05-03                  Vic Mensa  ...   \n",
      "344       False           31   2019-05-03                    Flyleaf  ...   \n",
      "345        True           32   2019-05-03                     N.W.A.  ...   \n",
      "346        True           33   2019-05-03             Bad Meets Evil  ...   \n",
      "347       False           34   2019-05-03                   2 Chainz  ...   \n",
      "348       False           35   2019-05-03               Rise Against  ...   \n",
      "349        True           36   2019-05-03                     G-Unit  ...   \n",
      "350        True           37   2019-05-03                    Pusha T  ...   \n",
      "351        True            1   2019-04-01                    Estelle  ...   \n",
      "352        True            2   2019-04-01                    Estelle  ...   \n",
      "\n",
      "     key  loudness mode  speechiness acousticness  instrumentalness  liveness  \\\n",
      "0      0    -5.946    0       0.1040     0.126000          0.000073    0.0990   \n",
      "1      6    -3.801    1       0.1600     0.472000          0.000005    0.1820   \n",
      "2      1    -6.755    1       0.3900     0.278000          0.000019    0.6090   \n",
      "3      9    -4.855    0       0.0632     0.004570          0.000000    0.1580   \n",
      "4      0    -7.499    1       0.0370     0.339000          0.040400    0.1950   \n",
      "5      2    -7.007    1       0.0458     0.113000          0.000097    0.1310   \n",
      "6      8    -6.784    0       0.0321     0.401000          0.000001    0.1210   \n",
      "7      2    -7.932    1       0.4110     0.867000          0.000000    0.0486   \n",
      "8      1    -3.251    0       0.3410     0.150000          0.000000    0.2270   \n",
      "9     11    -6.531    0       0.2910     0.123000          0.000000    0.0931   \n",
      "10     3    -8.551    1       0.5450     0.495000          0.000000    0.3080   \n",
      "11    10    -2.442    0       0.0629     0.039300          0.000000    0.1090   \n",
      "12     7    -4.247    0       0.0288     0.096900          0.000000    0.3290   \n",
      "13     1    -6.724    0       0.5220     0.376000          0.000000    0.1870   \n",
      "14     8    -8.714    1       0.3830     0.637000          0.000000    0.5390   \n",
      "15     7    -4.408    1       0.0560     0.142000          0.000001    0.5700   \n",
      "16    11    -4.141    1       0.3610     0.577000          0.000000    0.7890   \n",
      "17     6    -3.690    1       0.1110     0.060200          0.000000    0.1150   \n",
      "18     1    -6.038    1       0.4920     0.593000          0.000000    0.1040   \n",
      "19     7    -4.745    1       0.1150     0.726000          0.000000    0.1230   \n",
      "20     2    -6.234    1       0.1620     0.005730          0.000000    0.3040   \n",
      "21     9    -8.295    0       0.0965     0.047600          0.000000    0.0901   \n",
      "22     9    -7.807    1       0.7640     0.581000          0.000000    0.2340   \n",
      "23    10    -4.454    1       0.0519     0.036300          0.000004    0.3320   \n",
      "24     9    -7.146    0       0.0822     0.313000          0.000000    0.1930   \n",
      "25     6    -6.281    0       0.4560     0.268000          0.000330    0.1380   \n",
      "26     1    -8.016    1       0.0450     0.186000          0.002550    0.1310   \n",
      "27    11    -7.033    1       0.0000     0.974000          0.000000    0.1040   \n",
      "28     9   -11.953    1       0.9250     0.982000          0.000078    0.1190   \n",
      "29     7    -6.736    1       0.2910     0.032000          0.000000    0.1070   \n",
      "..   ...       ...  ...          ...          ...               ...       ...   \n",
      "323    7    -5.193    1       0.1810     0.000993          0.000003    0.2640   \n",
      "324   11    -4.281    1       0.0451     0.047600          0.000000    0.1540   \n",
      "325   11    -5.056    1       0.0481     0.050400          0.000008    0.0762   \n",
      "326    7    -3.357    1       0.0618     0.000504          0.000378    0.2390   \n",
      "327    1    -6.438    1       0.3850     0.052500          0.000000    0.3300   \n",
      "328    9    -3.143    1       0.1530     0.004980          0.000000    0.3420   \n",
      "329    0    -8.057    0       0.0352     0.476000          0.000000    0.2920   \n",
      "330   11    -4.870    1       0.0633     0.025000          0.000010    0.2050   \n",
      "331   10    -3.712    0       0.2710     0.224000          0.000000    0.1030   \n",
      "332   10    -5.176    0       0.0404     0.004360          0.038100    0.0714   \n",
      "333   11    -7.803    0       0.0785     0.742000          0.000765    0.1090   \n",
      "334   11    -4.757    0       0.0786     0.000369          0.002930    0.4110   \n",
      "335    7    -5.897    1       0.1540     0.036800          0.000000    0.4480   \n",
      "336    2    -5.697    1       0.0523     0.003800          0.001200    0.1610   \n",
      "337    7    -4.594    1       0.3360     0.037800          0.000000    0.3220   \n",
      "338   10    -4.053    0       0.0503     0.028200          0.000000    0.4220   \n",
      "339    3    -3.015    1       0.0321     0.190000          0.000250    0.3290   \n",
      "340   10    -7.718    1       0.0451     0.001030          0.000000    0.1590   \n",
      "341    2    -1.856    1       0.1250     0.064800          0.000000    0.5800   \n",
      "342    2    -9.559    1       0.0446     0.699000          0.000000    0.0723   \n",
      "343    9    -6.488    1       0.0511     0.011200          0.000000    0.3110   \n",
      "344    9    -4.893    1       0.0456     0.021600          0.000000    0.0525   \n",
      "345    7    -7.374    1       0.3700     0.151000          0.000027    0.3150   \n",
      "346    7    -3.966    1       0.1630     0.156000          0.000029    0.2590   \n",
      "347    8    -4.573    1       0.4080     0.052100          0.000000    0.0568   \n",
      "348    3    -3.494    0       0.1590     0.001650          0.000011    0.2590   \n",
      "349    6    -1.385    0       0.1920     0.263000          0.000000    0.0787   \n",
      "350    0    -4.997    1       0.2530     0.004040          0.000000    0.7490   \n",
      "351    4    -6.522    0       0.0908     0.086000          0.000000    0.5080   \n",
      "352    9    -8.361    1       0.0921     0.014800          0.000161    0.0953   \n",
      "\n",
      "     valence    tempo  time_signature  \n",
      "0     0.3690  110.573               4  \n",
      "1     0.3700  104.999               4  \n",
      "2     0.7340  171.945               4  \n",
      "3     0.3060  151.643               4  \n",
      "4     0.2270  100.051               4  \n",
      "5     0.3380   94.985               4  \n",
      "6     0.3050  110.011               4  \n",
      "7     0.4170  116.016               4  \n",
      "8     0.2230  173.996               4  \n",
      "9     0.2910  121.927               4  \n",
      "10    0.3520  164.235               4  \n",
      "11    0.3500   80.174               4  \n",
      "12    0.2970   83.378               4  \n",
      "13    0.0397  109.813               4  \n",
      "14    0.3600  107.425               4  \n",
      "15    0.4490  113.074               4  \n",
      "16    0.2850  145.105               4  \n",
      "17    0.4020  174.100               4  \n",
      "18    0.1490  100.170               4  \n",
      "19    0.5680   96.606               4  \n",
      "20    0.3770  101.963               4  \n",
      "21    0.5080  125.524               4  \n",
      "22    0.9630  159.613               4  \n",
      "23    0.0565   96.072               4  \n",
      "24    0.1560  125.116               4  \n",
      "25    0.1210  170.612               4  \n",
      "26    0.1180   78.248               4  \n",
      "27    0.0000    0.000               0  \n",
      "28    0.9140   72.019               4  \n",
      "29    0.3570   95.122               4  \n",
      "..       ...      ...             ...  \n",
      "323   0.3470  190.046               4  \n",
      "324   0.7920  111.996               4  \n",
      "325   0.1420  127.035               4  \n",
      "326   0.6540   90.605               4  \n",
      "327   0.4990   99.654               4  \n",
      "328   0.7220   96.305               4  \n",
      "329   0.6510  144.543               4  \n",
      "330   0.6500  153.954               4  \n",
      "331   0.5230   84.915               4  \n",
      "332   0.7880  137.035               4  \n",
      "333   0.6910  138.049               4  \n",
      "334   0.5980  137.930               4  \n",
      "335   0.3230   95.266               5  \n",
      "336   0.6430  124.080               4  \n",
      "337   0.1900   82.060               4  \n",
      "338   0.5250  140.041               4  \n",
      "339   0.4280   89.938               4  \n",
      "340   0.1080   84.012               4  \n",
      "341   0.6050  138.031               4  \n",
      "342   0.6280   90.055               4  \n",
      "343   0.5040  134.065               4  \n",
      "344   0.4700  146.975               4  \n",
      "345   0.6670  100.012               4  \n",
      "346   0.3870  146.966               4  \n",
      "347   0.5520  171.966               4  \n",
      "348   0.3900  195.711               4  \n",
      "349   0.9180   88.017               4  \n",
      "350   0.1320   72.641               4  \n",
      "351   0.2070  124.009               4  \n",
      "352   0.4850  124.013               4  \n",
      "\n",
      "[353 rows x 22 columns]\n"
     ]
    }
   ],
   "source": [
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "kanye_albums_list = ['KIDS SEE GHOSTS','The College Dropout','Late Registration','Graduation','808s & Heartbreak','My Beautiful Dark Twisted Fantasy','Yeezus','The Life Of Pablo' ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Feel The Love\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Fire\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"4th Dimension\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Freeee (Ghost Town Pt. 2)\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Reborn\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Kids See Ghosts\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Cudi Montage\" by Kanye West...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album ksg\n",
    "#clean to album level\n",
    "ksg = df[df['album'] == 'KIDS SEE GHOSTS']\n",
    "ksg = ksg[ksg['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "ksg_list=[]\n",
    "for row in ksg['name']:\n",
    "\n",
    "    ksg_list.append(getLyric(row, 'Kanye West')),\n",
    "\n",
    "ksglyrics = pd.DataFrame(ksg_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "ksg = ksg.reset_index()\n",
    "#add lyrics\n",
    "ksg['lyrics'] = ksglyrics['string_values']\n",
    "#clean\n",
    "ksg = ksg.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Intro\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"We Don't Care\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Graduation Day\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"All Falls Down\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"I'll Fly Away\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Spaceship\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Jesus Walks\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Never Let Me Down\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Get Em High\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Workout Plan\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"The New Workout Plan\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Slow Jamz\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Breathe In Breathe Out\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"School Spirit Skit 1\" by Kanye West...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"School Spirit Skit 2\" by Kanye West...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Lil Jimmy Skit\" by Kanye West...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Two Words\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Through The Wire\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Family Business\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Last Call\" by Kanye West...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album ksg\n",
    "#clean to album level\n",
    "tcd = df[df['album'] == 'The College Dropout']\n",
    "tcd = tcd[tcd['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "tcd_list=[]\n",
    "for row in tcd['name']:\n",
    "\n",
    "    tcd_list.append(getLyric(row, 'Kanye West')),\n",
    "\n",
    "tcdlyrics = pd.DataFrame(tcd_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "tcd = tcd.reset_index()\n",
    "#add lyrics\n",
    "tcd['lyrics'] = tcdlyrics['string_values']\n",
    "#clean\n",
    "tcd =tcd.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                      name duration_ms popularity num_markets  \\\n",
      "0                    Intro       19133          7          79   \n",
      "1            We Don't Care      239880         58          79   \n",
      "2           Graduation Day       81786         51          79   \n",
      "3           All Falls Down      223506         71          79   \n",
      "4            I'll Fly Away       69706         51          79   \n",
      "5                Spaceship      324226         58          79   \n",
      "6              Jesus Walks      193733         66          79   \n",
      "7        Never Let Me Down      324440         58          79   \n",
      "8              Get Em High      289493         56          79   \n",
      "9             Workout Plan       46173         48          79   \n",
      "10    The New Workout Plan      322800         59          79   \n",
      "11               Slow Jamz      316053         61          79   \n",
      "12  Breathe In Breathe Out      246933         52          79   \n",
      "16               Two Words      266213         53          79   \n",
      "17        Through The Wire      221226         68          79   \n",
      "18         Family Business      278893         58          79   \n",
      "19               Last Call      760973         53          79   \n",
      "\n",
      "                  album disc_number is_explicit track_number release_date  \\\n",
      "0   The College Dropout           1        True            1   2004-02-10   \n",
      "1   The College Dropout           1        True            2   2004-02-10   \n",
      "2   The College Dropout           1        True            3   2004-02-10   \n",
      "3   The College Dropout           1        True            4   2004-02-10   \n",
      "4   The College Dropout           1        True            5   2004-02-10   \n",
      "5   The College Dropout           1        True            6   2004-02-10   \n",
      "6   The College Dropout           1        True            7   2004-02-10   \n",
      "7   The College Dropout           1        True            8   2004-02-10   \n",
      "8   The College Dropout           1        True            9   2004-02-10   \n",
      "9   The College Dropout           1        True           10   2004-02-10   \n",
      "10  The College Dropout           1        True           11   2004-02-10   \n",
      "11  The College Dropout           1        True           12   2004-02-10   \n",
      "12  The College Dropout           1        True           13   2004-02-10   \n",
      "16  The College Dropout           1        True           18   2004-02-10   \n",
      "17  The College Dropout           1        True           19   2004-02-10   \n",
      "18  The College Dropout           1        True           20   2004-02-10   \n",
      "19  The College Dropout           1        True           21   2004-02-10   \n",
      "\n",
      "        artist  ...  loudness  mode speechiness  acousticness  \\\n",
      "0   Kanye West  ...   -13.909     1      0.8770       0.23700   \n",
      "1   Kanye West  ...    -5.827     0      0.1810       0.01420   \n",
      "2   Kanye West  ...    -9.058     0      0.3380       0.68400   \n",
      "3   Kanye West  ...    -4.832     0      0.4840       0.14900   \n",
      "4   Kanye West  ...   -11.414     1      0.0289       0.76000   \n",
      "5   Kanye West  ...    -5.310     0      0.1900       0.50300   \n",
      "6   Kanye West  ...    -4.686     0      0.3230       0.61400   \n",
      "7   Kanye West  ...    -4.872     0      0.4030       0.42300   \n",
      "8   Kanye West  ...    -5.672     0      0.3730       0.18400   \n",
      "9   Kanye West  ...   -13.843     1      0.9250       0.78500   \n",
      "10  Kanye West  ...    -4.831     1      0.1980       0.00981   \n",
      "11      Twista  ...    -5.659     0      0.1710       0.31400   \n",
      "12  Kanye West  ...    -3.099     0      0.4210       0.34100   \n",
      "16  Kanye West  ...    -4.753     1      0.2650       0.01580   \n",
      "17  Kanye West  ...    -6.110     1      0.2470       0.00865   \n",
      "18  Kanye West  ...    -7.452     1      0.2100       0.13900   \n",
      "19  Kanye West  ...    -6.843     1      0.3560       0.57700   \n",
      "\n",
      "   instrumentalness  liveness  valence    tempo  time_signature  \\\n",
      "0          0.000000     0.510    0.463   87.491               3   \n",
      "1          0.000000     0.247    0.647   83.155               4   \n",
      "2          0.000002     0.414    0.869  169.336               4   \n",
      "3          0.000000     0.139    0.434   91.030               4   \n",
      "4          0.000000     0.124    0.564  172.338               4   \n",
      "5          0.000000     0.573    0.657  178.068               3   \n",
      "6          0.000000     0.317    0.715   87.312               4   \n",
      "7          0.000000     0.169    0.643   80.293               4   \n",
      "8          0.000000     0.489    0.649   84.788               4   \n",
      "9          0.000000     0.688    0.772  115.114               4   \n",
      "10         0.000000     0.365    0.646  118.022               4   \n",
      "11         0.000000     0.284    0.611  145.115               4   \n",
      "12         0.000000     0.161    0.924   88.817               4   \n",
      "16         0.000006     0.217    0.446   84.649               4   \n",
      "17         0.000005     0.158    0.660   83.089               4   \n",
      "18         0.000000     0.392    0.606   93.691               4   \n",
      "19         0.000000     0.316    0.854   83.212               4   \n",
      "\n",
      "                                               lyrics  \n",
      "0   [Intro: DeRay Davis]\\nKanye, can I talk to you...  \n",
      "1   [Produced by Kanye West]\\n\\n[Intro]\\nOh yeah.....  \n",
      "2   [Spoken: DeRay]\\nWhat in the fuck was that, Ka...  \n",
      "3   [Chorus: Syleena Johnson + Kanye West]\\nOh, wh...  \n",
      "4   One glad morning\\nWhen this life is over\\nI'll...  \n",
      "5   [Produced by Kanye West]\\n\\n[Chorus]\\nI've bee...  \n",
      "6   [Intro]\\nWe at war\\nWe at war with terrorism, ...  \n",
      "7   [Chorus]\\nWhen it comes to being true, at leas...  \n",
      "8   [Intro: Kanye West]\\nI'm trying to catch the b...  \n",
      "9   [Intro]\\nYou just popped in the Kanye West\\nGe...  \n",
      "10  [Intro]\\nYou just popped in the Kanye West\\nGe...  \n",
      "11  [Produced by Kanye West]\\n\\n[Intro]\\nAre you g...  \n",
      "12  [Chorus: Ludacris]\\nYeah, breathe in, breathe ...  \n",
      "16  [Intro: Kanye West]\\nWe in the streets, playa,...  \n",
      "17  [Music Video]\\n[Produced by Kanye West]\\n\\n[In...  \n",
      "18  [Intro]\\nHow's your son? (all the things)\\nHe ...  \n",
      "19  [Produced by Evidence & Kanye West]\\n\\n[Intro:...  \n",
      "\n",
      "[17 rows x 23 columns]\n"
     ]
    }
   ],
   "source": [
    "tcd = tcd.drop([13])\n",
    "tcd = tcd.drop([14])\n",
    "tcd = tcd.drop([15])\n",
    "print(tcd)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Wake Up Mr. West\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Heard 'Em Say\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Touch The Sky\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Gold Digger\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Skit #1\" by Kanye West...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Drive Slow\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"My Way Home\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Crack Music\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Roses\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Bring Me Down\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Addiction\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Skit #2\" by Kanye West...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Diamonds From Sierra Leone - Remix\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"We Major\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Skit #3\" by Kanye West...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Hey Mama\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Celebration\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Skit #4\" by Kanye West...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Gone\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Diamonds From Sierra Leone - Bonus Track\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Late\" by Kanye West...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album late registration\n",
    "#clean to album level\n",
    "lr = df[df['album'] == 'Late Registration']\n",
    "lr = lr[lr['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "lr_list=[]\n",
    "for row in lr['name']:\n",
    "\n",
    "    lr_list.append(getLyric(row, 'Kanye West')),\n",
    "\n",
    "lrlyrics = pd.DataFrame(lr_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "lr = lr.reset_index()\n",
    "#add lyrics\n",
    "lr['lyrics'] = lrlyrics['string_values']\n",
    "#clean\n",
    "lr =lr.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                        name duration_ms popularity  \\\n",
      "0                           Wake Up Mr. West       41066         48   \n",
      "1                              Heard 'Em Say      203733         62   \n",
      "2                              Touch The Sky      235500         66   \n",
      "3                                Gold Digger      207626         77   \n",
      "4                                    Skit #1       33573         47   \n",
      "5                                 Drive Slow      272226         57   \n",
      "6                                My Way Home      103373         50   \n",
      "7                                Crack Music      269750         51   \n",
      "8                                      Roses      245866         54   \n",
      "9                              Bring Me Down      198973         49   \n",
      "10                                 Addiction      267066         52   \n",
      "11                                   Skit #2       31250         44   \n",
      "12        Diamonds From Sierra Leone - Remix      233400         57   \n",
      "13                                  We Major      448000         52   \n",
      "14                                   Skit #3       24133          3   \n",
      "15                                  Hey Mama      304500         61   \n",
      "16                               Celebration      198440         49   \n",
      "17                                   Skit #4       78666         43   \n",
      "18                                      Gone      332250         54   \n",
      "19  Diamonds From Sierra Leone - Bonus Track      238400         51   \n",
      "20                                      Late      229750         49   \n",
      "\n",
      "   num_markets              album disc_number is_explicit track_number  \\\n",
      "0           79  Late Registration           1        True            1   \n",
      "1           79  Late Registration           1        True            2   \n",
      "2           79  Late Registration           1        True            3   \n",
      "3           79  Late Registration           1        True            4   \n",
      "4           79  Late Registration           1        True            5   \n",
      "5           79  Late Registration           1        True            6   \n",
      "6           79  Late Registration           1        True            7   \n",
      "7           79  Late Registration           1        True            8   \n",
      "8           79  Late Registration           1        True            9   \n",
      "9           79  Late Registration           1        True           10   \n",
      "10          79  Late Registration           1        True           11   \n",
      "11          79  Late Registration           1        True           12   \n",
      "12          79  Late Registration           1        True           13   \n",
      "13          79  Late Registration           1        True           14   \n",
      "14          79  Late Registration           1        True           15   \n",
      "15          79  Late Registration           1        True           16   \n",
      "16          79  Late Registration           1        True           17   \n",
      "17          79  Late Registration           1        True           18   \n",
      "18          79  Late Registration           1        True           19   \n",
      "19          79  Late Registration           1        True           20   \n",
      "20          79  Late Registration           1        True           21   \n",
      "\n",
      "   release_date      artist  ...  loudness  mode speechiness  acousticness  \\\n",
      "0    2005-09-30  Kanye West  ...    -9.689     1      0.9480       0.81100   \n",
      "1    2005-09-30  Kanye West  ...    -8.437     0      0.1810       0.05500   \n",
      "2    2005-09-30  Kanye West  ...    -4.835     1      0.3550       0.01580   \n",
      "3    2005-09-30  Kanye West  ...    -5.540     0      0.3840       0.02230   \n",
      "4    2005-09-30  Kanye West  ...   -12.572     0      0.9360       0.52800   \n",
      "5    2005-09-30  Kanye West  ...    -8.198     1      0.2120       0.03200   \n",
      "6    2005-09-30  Kanye West  ...   -10.474     1      0.0388       0.34200   \n",
      "7    2005-09-30  Kanye West  ...    -6.265     0      0.2380       0.01170   \n",
      "8    2005-09-30  Kanye West  ...    -6.950     0      0.1280       0.28600   \n",
      "9    2005-09-30  Kanye West  ...    -6.820     0      0.1510       0.00735   \n",
      "10   2005-09-30  Kanye West  ...    -8.224     0      0.1870       0.17800   \n",
      "11   2005-09-30  Kanye West  ...   -11.897     1      0.9420       0.34600   \n",
      "12   2005-09-30  Kanye West  ...    -3.742     1      0.2580       0.24400   \n",
      "13   2005-09-30  Kanye West  ...    -3.599     0      0.1250       0.01130   \n",
      "14   2005-09-30  Kanye West  ...   -12.254     1      0.9560       0.55400   \n",
      "15   2005-09-30  Kanye West  ...    -6.884     1      0.2170       0.05720   \n",
      "16   2005-09-30  Kanye West  ...    -4.203     1      0.1390       0.02000   \n",
      "17   2005-09-30  Kanye West  ...   -19.502     1      0.9500       0.03940   \n",
      "18   2005-09-30  Kanye West  ...    -6.114     0      0.2500       0.01780   \n",
      "19   2005-09-30  Kanye West  ...    -3.372     1      0.2910       0.15400   \n",
      "20   2005-09-30  Kanye West  ...    -5.902     0      0.1800       0.21600   \n",
      "\n",
      "   instrumentalness  liveness  valence    tempo  time_signature  \\\n",
      "0          0.000000    0.0639    0.634   82.598               5   \n",
      "1          0.039400    0.1240    0.569   94.857               4   \n",
      "2          0.000000    0.3740    0.545  106.302               4   \n",
      "3          0.000000    0.0917    0.660   92.939               4   \n",
      "4          0.000000    0.1540    0.840   89.663               3   \n",
      "5          0.000013    0.3150    0.476   87.992               4   \n",
      "6          0.000001    0.0958    0.758   86.813               4   \n",
      "7          0.000278    0.4220    0.580  168.105               5   \n",
      "8          0.000054    0.1090    0.450   96.940               4   \n",
      "9          0.000000    0.6100    0.392   94.617               4   \n",
      "10         0.000000    0.2270    0.536  115.085               4   \n",
      "11         0.000000    0.1870    0.940   79.132               4   \n",
      "12         0.000000    0.2010    0.471   96.808               4   \n",
      "13         0.000000    0.1340    0.224   84.598               4   \n",
      "14         0.000000    0.5300    0.533   66.634               5   \n",
      "15         0.000000    0.1050    0.375   95.936               4   \n",
      "16         0.000006    0.1240    0.374   79.638               4   \n",
      "17         0.000000    0.1250    0.138   80.308               4   \n",
      "18         0.000000    0.0741    0.332   92.732               4   \n",
      "19         0.000000    0.2690    0.512   96.483               4   \n",
      "20         0.000003    0.2950    0.605  159.468               4   \n",
      "\n",
      "                                               lyrics  \n",
      "0   [Produced by Kanye West]\\n\\n[Skit]\\nOh, ho-ho-...  \n",
      "1   [Produced by Kanye West and Jon Brion]\\n\\n[Int...  \n",
      "2   [Produced by Just Blaze]\\n\\n[Hook: Kanye West]...  \n",
      "3   [Produced by Kanye West and Jon Brion]\\n\\n[Int...  \n",
      "4                                                None  \n",
      "5   [Produced by Kanye West]\\n\\n[Chorus: Kanye Wes...  \n",
      "6   [Produced by Kanye West]\\n\\n[Verse: Common]\\nY...  \n",
      "7   [Produced by Kanye West & Jon Brion]\\n\\n[Choru...  \n",
      "8   [Produced by Kanye West and Jon Brion]\\n\\n[Ver...  \n",
      "9   [Produced by Kanye West and Jon Brion]\\n\\n[Hoo...  \n",
      "10  [Produced by Jon Brion & Kanye West]\\n\\n[Intro...  \n",
      "11                                               None  \n",
      "12  [Produced by Kanye West, Devo Springsteen and ...  \n",
      "13  [Produced by Jon Brion, Kanye West & Warryn Ca...  \n",
      "14                                               None  \n",
      "15  [Chorus]\\n(Hey Mama)\\nI wanna scream so loud f...  \n",
      "16  [Hook]\\nYeah, you know what this is\\nIt's a ce...  \n",
      "17                                               None  \n",
      "18  [Produced by Kanye West]\\n\\n[Intro]\\nWished I ...  \n",
      "19  Last updated: 10/6/2018, 5:16PM MST\\nOctoberOc...  \n",
      "20  [Produced by Kanye West]\\n\\n[Intro]\\nLittle gi...  \n",
      "\n",
      "[21 rows x 23 columns]\n"
     ]
    }
   ],
   "source": [
    "print(lr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [],
   "source": [
    "lr = lr.drop([4])\n",
    "lr = lr.drop([14])\n",
    "lr = lr.drop([11])\n",
    "lr = lr.drop([17])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Good Morning\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Champion\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Stronger\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"I Wonder\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Good Life\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Can't Tell Me Nothing\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Barry Bonds\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Drunk and Hot Girls\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Flashing Lights\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Everything I Am\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"The Glory\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Homecoming\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Big Brother\" by Kanye West...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album graduation\n",
    "#clean to album level\n",
    "grad = df[df['album'] == 'Graduation']\n",
    "grad = grad[grad['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "grad_list=[]\n",
    "for row in grad['name']:\n",
    "\n",
    "    grad_list.append(getLyric(row, 'Kanye West')),\n",
    "\n",
    "gradlyrics = pd.DataFrame(grad_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "grad = grad.reset_index()\n",
    "#add lyrics\n",
    "grad['lyrics'] = gradlyrics['string_values']\n",
    "#clean\n",
    "grad =grad.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Dark Fantasy\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Gorgeous\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"POWER\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"All Of The Lights (Interlude)\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"All Of The Lights\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Monster\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"So Appalled\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Devil In A New Dress\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Runaway\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Hell Of A Life\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Blame Game\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Lost In The World\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Who Will Survive In America\" by Kanye West...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album mbdtf\n",
    "#clean to album level\n",
    "mbdtf = df[df['album'] == 'My Beautiful Dark Twisted Fantasy']\n",
    "mbdtf = mbdtf[mbdtf['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "mbdtf_list=[]\n",
    "for row in mbdtf['name']:\n",
    "\n",
    "    mbdtf_list.append(getLyric(row, 'Kanye West')),\n",
    "\n",
    "mbdtflyrics = pd.DataFrame(mbdtf_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "mbdtf = mbdtf.reset_index()\n",
    "#add lyrics\n",
    "mbdtf['lyrics'] = mbdtflyrics['string_values']\n",
    "#clean\n",
    "mbdtf =mbdtf.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {},
   "outputs": [],
   "source": [
    "mbdtf = mbdtf.drop([3])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"On Sight\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Black Skinhead\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"I Am A God\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"New Slaves\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Hold My Liquor\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"I'm In It\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Blood On The Leaves\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Guilt Trip\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Send It Up\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Bound 2\" by Kanye West...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album Yeezus\n",
    "#clean to album level\n",
    "yzs = df[df['album'] == 'Yeezus']\n",
    "yzs = yzs[yzs['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "yzs_list=[]\n",
    "for row in yzs['name']:\n",
    "\n",
    "    yzs_list.append(getLyric(row, 'Kanye West')),\n",
    "\n",
    "yzslyrics = pd.DataFrame(yzs_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "yzs = yzs.reset_index()\n",
    "#add lyrics\n",
    "yzs['lyrics'] = yzslyrics['string_values']\n",
    "#clean\n",
    "yzs =yzs.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Ultralight Beam\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Father Stretch My Hands Pt. 1\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Pt. 2\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Famous\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Feedback\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Low Lights\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Highlights\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Freestyle 4\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"I Love Kanye\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Waves\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"FML\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Real Friends\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Wolves\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Frank's Track\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Siiiiiiiiilver Surffffeeeeer Intermission\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"30 Hours\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"No More Parties In LA\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Facts (Charlie Heat Version)\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Fade\" by Kanye West...\n",
      "Done.\n",
      "Searching for \"Saint Pablo\" by Kanye West...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album tlap\n",
    "#clean to album level\n",
    "tlop = df[df['album'] == 'The Life Of Pablo']\n",
    "tlop = tlop[tlop['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "tlop_list=[]\n",
    "for row in tlop['name']:\n",
    "\n",
    "    tlop_list.append(getLyric(row, 'Kanye West')),\n",
    "\n",
    "tloplyrics = pd.DataFrame(tlop_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "tlop = tlop.reset_index()\n",
    "#add lyrics\n",
    "tlop['lyrics'] = tloplyrics['string_values']\n",
    "#clean\n",
    "tlop =tlop.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                         name duration_ms popularity  \\\n",
      "0                             Ultralight Beam      320680         70   \n",
      "1               Father Stretch My Hands Pt. 1      135920         73   \n",
      "2                                       Pt. 2      130293         66   \n",
      "3                                      Famous      196040         73   \n",
      "4                                    Feedback      147240         62   \n",
      "5                                  Low Lights      131773         58   \n",
      "6                                  Highlights      199866         61   \n",
      "7                                 Freestyle 4      123386         59   \n",
      "8                                I Love Kanye       44826         59   \n",
      "9                                       Waves      181573         72   \n",
      "10                                        FML      236120         68   \n",
      "11                               Real Friends      251573         67   \n",
      "12                                     Wolves      301586         68   \n",
      "13                              Frank's Track       38333         60   \n",
      "14  Siiiiiiiiilver Surffffeeeeer Intermission       56560         55   \n",
      "15                                   30 Hours      323302         61   \n",
      "16                      No More Parties In LA      374413         65   \n",
      "17               Facts (Charlie Heat Version)      200733         60   \n",
      "18                                       Fade      193747         68   \n",
      "19                                Saint Pablo      372113         63   \n",
      "\n",
      "   num_markets              album disc_number is_explicit track_number  \\\n",
      "0           79  The Life Of Pablo           1        True            1   \n",
      "1           79  The Life Of Pablo           1        True            2   \n",
      "2           79  The Life Of Pablo           1        True            3   \n",
      "3           79  The Life Of Pablo           1        True            4   \n",
      "4           79  The Life Of Pablo           1        True            5   \n",
      "5           79  The Life Of Pablo           1        True            6   \n",
      "6           79  The Life Of Pablo           1        True            7   \n",
      "7           79  The Life Of Pablo           1        True            8   \n",
      "8           79  The Life Of Pablo           1        True            9   \n",
      "9           79  The Life Of Pablo           1        True           10   \n",
      "10          79  The Life Of Pablo           1        True           11   \n",
      "11          79  The Life Of Pablo           1        True           12   \n",
      "12          79  The Life Of Pablo           1        True           13   \n",
      "13          79  The Life Of Pablo           1        True           14   \n",
      "14          79  The Life Of Pablo           1        True           15   \n",
      "15          79  The Life Of Pablo           1        True           16   \n",
      "16          79  The Life Of Pablo           1        True           17   \n",
      "17          79  The Life Of Pablo           1        True           18   \n",
      "18          79  The Life Of Pablo           1        True           19   \n",
      "19          79  The Life Of Pablo           1        True           20   \n",
      "\n",
      "   release_date      artist  ...  loudness  mode speechiness  acousticness  \\\n",
      "0    2016-06-10  Kanye West  ...    -8.714     1      0.3830       0.63700   \n",
      "1    2016-06-10  Kanye West  ...    -4.408     1      0.0560       0.14200   \n",
      "2    2016-06-10  Kanye West  ...    -4.141     1      0.3610       0.57700   \n",
      "3    2016-06-10  Kanye West  ...    -3.690     1      0.1110       0.06020   \n",
      "4    2016-06-10  Kanye West  ...    -6.038     1      0.4920       0.59300   \n",
      "5    2016-06-10  Kanye West  ...    -4.745     1      0.1150       0.72600   \n",
      "6    2016-06-10  Kanye West  ...    -6.234     1      0.1620       0.00573   \n",
      "7    2016-06-10  Kanye West  ...    -8.295     0      0.0965       0.04760   \n",
      "8    2016-06-10  Kanye West  ...    -7.807     1      0.7640       0.58100   \n",
      "9    2016-06-10  Kanye West  ...    -4.454     1      0.0519       0.03630   \n",
      "10   2016-06-10  Kanye West  ...    -7.146     0      0.0822       0.31300   \n",
      "11   2016-06-10  Kanye West  ...    -6.281     0      0.4560       0.26800   \n",
      "12   2016-06-10  Kanye West  ...    -8.016     1      0.0450       0.18600   \n",
      "13   2016-06-10  Kanye West  ...    -7.033     1      0.0000       0.97400   \n",
      "14   2016-06-10  Kanye West  ...   -11.953     1      0.9250       0.98200   \n",
      "15   2016-06-10  Kanye West  ...    -6.736     1      0.2910       0.03200   \n",
      "16   2016-06-10  Kanye West  ...    -1.613     1      0.3000       0.23100   \n",
      "17   2016-06-10  Kanye West  ...    -3.780     0      0.1770       0.04650   \n",
      "18   2016-06-10  Kanye West  ...    -5.793     0      0.0880       0.10000   \n",
      "19   2016-06-10  Kanye West  ...    -4.102     0      0.3440       0.27300   \n",
      "\n",
      "   instrumentalness  liveness  valence    tempo  time_signature  \\\n",
      "0          0.000000    0.5390   0.3600  107.425               4   \n",
      "1          0.000001    0.5700   0.4490  113.074               4   \n",
      "2          0.000000    0.7890   0.2850  145.105               4   \n",
      "3          0.000000    0.1150   0.4020  174.100               4   \n",
      "4          0.000000    0.1040   0.1490  100.170               4   \n",
      "5          0.000000    0.1230   0.5680   96.606               4   \n",
      "6          0.000000    0.3040   0.3770  101.963               4   \n",
      "7          0.000000    0.0901   0.5080  125.524               4   \n",
      "8          0.000000    0.2340   0.9630  159.613               4   \n",
      "9          0.000004    0.3320   0.0565   96.072               4   \n",
      "10         0.000000    0.1930   0.1560  125.116               4   \n",
      "11         0.000330    0.1380   0.1210  170.612               4   \n",
      "12         0.002550    0.1310   0.1180   78.248               4   \n",
      "13         0.000000    0.1040   0.0000    0.000               0   \n",
      "14         0.000078    0.1190   0.9140   72.019               4   \n",
      "15         0.000000    0.1070   0.3570   95.122               4   \n",
      "16         0.000000    0.2210   0.6970   93.798               4   \n",
      "17         0.000000    0.2010   0.4010  142.074               4   \n",
      "18         0.000000    0.3130   0.2880  105.986               4   \n",
      "19         0.000000    0.2040   0.4030  168.218               4   \n",
      "\n",
      "                                               lyrics  \n",
      "0   [Intro: Samoria Green & Natalie Green]\\n(Yes, ...  \n",
      "1   [Intro: Pastor T.L. Barrett / Choir & Future]\\...  \n",
      "2   [Intro]\\nFaaaaaaaa—\\nPerfect\\nFaaaaaaaa—\\nFaaa...  \n",
      "3   [Intro: Rihanna & Kanye West]\\nMan, I can unde...  \n",
      "4   [Chorus]\\nAyy, ya heard about the good news?\\n...  \n",
      "5   [Spoken Word: Kelly Price]\\nYou want me to giv...  \n",
      "6   [Intro: Kanye West & Young Thug]\\nHigh lights\\...  \n",
      "7   [Intro: Kanye West]\\nThis that rap god shit ni...  \n",
      "8   [Verse]\\nI miss the old Kanye, straight from t...  \n",
      "9   [Intro]\\nTurn me up!\\n\\n[Verse 1: Kanye West]\\...  \n",
      "10  [Verse 1: Kanye West]\\nI been waiting for a mi...  \n",
      "11  [Verse 1: Kanye West]\\nReal friends, how many ...  \n",
      "12  [Produced by Cashmere Cat and Sinjin Hawke]\\n\\...  \n",
      "13  [Verse: Frank Ocean]\\nThe rings all ringed out...  \n",
      "14  [Spoken Word: Max B & French Montana]\\nYeezy, ...  \n",
      "15  [Intro: Arthur Russell]\\nBaby lion goes\\nWhere...  \n",
      "16  [Intro: Johnny \"Guitar\" Watson & Junie Morriso...  \n",
      "17  [Intro]\\nDirt and grime and filth inside\\nThe ...  \n",
      "18  [Intro: Rare Earth]\\nYour love is fadin'\\nYour...  \n",
      "19  [Intro: Kanye West]\\nYeah, 9:08 L.A. time\\nBac...  \n",
      "\n",
      "[20 rows x 23 columns]\n"
     ]
    }
   ],
   "source": [
    "print(tlop)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "metadata": {},
   "outputs": [],
   "source": [
    "#joinall dataframes for kendrick\n",
    "kanye = pd.concat([ksg, tcd, lr, yzs, mbdtf, tlop, grad])\n",
    "kanye=kanye.reset_index()\n",
    "#add region data\n",
    "region= []\n",
    "for row in kanye['name']:\n",
    "    region.append('midwest')\n",
    "\n",
    "kanye['region'] = region"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    index                                       name duration_ms popularity  \\\n",
      "0       0                              Feel The Love      165053         70   \n",
      "1       1                                       Fire      140526         64   \n",
      "2       2                              4th Dimension      153351         70   \n",
      "3       3                  Freeee (Ghost Town Pt. 2)      206605         64   \n",
      "4       4                                     Reborn      324674         75   \n",
      "5       5                            Kids See Ghosts      245098         65   \n",
      "6       6                               Cudi Montage      197000         67   \n",
      "7       0                                      Intro       19133          7   \n",
      "8       1                              We Don't Care      239880         58   \n",
      "9       2                             Graduation Day       81786         51   \n",
      "10      3                             All Falls Down      223506         71   \n",
      "11      4                              I'll Fly Away       69706         51   \n",
      "12      5                                  Spaceship      324226         58   \n",
      "13      6                                Jesus Walks      193733         66   \n",
      "14      7                          Never Let Me Down      324440         58   \n",
      "15      8                                Get Em High      289493         56   \n",
      "16      9                               Workout Plan       46173         48   \n",
      "17     10                       The New Workout Plan      322800         59   \n",
      "18     11                                  Slow Jamz      316053         61   \n",
      "19     12                     Breathe In Breathe Out      246933         52   \n",
      "20     16                                  Two Words      266213         53   \n",
      "21     17                           Through The Wire      221226         68   \n",
      "22     18                            Family Business      278893         58   \n",
      "23     19                                  Last Call      760973         53   \n",
      "24      0                           Wake Up Mr. West       41066         48   \n",
      "25      1                              Heard 'Em Say      203733         62   \n",
      "26      2                              Touch The Sky      235500         66   \n",
      "27      3                                Gold Digger      207626         77   \n",
      "28      5                                 Drive Slow      272226         57   \n",
      "29      6                                My Way Home      103373         50   \n",
      "..    ...                                        ...         ...        ...   \n",
      "66      3                                     Famous      196040         73   \n",
      "67      4                                   Feedback      147240         62   \n",
      "68      5                                 Low Lights      131773         58   \n",
      "69      6                                 Highlights      199866         61   \n",
      "70      7                                Freestyle 4      123386         59   \n",
      "71      8                               I Love Kanye       44826         59   \n",
      "72      9                                      Waves      181573         72   \n",
      "73     10                                        FML      236120         68   \n",
      "74     11                               Real Friends      251573         67   \n",
      "75     12                                     Wolves      301586         68   \n",
      "76     13                              Frank's Track       38333         60   \n",
      "77     14  Siiiiiiiiilver Surffffeeeeer Intermission       56560         55   \n",
      "78     15                                   30 Hours      323302         61   \n",
      "79     16                      No More Parties In LA      374413         65   \n",
      "80     17               Facts (Charlie Heat Version)      200733         60   \n",
      "81     18                                       Fade      193747         68   \n",
      "82     19                                Saint Pablo      372113         63   \n",
      "83      0                               Good Morning      195093         66   \n",
      "84      1                                   Champion      167600         63   \n",
      "85      2                                   Stronger      311866         79   \n",
      "86      3                                   I Wonder      243440         64   \n",
      "87      4                                  Good Life      207000         69   \n",
      "88      5                      Can't Tell Me Nothing      271600         70   \n",
      "89      6                                Barry Bonds      204306         55   \n",
      "90      7                        Drunk and Hot Girls      313226         54   \n",
      "91      8                            Flashing Lights      237506         69   \n",
      "92      9                            Everything I Am      227893         62   \n",
      "93     10                                  The Glory      212706         57   \n",
      "94     11                                 Homecoming      203493         69   \n",
      "95     12                                Big Brother      287573         55   \n",
      "\n",
      "   num_markets                album disc_number is_explicit track_number  \\\n",
      "0           79      KIDS SEE GHOSTS           1        True            1   \n",
      "1           79      KIDS SEE GHOSTS           1        True            2   \n",
      "2           79      KIDS SEE GHOSTS           1        True            3   \n",
      "3           79      KIDS SEE GHOSTS           1        True            4   \n",
      "4           79      KIDS SEE GHOSTS           1        True            5   \n",
      "5           79      KIDS SEE GHOSTS           1        True            6   \n",
      "6           79      KIDS SEE GHOSTS           1        True            7   \n",
      "7           79  The College Dropout           1        True            1   \n",
      "8           79  The College Dropout           1        True            2   \n",
      "9           79  The College Dropout           1        True            3   \n",
      "10          79  The College Dropout           1        True            4   \n",
      "11          79  The College Dropout           1        True            5   \n",
      "12          79  The College Dropout           1        True            6   \n",
      "13          79  The College Dropout           1        True            7   \n",
      "14          79  The College Dropout           1        True            8   \n",
      "15          79  The College Dropout           1        True            9   \n",
      "16          79  The College Dropout           1        True           10   \n",
      "17          79  The College Dropout           1        True           11   \n",
      "18          79  The College Dropout           1        True           12   \n",
      "19          79  The College Dropout           1        True           13   \n",
      "20          79  The College Dropout           1        True           18   \n",
      "21          79  The College Dropout           1        True           19   \n",
      "22          79  The College Dropout           1        True           20   \n",
      "23          79  The College Dropout           1        True           21   \n",
      "24          79    Late Registration           1        True            1   \n",
      "25          79    Late Registration           1        True            2   \n",
      "26          79    Late Registration           1        True            3   \n",
      "27          79    Late Registration           1        True            4   \n",
      "28          79    Late Registration           1        True            6   \n",
      "29          79    Late Registration           1        True            7   \n",
      "..         ...                  ...         ...         ...          ...   \n",
      "66          79    The Life Of Pablo           1        True            4   \n",
      "67          79    The Life Of Pablo           1        True            5   \n",
      "68          79    The Life Of Pablo           1        True            6   \n",
      "69          79    The Life Of Pablo           1        True            7   \n",
      "70          79    The Life Of Pablo           1        True            8   \n",
      "71          79    The Life Of Pablo           1        True            9   \n",
      "72          79    The Life Of Pablo           1        True           10   \n",
      "73          79    The Life Of Pablo           1        True           11   \n",
      "74          79    The Life Of Pablo           1        True           12   \n",
      "75          79    The Life Of Pablo           1        True           13   \n",
      "76          79    The Life Of Pablo           1        True           14   \n",
      "77          79    The Life Of Pablo           1        True           15   \n",
      "78          79    The Life Of Pablo           1        True           16   \n",
      "79          79    The Life Of Pablo           1        True           17   \n",
      "80          79    The Life Of Pablo           1        True           18   \n",
      "81          79    The Life Of Pablo           1        True           19   \n",
      "82          79    The Life Of Pablo           1        True           20   \n",
      "83          79           Graduation           1        True            1   \n",
      "84          79           Graduation           1        True            2   \n",
      "85          79           Graduation           1        True            3   \n",
      "86          79           Graduation           1        True            4   \n",
      "87          79           Graduation           1        True            5   \n",
      "88          79           Graduation           1        True            6   \n",
      "89          79           Graduation           1        True            7   \n",
      "90          79           Graduation           1        True            8   \n",
      "91          79           Graduation           1        True            9   \n",
      "92          79           Graduation           1        True           10   \n",
      "93          79           Graduation           1        True           11   \n",
      "94          79           Graduation           1        True           12   \n",
      "95          79           Graduation           1        True           13   \n",
      "\n",
      "   release_date  ... mode  speechiness  acousticness instrumentalness  \\\n",
      "0    2018-06-08  ...    0       0.1040       0.12600         0.000073   \n",
      "1    2018-06-08  ...    1       0.1600       0.47200         0.000005   \n",
      "2    2018-06-08  ...    1       0.3900       0.27800         0.000019   \n",
      "3    2018-06-08  ...    0       0.0632       0.00457         0.000000   \n",
      "4    2018-06-08  ...    1       0.0370       0.33900         0.040400   \n",
      "5    2018-06-08  ...    1       0.0458       0.11300         0.000097   \n",
      "6    2018-06-08  ...    0       0.0321       0.40100         0.000001   \n",
      "7    2004-02-10  ...    1       0.8770       0.23700         0.000000   \n",
      "8    2004-02-10  ...    0       0.1810       0.01420         0.000000   \n",
      "9    2004-02-10  ...    0       0.3380       0.68400         0.000002   \n",
      "10   2004-02-10  ...    0       0.4840       0.14900         0.000000   \n",
      "11   2004-02-10  ...    1       0.0289       0.76000         0.000000   \n",
      "12   2004-02-10  ...    0       0.1900       0.50300         0.000000   \n",
      "13   2004-02-10  ...    0       0.3230       0.61400         0.000000   \n",
      "14   2004-02-10  ...    0       0.4030       0.42300         0.000000   \n",
      "15   2004-02-10  ...    0       0.3730       0.18400         0.000000   \n",
      "16   2004-02-10  ...    1       0.9250       0.78500         0.000000   \n",
      "17   2004-02-10  ...    1       0.1980       0.00981         0.000000   \n",
      "18   2004-02-10  ...    0       0.1710       0.31400         0.000000   \n",
      "19   2004-02-10  ...    0       0.4210       0.34100         0.000000   \n",
      "20   2004-02-10  ...    1       0.2650       0.01580         0.000006   \n",
      "21   2004-02-10  ...    1       0.2470       0.00865         0.000005   \n",
      "22   2004-02-10  ...    1       0.2100       0.13900         0.000000   \n",
      "23   2004-02-10  ...    1       0.3560       0.57700         0.000000   \n",
      "24   2005-09-30  ...    1       0.9480       0.81100         0.000000   \n",
      "25   2005-09-30  ...    0       0.1810       0.05500         0.039400   \n",
      "26   2005-09-30  ...    1       0.3550       0.01580         0.000000   \n",
      "27   2005-09-30  ...    0       0.3840       0.02230         0.000000   \n",
      "28   2005-09-30  ...    1       0.2120       0.03200         0.000013   \n",
      "29   2005-09-30  ...    1       0.0388       0.34200         0.000001   \n",
      "..          ...  ...  ...          ...           ...              ...   \n",
      "66   2016-06-10  ...    1       0.1110       0.06020         0.000000   \n",
      "67   2016-06-10  ...    1       0.4920       0.59300         0.000000   \n",
      "68   2016-06-10  ...    1       0.1150       0.72600         0.000000   \n",
      "69   2016-06-10  ...    1       0.1620       0.00573         0.000000   \n",
      "70   2016-06-10  ...    0       0.0965       0.04760         0.000000   \n",
      "71   2016-06-10  ...    1       0.7640       0.58100         0.000000   \n",
      "72   2016-06-10  ...    1       0.0519       0.03630         0.000004   \n",
      "73   2016-06-10  ...    0       0.0822       0.31300         0.000000   \n",
      "74   2016-06-10  ...    0       0.4560       0.26800         0.000330   \n",
      "75   2016-06-10  ...    1       0.0450       0.18600         0.002550   \n",
      "76   2016-06-10  ...    1       0.0000       0.97400         0.000000   \n",
      "77   2016-06-10  ...    1       0.9250       0.98200         0.000078   \n",
      "78   2016-06-10  ...    1       0.2910       0.03200         0.000000   \n",
      "79   2016-06-10  ...    1       0.3000       0.23100         0.000000   \n",
      "80   2016-06-10  ...    0       0.1770       0.04650         0.000000   \n",
      "81   2016-06-10  ...    0       0.0880       0.10000         0.000000   \n",
      "82   2016-06-10  ...    0       0.3440       0.27300         0.000000   \n",
      "83   2007-09-11  ...    1       0.1160       0.07910         0.000105   \n",
      "84   2007-09-11  ...    1       0.2380       0.00299         0.000000   \n",
      "85   2007-09-11  ...    0       0.1530       0.00564         0.000000   \n",
      "86   2007-09-11  ...    1       0.0831       0.14100         0.000445   \n",
      "87   2007-09-11  ...    1       0.3460       0.00305         0.000000   \n",
      "88   2007-09-11  ...    0       0.0390       0.01220         0.000000   \n",
      "89   2007-09-11  ...    1       0.3820       0.04510         0.000000   \n",
      "90   2007-09-11  ...    0       0.0285       0.06970         0.000012   \n",
      "91   2007-09-11  ...    0       0.0399       0.03810         0.000000   \n",
      "92   2007-09-11  ...    1       0.2650       0.46300         0.000002   \n",
      "93   2007-09-11  ...    1       0.2870       0.04550         0.000000   \n",
      "94   2007-09-11  ...    1       0.1890       0.33700         0.000000   \n",
      "95   2007-09-11  ...    0       0.2590       0.21400         0.000000   \n",
      "\n",
      "    liveness valence    tempo  time_signature  \\\n",
      "0     0.0990  0.3690  110.573               4   \n",
      "1     0.1820  0.3700  104.999               4   \n",
      "2     0.6090  0.7340  171.945               4   \n",
      "3     0.1580  0.3060  151.643               4   \n",
      "4     0.1950  0.2270  100.051               4   \n",
      "5     0.1310  0.3380   94.985               4   \n",
      "6     0.1210  0.3050  110.011               4   \n",
      "7     0.5100  0.4630   87.491               3   \n",
      "8     0.2470  0.6470   83.155               4   \n",
      "9     0.4140  0.8690  169.336               4   \n",
      "10    0.1390  0.4340   91.030               4   \n",
      "11    0.1240  0.5640  172.338               4   \n",
      "12    0.5730  0.6570  178.068               3   \n",
      "13    0.3170  0.7150   87.312               4   \n",
      "14    0.1690  0.6430   80.293               4   \n",
      "15    0.4890  0.6490   84.788               4   \n",
      "16    0.6880  0.7720  115.114               4   \n",
      "17    0.3650  0.6460  118.022               4   \n",
      "18    0.2840  0.6110  145.115               4   \n",
      "19    0.1610  0.9240   88.817               4   \n",
      "20    0.2170  0.4460   84.649               4   \n",
      "21    0.1580  0.6600   83.089               4   \n",
      "22    0.3920  0.6060   93.691               4   \n",
      "23    0.3160  0.8540   83.212               4   \n",
      "24    0.0639  0.6340   82.598               5   \n",
      "25    0.1240  0.5690   94.857               4   \n",
      "26    0.3740  0.5450  106.302               4   \n",
      "27    0.0917  0.6600   92.939               4   \n",
      "28    0.3150  0.4760   87.992               4   \n",
      "29    0.0958  0.7580   86.813               4   \n",
      "..       ...     ...      ...             ...   \n",
      "66    0.1150  0.4020  174.100               4   \n",
      "67    0.1040  0.1490  100.170               4   \n",
      "68    0.1230  0.5680   96.606               4   \n",
      "69    0.3040  0.3770  101.963               4   \n",
      "70    0.0901  0.5080  125.524               4   \n",
      "71    0.2340  0.9630  159.613               4   \n",
      "72    0.3320  0.0565   96.072               4   \n",
      "73    0.1930  0.1560  125.116               4   \n",
      "74    0.1380  0.1210  170.612               4   \n",
      "75    0.1310  0.1180   78.248               4   \n",
      "76    0.1040  0.0000    0.000               0   \n",
      "77    0.1190  0.9140   72.019               4   \n",
      "78    0.1070  0.3570   95.122               4   \n",
      "79    0.2210  0.6970   93.798               4   \n",
      "80    0.2010  0.4010  142.074               4   \n",
      "81    0.3130  0.2880  105.986               4   \n",
      "82    0.2040  0.4030  168.218               4   \n",
      "83    0.1490  0.5150   84.164               4   \n",
      "84    0.6950  0.7230  102.139               4   \n",
      "85    0.4080  0.4900  103.992               4   \n",
      "86    0.1250  0.1240  191.385               4   \n",
      "87    0.4390  0.4870   82.962               4   \n",
      "88    0.8200  0.1020   80.029               4   \n",
      "89    0.3370  0.7040  165.057               4   \n",
      "90    0.1360  0.2990   82.758               3   \n",
      "91    0.3860  0.4300   90.482               4   \n",
      "92    0.1510  0.7650   80.230               4   \n",
      "93    0.1720  0.7080   84.336               4   \n",
      "94    0.1150  0.9180   86.917               4   \n",
      "95    0.0641  0.3020   78.428               4   \n",
      "\n",
      "                                               lyrics   region  \n",
      "0   [Chorus: Kid Cudi]\\nI can still feel the love\\...  midwest  \n",
      "1   [Intro: Kanye West]\\nI love all your shit talk...  midwest  \n",
      "2   [Intro: Louis Prima]\\nDown the chimney, he wil...  midwest  \n",
      "3   [Intro: Marcus Garvey]\\nMay I say something to...  midwest  \n",
      "4   [Chorus: Kid Cudi]\\nI'm so—I’m so reborn, I'm ...  midwest  \n",
      "5   [Chorus: Yasiin Bey]\\nKids see ghosts sometime...  midwest  \n",
      "6   [Verse 1: Kid Cudi]\\nFind my back in the cold,...  midwest  \n",
      "7   [Intro: DeRay Davis]\\nKanye, can I talk to you...  midwest  \n",
      "8   [Produced by Kanye West]\\n\\n[Intro]\\nOh yeah.....  midwest  \n",
      "9   [Spoken: DeRay]\\nWhat in the fuck was that, Ka...  midwest  \n",
      "10  [Chorus: Syleena Johnson + Kanye West]\\nOh, wh...  midwest  \n",
      "11  One glad morning\\nWhen this life is over\\nI'll...  midwest  \n",
      "12  [Produced by Kanye West]\\n\\n[Chorus]\\nI've bee...  midwest  \n",
      "13  [Intro]\\nWe at war\\nWe at war with terrorism, ...  midwest  \n",
      "14  [Chorus]\\nWhen it comes to being true, at leas...  midwest  \n",
      "15  [Intro: Kanye West]\\nI'm trying to catch the b...  midwest  \n",
      "16  [Intro]\\nYou just popped in the Kanye West\\nGe...  midwest  \n",
      "17  [Intro]\\nYou just popped in the Kanye West\\nGe...  midwest  \n",
      "18  [Produced by Kanye West]\\n\\n[Intro]\\nAre you g...  midwest  \n",
      "19  [Chorus: Ludacris]\\nYeah, breathe in, breathe ...  midwest  \n",
      "20  [Intro: Kanye West]\\nWe in the streets, playa,...  midwest  \n",
      "21  [Music Video]\\n[Produced by Kanye West]\\n\\n[In...  midwest  \n",
      "22  [Intro]\\nHow's your son? (all the things)\\nHe ...  midwest  \n",
      "23  [Produced by Evidence & Kanye West]\\n\\n[Intro:...  midwest  \n",
      "24  [Produced by Kanye West]\\n\\n[Skit]\\nOh, ho-ho-...  midwest  \n",
      "25  [Produced by Kanye West and Jon Brion]\\n\\n[Int...  midwest  \n",
      "26  [Produced by Just Blaze]\\n\\n[Hook: Kanye West]...  midwest  \n",
      "27  [Produced by Kanye West and Jon Brion]\\n\\n[Int...  midwest  \n",
      "28  [Produced by Kanye West]\\n\\n[Chorus: Kanye Wes...  midwest  \n",
      "29  [Produced by Kanye West]\\n\\n[Verse: Common]\\nY...  midwest  \n",
      "..                                                ...      ...  \n",
      "66  [Intro: Rihanna & Kanye West]\\nMan, I can unde...  midwest  \n",
      "67  [Chorus]\\nAyy, ya heard about the good news?\\n...  midwest  \n",
      "68  [Spoken Word: Kelly Price]\\nYou want me to giv...  midwest  \n",
      "69  [Intro: Kanye West & Young Thug]\\nHigh lights\\...  midwest  \n",
      "70  [Intro: Kanye West]\\nThis that rap god shit ni...  midwest  \n",
      "71  [Verse]\\nI miss the old Kanye, straight from t...  midwest  \n",
      "72  [Intro]\\nTurn me up!\\n\\n[Verse 1: Kanye West]\\...  midwest  \n",
      "73  [Verse 1: Kanye West]\\nI been waiting for a mi...  midwest  \n",
      "74  [Verse 1: Kanye West]\\nReal friends, how many ...  midwest  \n",
      "75  [Produced by Cashmere Cat and Sinjin Hawke]\\n\\...  midwest  \n",
      "76  [Verse: Frank Ocean]\\nThe rings all ringed out...  midwest  \n",
      "77  [Spoken Word: Max B & French Montana]\\nYeezy, ...  midwest  \n",
      "78  [Intro: Arthur Russell]\\nBaby lion goes\\nWhere...  midwest  \n",
      "79  [Intro: Johnny \"Guitar\" Watson & Junie Morriso...  midwest  \n",
      "80  [Intro]\\nDirt and grime and filth inside\\nThe ...  midwest  \n",
      "81  [Intro: Rare Earth]\\nYour love is fadin'\\nYour...  midwest  \n",
      "82  [Intro: Kanye West]\\nYeah, 9:08 L.A. time\\nBac...  midwest  \n",
      "83  [Produced by Kanye West]\\n\\n[Intro]\\nUhh.. uhh...  midwest  \n",
      "84  [Refrain]\\nDid you realize\\nThat you were a ch...  midwest  \n",
      "85  [Produced by Kanye West, Mike Dean, and Timbal...  midwest  \n",
      "86  [Produced by Kanye West]\\n\\n[Intro]\\n-Find you...  midwest  \n",
      "87  [Produced by DJ Toomp, Kanye West, and Mike De...  midwest  \n",
      "88  [Produced by DJ Toomp and Kanye West]\\n\\n[Intr...  midwest  \n",
      "89  [Verse 1: Kanye West]\\nIt's what ya all been w...  midwest  \n",
      "90  [Intro: Mos Def]\\nLa-da-da da-da da-da da-da d...  midwest  \n",
      "91  [Intro]\\nFlashing lights (lights, lights)\\nFla...  midwest  \n",
      "92  [Produced by Kanye West]\\n\\n[Chorus]\\nDamn, he...  midwest  \n",
      "93  [Produced by Gee Roberson, Kanye West & Plain ...  midwest  \n",
      "94  [Intro: Kanye West]\\nAnd you say Chi city!\\nCh...  midwest  \n",
      "95  [Produced by DJ Toomp]\\n\\n[Intro]\\nStadium sta...  midwest  \n",
      "\n",
      "[96 rows x 25 columns]\n"
     ]
    }
   ],
   "source": [
    "print(kanye)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "metadata": {},
   "outputs": [],
   "source": [
    "kanye.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\kanyefinal.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---------------------------------------------------------------------------------------------------------------------------------------"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# J. Cole"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotify:artist:6l3HvQ5sa6mXTsMTB19rO5\n"
     ]
    }
   ],
   "source": [
    "#get next artist data\n",
    "\n",
    "results = sp.search(\"artist:J. Cole\")\n",
    "artist_id = results['tracks']['items'][0]['artists'][0]['uri']\n",
    "print(artist_id)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://api.spotify.com/v1/artists/6l3HvQ5sa6mXTsMTB19rO5/albums?offset=50&limit=50&include_groups=album,single,compilation,appears_on&market=US\n"
     ]
    }
   ],
   "source": [
    "#get album details\n",
    "albums = sp.artist_albums('6l3HvQ5sa6mXTsMTB19rO5', country=\"US\", limit=50)\n",
    "print(albums['next'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50\n",
      "spotify:album:4Wv5UAieM1LDEYVq5WmqDd\n",
      "12 \t KOD\n",
      "12 \t KOD\n",
      "10 \t 4 Your Eyez Only\n",
      "10 \t 4 Your Eyez Only\n",
      "13 \t Forest Hills Drive: Live from Fayetteville, NC\n",
      "13 \t 2014 Forest Hills Drive\n",
      "13 \t 2014 Forest Hills Drive\n",
      "21 \t Born Sinner\n",
      "16 \t Born Sinner\n",
      "16 \t Cole World: The Sideline Story\n",
      "16 \t Cole World: The Sideline Story\n",
      "1 \t The London (feat. J. Cole & Travis Scott)\n",
      "1 \t MIDDLE CHILD\n",
      "1 \t MIDDLE CHILD\n",
      "1 \t Album of the Year (Freestyle)\n",
      "1 \t High For Hours\n",
      "1 \t False Prophets\n",
      "1 \t everybody dies\n",
      "1 \t False Prophets\n",
      "1 \t everybody dies\n",
      "1 \t Power Trip\n",
      "1 \t Power Trip\n",
      "1 \t Miss America\n",
      "1 \t Miss America\n",
      "9 \t Revenge Of The Dreamers II\n",
      "1 \t Purple Emoji (feat. J. Cole)\n",
      "12 \t Shea Butter Baby\n",
      "12 \t Shea Butter Baby\n",
      "21 \t NOW That's What I Call Music!, Vol. 70\n",
      "16 \t FATHER OF 4\n",
      "30 \t New Year's Eve - NYE 2018/2019\n",
      "14 \t DiCaprio 2\n",
      "14 \t DiCaprio 2\n",
      "15 \t Creed II: The Album\n",
      "15 \t Creed II: The Album\n",
      "14 \t Oxnard\n",
      "14 \t Oxnard\n",
      "22 \t 9th Wonder Presents: Jamla Is The Squad II\n",
      "15 \t RESET\n",
      "15 \t RESET\n",
      "1 \t Sojourner (feat. J. Cole)\n",
      "14 \t East Atlanta Love Letter\n",
      "14 \t East Atlanta Love Letter\n",
      "5 \t Free Lunch\n",
      "28 \t Hottest Hip Hop 2018\n",
      "14 \t Milky Way\n",
      "14 \t Milky Way\n",
      "15 \t Redemption\n",
      "15 \t Redemption\n",
      "21 \t Book of Ryan (Bonus Track Edition)\n"
     ]
    }
   ],
   "source": [
    "#collect album details and print\n",
    "album_ids = [album['uri'] for album in albums['items']]\n",
    "print(len(album_ids))\n",
    "print(album_ids[0])\n",
    "\n",
    "all_tracks = []\n",
    "for album_id in album_ids:\n",
    "    tracks = sp.album_tracks(album_id, limit=50)\n",
    "    all_tracks.append(tracks)\n",
    "    \n",
    "for tracks, album in zip(all_tracks, albums.get('items')):\n",
    "    print(\n",
    "        len(tracks.get('items')),\n",
    "        \"\\t\",\n",
    "        album.get('name')\n",
    "    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "metadata": {},
   "outputs": [],
   "source": [
    "jcole_album_list = ['Born Sinner', '2014 Forest Hills Drive', 'KOD', '4 Your Eyez Only', 'Cole World: The Sideline Story']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "name                     Intro\n",
      "duration_ms             107160\n",
      "popularity                  59\n",
      "num_markets                 79\n",
      "album                      KOD\n",
      "disc_number                  1\n",
      "is_explicit              False\n",
      "track_number                 1\n",
      "release_date        2018-04-20\n",
      "artist                 J. Cole\n",
      "danceability             0.512\n",
      "energy                    0.28\n",
      "key                          8\n",
      "loudness               -16.708\n",
      "mode                         0\n",
      "speechiness             0.0441\n",
      "acousticness             0.811\n",
      "instrumentalness      7.48e-05\n",
      "liveness                 0.087\n",
      "valence                  0.545\n",
      "tempo                  111.446\n",
      "time_signature               3\n",
      "Name: 0, dtype: object\n"
     ]
    }
   ],
   "source": [
    "#create df\n",
    "track_ids = []\n",
    "for tracks in all_tracks:\n",
    "    album_tracks = []\n",
    "    for track in tracks.get('items'):\n",
    "        album_tracks.append(track.get('uri'))\n",
    "    track_ids.append(album_tracks)\n",
    "\n",
    "\n",
    "track_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    tracks = sp.tracks(track_id_list)\n",
    "    track_objects.append(tracks)\n",
    "\n",
    "#collecting other features\n",
    "\n",
    "audio_feature_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    features = sp.audio_features(track_id_list)\n",
    "    audio_feature_objects.append(features)\n",
    "\n",
    "spotify_data = {\n",
    "    \"audio_features\": audio_feature_objects,\n",
    "    \"tracks\": track_objects\n",
    "}\n",
    "\n",
    "df = pd.DataFrame(columns=[\n",
    "    'name',\n",
    "    'duration_ms',\n",
    "    'popularity',\n",
    "    'num_markets',\n",
    "    'album',\n",
    "    'disc_number',\n",
    "    'is_explicit',\n",
    "    'track_number',\n",
    "    'release_date',\n",
    "    'artist',\n",
    "    'danceability',\n",
    "    'energy',\n",
    "    'key',\n",
    "    'loudness',\n",
    "    'mode',\n",
    "    'speechiness',\n",
    "    'acousticness',\n",
    "    'instrumentalness',\n",
    "    'liveness',\n",
    "    'valence',\n",
    "    'tempo',\n",
    "    'time_signature',\n",
    "])\n",
    "for album_info, album_features in zip(\n",
    "        spotify_data.get('tracks'), \n",
    "        spotify_data.get('audio_features')\n",
    "        ):\n",
    "    for track_info, track_features in zip(\n",
    "        album_info.get('tracks'),\n",
    "        album_features\n",
    "        ):\n",
    "        y = {\n",
    "            'name': track_info['name'],\n",
    "            'duration_ms': track_info['duration_ms'],\n",
    "            'popularity': track_info['popularity'],\n",
    "            'num_markets': len(track_info['available_markets']),\n",
    "            'album': track_info['album']['name'],\n",
    "            'disc_number': track_info['disc_number'],\n",
    "            'is_explicit': track_info['explicit'],\n",
    "            'track_number': track_info['track_number'],\n",
    "            'release_date': track_info['album']['release_date'],\n",
    "            'artist': track_info['artists'][0]['name'],\n",
    "            'danceability': track_features['danceability'],\n",
    "            'energy': track_features['energy'],\n",
    "            'key': track_features['key'],\n",
    "            'loudness': track_features['loudness'],\n",
    "            'mode': track_features['mode'],\n",
    "            'speechiness': track_features['speechiness'],\n",
    "            'acousticness': track_features['acousticness'],\n",
    "            'instrumentalness': track_features['instrumentalness'],\n",
    "            'liveness': track_features['liveness'],\n",
    "            'valence': track_features['valence'],\n",
    "            'tempo': track_features['tempo'],\n",
    "            'time_signature': track_features['time_signature'],\n",
    "        }\n",
    "        df = df.append(y, ignore_index=True)\n",
    "print(df.iloc[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "jcole_album_list = ['Born Sinner', '2014 Forest Hills Drive', 'KOD', '4 Your Eyez Only', 'Cole World: The Sideline Story']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Villuminati\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Kerney Sermon (Skit)\" by J. Cole...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Land of the Snakes\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Power Trip\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Mo Money (Interlude)\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Trouble\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Runaway\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"She Knows\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Rich Niggaz\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Where's Jermaine? (Skit)\" by J. Cole...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Forbidden Fruit\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Chaining Day\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Ain't That Some Shit (Interlude)\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Crooked Smile\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Let Nas Down\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Born Sinner\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Miss America\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"New York Times\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Is She Gon Pop\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Niggaz Know\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Sparks Will Fly\" by J. Cole...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album Yeezus\n",
    "#clean to album level\n",
    "bs = df[df['album'] == 'Born Sinner']\n",
    "bs = bs[bs['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "bs_list=[]\n",
    "for row in bs['name']:\n",
    "\n",
    "    bs_list.append(getLyric(row, 'J. Cole')),\n",
    "\n",
    "bslyrics = pd.DataFrame(bs_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "bs = bs.reset_index()\n",
    "#add lyrics\n",
    "bs['lyrics'] = bslyrics['string_values']\n",
    "#clean\n",
    "bs =bs.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Intro\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Dollar And A Dream III\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Lights Please\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Interlude\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Sideline Story\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Mr. Nice Watch\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Cole World\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Lost Ones\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Nobody's Perfect\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Never Told\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Rise and Shine\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"God's Gift\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Breakdown\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Work Out\" by J. Cole...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album cole world\n",
    "#clean to album level\n",
    "cw = df[df['album'] == 'Cole World: The Sideline Story']\n",
    "cw = cw[cw['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "cw_list=[]\n",
    "for row in cw['name']:\n",
    "\n",
    "    cw_list.append(getLyric(row, 'J. Cole')),\n",
    "\n",
    "cwlyrics = pd.DataFrame(cw_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "cw = cw.reset_index()\n",
    "#add lyrics\n",
    "cw['lyrics'] = cwlyrics['string_values']\n",
    "#clean\n",
    "cw =cw.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"KOD\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Photograph\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"The Cut Off (feat. kiLL edward)\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"ATM\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Motiv8\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Kevin’s Heart\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"BRACKETS\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Once an Addict - Interlude\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"FRIENDS (feat. kiLL edward)\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Window Pain - Outro\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"1985 - Intro to “The Fall Off”\" by J. Cole...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album kod\n",
    "#clean to album level\n",
    "kod = df[df['album'] == 'KOD']\n",
    "kod = kod[kod['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "kod_list=[]\n",
    "for row in kod['name']:\n",
    "\n",
    "    kod_list.append(getLyric(row, 'J. Cole')),\n",
    "\n",
    "kodlyrics = pd.DataFrame(kod_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "kod = kod.reset_index()\n",
    "#add lyrics\n",
    "kod['lyrics'] = kodlyrics['string_values']\n",
    "#clean\n",
    "kod =kod.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Intro\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"January 28th\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Wet Dreamz\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"03' Adolescence\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"A Tale of 2 Citiez\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Fire Squad\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"St. Tropez\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"G.O.M.D.\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"No Role Modelz\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Hello\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Apparently\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Love Yourz\" by J. Cole...\n",
      "Done.\n",
      "Searching for \"Note to Self\" by J. Cole...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album 2014fhdrive\n",
    "#clean to album level\n",
    "fh = df[df['album'] == '2014 Forest Hills Drive']\n",
    "fh = fh[fh['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "fh_list=[]\n",
    "for row in fh['name']:\n",
    "\n",
    "    fh_list.append(getLyric(row, 'J. Cole')),\n",
    "\n",
    "fhlyrics = pd.DataFrame(fh_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "fh = fh.reset_index()\n",
    "#add lyrics\n",
    "fh['lyrics'] = fhlyrics['string_values']\n",
    "#clean\n",
    "fh =fh.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "#joinall dataframes for kendrick\n",
    "jcole = pd.concat([fh, bs, kod, cw])\n",
    "jcole=jcole.reset_index()\n",
    "#add region data\n",
    "region= []\n",
    "for row in jcole['name']:\n",
    "    region.append('south')\n",
    "\n",
    "jcole['region'] = region\n",
    "\n",
    "jcole.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\jcolefinal.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    index                              name duration_ms popularity  \\\n",
      "0       0                             Intro      129266         58   \n",
      "1       1                      January 28th      242813         63   \n",
      "2       2                        Wet Dreamz      239320         78   \n",
      "3       3                   03' Adolescence      264213         63   \n",
      "4       4                A Tale of 2 Citiez      269786         69   \n",
      "5       5                        Fire Squad      288200         66   \n",
      "6       6                        St. Tropez      257920         60   \n",
      "7       7                          G.O.M.D.      301133         75   \n",
      "8       8                    No Role Modelz      292986         81   \n",
      "9       9                             Hello      219173         60   \n",
      "10     10                        Apparently      293040         69   \n",
      "11     11                        Love Yourz      211680         69   \n",
      "12     12                      Note to Self      875306         57   \n",
      "13      0                       Villuminati      307866         55   \n",
      "14      2                Land of the Snakes      254453         61   \n",
      "15      3                        Power Trip      241160         71   \n",
      "16      4              Mo Money (Interlude)       77640         53   \n",
      "17      5                           Trouble      258399         57   \n",
      "18      6                           Runaway      314493         55   \n",
      "19      7                         She Knows      296520         67   \n",
      "20      8                       Rich Niggaz      276093         63   \n",
      "21     10                   Forbidden Fruit      268666         65   \n",
      "22     11                      Chaining Day      284506         55   \n",
      "23     12  Ain't That Some Shit (Interlude)      147413         53   \n",
      "24     13                     Crooked Smile      278573         69   \n",
      "25     14                      Let Nas Down      277200         57   \n",
      "26     15                       Born Sinner      209360         60   \n",
      "27     16                      Miss America      225866         53   \n",
      "28     17                    New York Times      271813         56   \n",
      "29     18                    Is She Gon Pop      165400         56   \n",
      "30     19                       Niggaz Know      217240         54   \n",
      "31     20                   Sparks Will Fly      252053         57   \n",
      "32      0                               KOD      191436         76   \n",
      "33      1                        Photograph      218953         68   \n",
      "34      2   The Cut Off (feat. kiLL edward)      237295         65   \n",
      "35      3                               ATM      216726         72   \n",
      "36      4                            Motiv8      133921         70   \n",
      "37      5                     Kevin’s Heart      200309         75   \n",
      "38      6                          BRACKETS      315771         65   \n",
      "39      7        Once an Addict - Interlude      197821         62   \n",
      "40      8       FRIENDS (feat. kiLL edward)      257646         64   \n",
      "41      9               Window Pain - Outro      286729         65   \n",
      "42     10    1985 - Intro to “The Fall Off”      190176         70   \n",
      "43      0                             Intro       82613         47   \n",
      "44      1            Dollar And A Dream III      283066         53   \n",
      "45      2                     Lights Please      208160         62   \n",
      "46      3                         Interlude       99680         48   \n",
      "47      4                    Sideline Story      237853         55   \n",
      "48      5                    Mr. Nice Watch      237946         53   \n",
      "49      6                        Cole World      184586         57   \n",
      "50      7                         Lost Ones      263720         61   \n",
      "51      8                  Nobody's Perfect      190653         63   \n",
      "52      9                        Never Told      211520         51   \n",
      "53     10                    Rise and Shine      274960         54   \n",
      "54     11                        God's Gift      212800         52   \n",
      "55     12                         Breakdown      285306         51   \n",
      "56     13                          Work Out      235320         73   \n",
      "\n",
      "   num_markets                           album disc_number is_explicit  \\\n",
      "0           79         2014 Forest Hills Drive           1        True   \n",
      "1           79         2014 Forest Hills Drive           1        True   \n",
      "2           79         2014 Forest Hills Drive           1        True   \n",
      "3           79         2014 Forest Hills Drive           1        True   \n",
      "4           79         2014 Forest Hills Drive           1        True   \n",
      "5           79         2014 Forest Hills Drive           1        True   \n",
      "6           79         2014 Forest Hills Drive           1        True   \n",
      "7           79         2014 Forest Hills Drive           1        True   \n",
      "8           79         2014 Forest Hills Drive           1        True   \n",
      "9           79         2014 Forest Hills Drive           1        True   \n",
      "10          79         2014 Forest Hills Drive           1        True   \n",
      "11          79         2014 Forest Hills Drive           1        True   \n",
      "12          79         2014 Forest Hills Drive           1        True   \n",
      "13          79                     Born Sinner           1        True   \n",
      "14          79                     Born Sinner           1        True   \n",
      "15          79                     Born Sinner           1        True   \n",
      "16          79                     Born Sinner           1        True   \n",
      "17          79                     Born Sinner           1        True   \n",
      "18          79                     Born Sinner           1        True   \n",
      "19          79                     Born Sinner           1        True   \n",
      "20          79                     Born Sinner           1        True   \n",
      "21          79                     Born Sinner           1        True   \n",
      "22          79                     Born Sinner           1        True   \n",
      "23          79                     Born Sinner           1        True   \n",
      "24          79                     Born Sinner           1        True   \n",
      "25          79                     Born Sinner           1        True   \n",
      "26          79                     Born Sinner           1        True   \n",
      "27          79                     Born Sinner           1        True   \n",
      "28          79                     Born Sinner           1        True   \n",
      "29          79                     Born Sinner           1        True   \n",
      "30          79                     Born Sinner           1        True   \n",
      "31          79                     Born Sinner           1        True   \n",
      "32          79                             KOD           1        True   \n",
      "33          79                             KOD           1        True   \n",
      "34          79                             KOD           1        True   \n",
      "35          79                             KOD           1        True   \n",
      "36          79                             KOD           1        True   \n",
      "37          79                             KOD           1        True   \n",
      "38          79                             KOD           1        True   \n",
      "39          79                             KOD           1        True   \n",
      "40          79                             KOD           1        True   \n",
      "41          79                             KOD           1        True   \n",
      "42          79                             KOD           1        True   \n",
      "43          79  Cole World: The Sideline Story           1        True   \n",
      "44          79  Cole World: The Sideline Story           1        True   \n",
      "45          79  Cole World: The Sideline Story           1        True   \n",
      "46          79  Cole World: The Sideline Story           1        True   \n",
      "47          79  Cole World: The Sideline Story           1        True   \n",
      "48          79  Cole World: The Sideline Story           1        True   \n",
      "49          79  Cole World: The Sideline Story           1        True   \n",
      "50          79  Cole World: The Sideline Story           1        True   \n",
      "51          79  Cole World: The Sideline Story           1        True   \n",
      "52          79  Cole World: The Sideline Story           1        True   \n",
      "53          79  Cole World: The Sideline Story           1        True   \n",
      "54          79  Cole World: The Sideline Story           1        True   \n",
      "55          79  Cole World: The Sideline Story           1        True   \n",
      "56          79  Cole World: The Sideline Story           1        True   \n",
      "\n",
      "   track_number release_date  ... mode  speechiness  acousticness  \\\n",
      "0             1   2014-12-09  ...    0       0.0417       0.84400   \n",
      "1             2   2014-12-09  ...    1       0.3490       0.25900   \n",
      "2             3   2014-12-09  ...    0       0.3640       0.07520   \n",
      "3             4   2014-12-09  ...    1       0.5660       0.38900   \n",
      "4             5   2014-12-09  ...    1       0.5310       0.55300   \n",
      "5             6   2014-12-09  ...    1       0.4150       0.27900   \n",
      "6             7   2014-12-09  ...    0       0.0711       0.05400   \n",
      "7             8   2014-12-09  ...    0       0.2670       0.33100   \n",
      "8             9   2014-12-09  ...    0       0.3320       0.30200   \n",
      "9            10   2014-12-09  ...    0       0.2120       0.07740   \n",
      "10           11   2014-12-09  ...    1       0.0910       0.56400   \n",
      "11           12   2014-12-09  ...    1       0.4410       0.60900   \n",
      "12           13   2014-12-09  ...    1       0.1150       0.85500   \n",
      "13            1   2013-06-14  ...    0       0.1960       0.04930   \n",
      "14            3   2013-06-14  ...    1       0.2920       0.23000   \n",
      "15            4   2013-06-14  ...    1       0.2170       0.32200   \n",
      "16            5   2013-06-14  ...    0       0.3870       0.75600   \n",
      "17            6   2013-06-14  ...    0       0.0622       0.17400   \n",
      "18            7   2013-06-14  ...    1       0.3570       0.19500   \n",
      "19            8   2013-06-14  ...    1       0.0805       0.01920   \n",
      "20            9   2013-06-14  ...    0       0.1970       0.47200   \n",
      "21           11   2013-06-14  ...    1       0.3830       0.54800   \n",
      "22           12   2013-06-14  ...    1       0.1680       0.27900   \n",
      "23           13   2013-06-14  ...    1       0.1960       0.08140   \n",
      "24           14   2013-06-14  ...    1       0.2680       0.43300   \n",
      "25           15   2013-06-14  ...    0       0.2450       0.02560   \n",
      "26           16   2013-06-14  ...    0       0.2450       0.30100   \n",
      "27           17   2013-06-14  ...    0       0.1410       0.00431   \n",
      "28           18   2013-06-14  ...    1       0.3110       0.29100   \n",
      "29           19   2013-06-14  ...    0       0.3510       0.08260   \n",
      "30           20   2013-06-14  ...    0       0.1740       0.03340   \n",
      "31           21   2013-06-14  ...    0       0.2290       0.06690   \n",
      "32            2   2018-04-20  ...    1       0.1500       0.21000   \n",
      "33            3   2018-04-20  ...    1       0.2330       0.02990   \n",
      "34            4   2018-04-20  ...    1       0.3990       0.18500   \n",
      "35            5   2018-04-20  ...    1       0.6810       0.11500   \n",
      "36            6   2018-04-20  ...    1       0.2970       0.13500   \n",
      "37            7   2018-04-20  ...    0       0.3670       0.48200   \n",
      "38            8   2018-04-20  ...    0       0.2630       0.19000   \n",
      "39            9   2018-04-20  ...    1       0.4770       0.62600   \n",
      "40           10   2018-04-20  ...    0       0.3980       0.10200   \n",
      "41           11   2018-04-20  ...    1       0.3970       0.06070   \n",
      "42           12   2018-04-20  ...    1       0.4450       0.14700   \n",
      "43            1   2011-09-27  ...    0       0.4220       0.86400   \n",
      "44            2   2011-09-27  ...    0       0.4150       0.51600   \n",
      "45            4   2011-09-27  ...    1       0.2690       0.02930   \n",
      "46            5   2011-09-27  ...    0       0.1050       0.93600   \n",
      "47            6   2011-09-27  ...    0       0.1740       0.70500   \n",
      "48            7   2011-09-27  ...    0       0.0951       0.09290   \n",
      "49            8   2011-09-27  ...    0       0.1360       0.00137   \n",
      "50           10   2011-09-27  ...    1       0.2900       0.10300   \n",
      "51           11   2011-09-27  ...    0       0.1700       0.09740   \n",
      "52           12   2011-09-27  ...    0       0.1990       0.39600   \n",
      "53           13   2011-09-27  ...    1       0.2720       0.05510   \n",
      "54           14   2011-09-27  ...    0       0.2200       0.03110   \n",
      "55           15   2011-09-27  ...    1       0.2030       0.02070   \n",
      "56           16   2011-09-27  ...    1       0.1060       0.05310   \n",
      "\n",
      "   instrumentalness  liveness valence    tempo  time_signature  \\\n",
      "0          0.069300    0.1070  0.1200   78.531               4   \n",
      "1          0.000000    0.0951  0.3720   81.967               4   \n",
      "2          0.000000    0.1280  0.5840  175.483               4   \n",
      "3          0.000000    0.2750  0.2610  146.216               4   \n",
      "4          0.000000    0.2510  0.3620  189.861               4   \n",
      "5          0.000000    0.6210  0.5950  175.432               4   \n",
      "6          0.037100    0.0627  0.3240   84.241               4   \n",
      "7          0.000009    0.2830  0.3040  128.065               4   \n",
      "8          0.000000    0.0565  0.4580  100.000               4   \n",
      "9          0.000012    0.1060  0.3290  159.973               4   \n",
      "10         0.000000    0.1160  0.5340  133.982               4   \n",
      "11         0.000000    0.1190  0.3990   75.555               1   \n",
      "12         0.000000    0.1710  0.3250   83.151               4   \n",
      "13         0.003660    0.3670  0.0490  107.352               4   \n",
      "14         0.000000    0.2570  0.4750  104.031               4   \n",
      "15         0.000203    0.4260  0.4650   99.991               4   \n",
      "16         0.000000    0.1490  0.4770   84.831               4   \n",
      "17         0.000008    0.1530  0.0818  107.454               4   \n",
      "18         0.000000    0.3700  0.0707  187.929               4   \n",
      "19         0.079400    0.2290  0.1850  118.005               4   \n",
      "20         0.002360    0.1040  0.3060  125.007               4   \n",
      "21         0.001270    0.2110  0.4070  110.029               4   \n",
      "22         0.000001    0.1030  0.3330   84.544               4   \n",
      "23         0.001400    0.3140  0.9610   76.471               4   \n",
      "24         0.000000    0.6890  0.4820   81.004               4   \n",
      "25         0.000000    0.2960  0.3700   79.255               4   \n",
      "26         0.000000    0.1290  0.7150  158.151               4   \n",
      "27         0.000951    0.1420  0.2050  172.191               4   \n",
      "28         0.000370    0.1640  0.3100  171.333               4   \n",
      "29         0.000015    0.2310  0.2160   83.295               4   \n",
      "30         0.000002    0.1030  0.3270  138.046               4   \n",
      "31         0.000000    0.1500  0.6840  122.663               5   \n",
      "32         0.000000    0.1130  0.1990  141.869               4   \n",
      "33         0.000000    0.0868  0.3720  105.050               3   \n",
      "34         0.000000    0.3720  0.3370   78.198               4   \n",
      "35         0.000000    0.0898  0.3450   81.651               4   \n",
      "36         0.000000    0.0931  0.5960  149.897               4   \n",
      "37         0.000000    0.6310  0.4730  116.078               4   \n",
      "38         0.000002    0.1750  0.6580   84.039               4   \n",
      "39         0.000000    0.1190  0.1380   82.360               4   \n",
      "40         0.000000    0.1100  0.4940  109.295               5   \n",
      "41         0.000000    0.0728  0.1820   75.032               4   \n",
      "42         0.000000    0.1820  0.6350   94.336               4   \n",
      "43         0.000383    0.1050  0.0569   62.818               4   \n",
      "44         0.000000    0.0907  0.3160   76.585               4   \n",
      "45         0.000000    0.1250  0.7610   83.009               4   \n",
      "46         0.000168    0.1150  0.1570   64.825               3   \n",
      "47         0.000000    0.1460  0.6630   89.051               4   \n",
      "48         0.000219    0.1130  0.2900  138.954               4   \n",
      "49         0.000000    0.0964  0.4990  156.974               4   \n",
      "50         0.000000    0.0537  0.6820   81.076               4   \n",
      "51         0.000013    0.1300  0.4270  119.988               4   \n",
      "52         0.000000    0.1190  0.4380   84.461               3   \n",
      "53         0.000000    0.1900  0.2740   81.337               4   \n",
      "54         0.000264    0.1040  0.4390   79.650               4   \n",
      "55         0.055600    0.0980  0.4890   99.505               3   \n",
      "56         0.000000    0.3070  0.2160   93.004               4   \n",
      "\n",
      "                                               lyrics  region  \n",
      "0   [Produced by J. Cole]\\n\\n[Verse 1]\\nPartially ...   south  \n",
      "1   [Produced by J. Cole & Team Titans]\\n\\n[Intro]...   south  \n",
      "2   [Produced by J. Cole]\\n\\n[Intro]\\nCole, Cole w...   south  \n",
      "3   [Produced by Willie B]\\n\\n[Verse 1]\\nI grew up...   south  \n",
      "4   [Produced by Vinylz]\\n\\n[Verse 1]\\nSince a you...   south  \n",
      "5   [Produced by J. Cole & Vinylz]\\n\\n[Hook]\\nNigg...   south  \n",
      "6   [Produced by J. Cole]\\n\\n[Verse 1]\\nRoll up an...   south  \n",
      "7   [Produced by J.Cole]\\n[Directed by Lawrence La...   south  \n",
      "8   [Produced by Phonix Beats and J. Cole]\\n\\n[Ver...   south  \n",
      "9   [Chorus]\\nHello, hello, hello\\nHello, hello, h...   south  \n",
      "10  [Intro]\\nOh right, oh\\nOh why na-da-da-da\\n\\n[...   south  \n",
      "11  [Intro]\\nLove yours\\nLove yours\\nNo such thing...   south  \n",
      "12  [Chorus]\\nAnd wherever we go\\nAnd whatever we ...   south  \n",
      "13  [Intro: Choir & J. Cole]\\nI'm a born sinner\\nB...   south  \n",
      "14  [Intro]\\nYeah, uh-huh\\n\\n[Verse 1]\\nThis the s...   south  \n",
      "15  [Chorus 1: J. Cole]\\nGot me up all night\\nAll ...   south  \n",
      "16  [Verse]\\nMo Money, yeah\\nMo Money, Blow Money,...   south  \n",
      "17  [Refrain]\\n(I said) Set it off on my left, set...   south  \n",
      "18  [Intro: Mike Epps (Sampled)]\\nMarried men act ...   south  \n",
      "19  [Intro: J. Cole & Amber Coffman (Sampled)]\\nSh...   south  \n",
      "20  [Intro]\\nAyo, ayo, ayo, ah, ayo, ah\\nAyo, ayo,...   south  \n",
      "21  [Produced by J. Cole]\\n\\n[Chorus: J. Cole & Ke...   south  \n",
      "22  [Intro]\\nAyy\\nCole World\\nForreal\\n\\n[Verse 1]...   south  \n",
      "23  [Intro]\\nOkay, I lied\\nUh-huh\\n\\n[Verse 1]\\nMo...   south  \n",
      "24  [Chorus: T-Boz, Chilli & Jennifer Hudson]\\nEve...   south  \n",
      "25  [Produced by J. Cole & Nate Jones]\\n\\n[Intro]\\...   south  \n",
      "26  [Intro: J. Cole]\\nYeah\\nHey\\n\\n[Verse 1: J. Co...   south  \n",
      "27  [Intro]\\nThis is a public service announcement...   south  \n",
      "28  [Intro: J. Cole]\\nThis for all my niggas in th...   south  \n",
      "29  [Intro]\\nYeah\\nYeah\\n\\n[Verse 1]\\nArt of seduc...   south  \n",
      "30  [Intro]\\nThese niggas know\\nHuh\\n\\n[Verse 1]\\n...   south  \n",
      "31  [Produced by Christian Rich]\\n\\n[Hook: Jhené A...   south  \n",
      "32  [Intro]\\nGo, go, go\\nGo, go, go\\nGo, go, go\\nG...   south  \n",
      "33  [Chorus]\\nFell in love through photograph\\nI d...   south  \n",
      "34  [Intro: kiLL edward]\\nI know Heaven is a mind ...   south  \n",
      "35  [Intro]\\nLife can bring much pain\\nThere are m...   south  \n",
      "36  [Intro]\\nYou really wanna know who Superman is...   south  \n",
      "37  [Pre-Chorus]\\nShe my number one, I don't need ...   south  \n",
      "38  [Intro: Richard Pryor]\\nLotta shit happens, li...   south  \n",
      "39  [Intro]\\nRight, right, right, right\\nSomething...   south  \n",
      "40  [Intro: J. Cole]\\nCop another bag and smoke to...   south  \n",
      "41  [Intro]\\nOne night\\nWhen me and my mom was abo...   south  \n",
      "42  1985, I arrived\\n33 years, damn, I'm grateful ...   south  \n",
      "43  [Produced by J. Cole]\\n\\n[Verse 1]\\nPartially ...   south  \n",
      "44  [Intro]\\nYeah, hey, Cole world\\n\\n[Hook]\\nHey,...   south  \n",
      "45  [Verse 1]\\nYeah, I had this little bad thing, ...   south  \n",
      "46  [Intro]\\nRight, right, right, right\\nSomething...   south  \n",
      "47  [Verse 1]\\nI put my heart and soul in this gam...   south  \n",
      "48  [Intro: J. Cole]\\nHey... huh, Cole World\\nYeah...   south  \n",
      "49  [Intro]\\nI think it's gonna be a hell of a nig...   south  \n",
      "50  [Intro]\\nUh-uh, uh-uh\\nOne, two, one, two, one...   south  \n",
      "51  [Intro: J. Cole]\\nAy, oh, yeah\\nCole world, ah...   south  \n",
      "52  [Intro]\\nYeah, what's up girl?\\n\\n[Verse 1]\\nA...   south  \n",
      "53  [Intro: Jay-Z]\\nThere's a nigga right now some...   south  \n",
      "54  [Intro]\\n(Aheee, ahee-iya-iya-iya-eee-e)\\n(Ahe...   south  \n",
      "55  [Verse 1]\\nYeah\\nYeah\\n\\nLook, I just shed tea...   south  \n",
      "56  [Intro]\\nI want to see you work out for me, wo...   south  \n",
      "\n",
      "[57 rows x 25 columns]\n"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Snoop Doog"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotify:artist:7hJcb9fa4alzcOq3EaNPoG\n"
     ]
    }
   ],
   "source": [
    "#get next artist data\n",
    "\n",
    "results = sp.search(\"artist:Snoop Dogg\")\n",
    "artist_id = results['tracks']['items'][0]['artists'][0]['uri']\n",
    "print(artist_id)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://api.spotify.com/v1/artists/7hJcb9fa4alzcOq3EaNPoG/albums?offset=50&limit=50&include_groups=album,single,compilation,appears_on&market=US\n"
     ]
    }
   ],
   "source": [
    "#get album details\n",
    "albums = sp.artist_albums('7hJcb9fa4alzcOq3EaNPoG', country=\"US\", limit=50)\n",
    "print(albums['next'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50\n",
      "spotify:album:4zeITicw3oKpOV5EMQIUQH\n",
      "32 \t Snoop Dogg Presents Bible of Love\n",
      "8 \t 220\n",
      "8 \t Make America Crip Again\n",
      "16 \t Neva Left\n",
      "20 \t COOLAID\n",
      "20 \t Coolaid\n",
      "20 \t COOLAID (Clean Edited Version)\n",
      "14 \t Cuzznz\n",
      "10 \t BUSH\n",
      "10 \t 7 Days Instrumentals\n",
      "8 \t 7 Days of Funk\n",
      "12 \t Mac and Devin Go To High School (Music From and Inspired By The Movie)\n",
      "23 \t Doggumentary\n",
      "22 \t Doggumentary\n",
      "21 \t Doggumentary\n",
      "22 \t Doggumentary\n",
      "21 \t Doggumentary\n",
      "8 \t More Malice\n",
      "8 \t More Malice\n",
      "20 \t Snoop Dogg Presents: My #1 Priority\n",
      "15 \t Death Row: The Lost Sessions Vol. 1\n",
      "14 \t Malice 'N Wonderland\n",
      "14 \t Malice 'N Wonderland\n",
      "21 \t Ego Trippin'\n",
      "21 \t Ego Trippin'\n",
      "16 \t Boss' Life\n",
      "21 \t Tha Blue Carpet Treatment\n",
      "21 \t Tha Blue Carpet Treatment\n",
      "19 \t The Best Of Snoop Dogg\n",
      "19 \t The Best Of Snoop Dogg\n",
      "20 \t R&G (Rhythm & Gangsta): The Masterpiece\n",
      "20 \t R&G (Rhythm & Gangsta): The Masterpiece\n",
      "20 \t Paid Tha Cost To Be Da Bo$$\n",
      "20 \t Paid Tha Cost To Be Da Bo$$\n",
      "19 \t Tha Last Meal\n",
      "21 \t No Limit Top Dogg\n",
      "21 \t No Limit Top Dogg\n",
      "21 \t Da Game Is To Be Sold, Not To Be Told\n",
      "21 \t Da Game Is To Be Sold, Not To Be Told\n",
      "21 \t Tha Doggfather\n",
      "21 \t Tha Doggfather\n",
      "13 \t Doggystyle\n",
      "13 \t Doggystyle\n",
      "1 \t Heavy Hittas\n",
      "1 \t Sirens (Radio Edit)\n",
      "1 \t Lifestyle\n",
      "1 \t Lifestyle\n",
      "5 \t How You Love Me (feat. Conor Maynard & Snoop Dogg) [The Remixes]\n",
      "1 \t How You Love Me (feat. Conor Maynard & Snoop Dogg)\n",
      "1 \t Moves (feat. Snoop Dogg)\n"
     ]
    }
   ],
   "source": [
    "#collect album details and print\n",
    "album_ids = [album['uri'] for album in albums['items']]\n",
    "print(len(album_ids))\n",
    "print(album_ids[0])\n",
    "\n",
    "all_tracks = []\n",
    "for album_id in album_ids:\n",
    "    tracks = sp.album_tracks(album_id, limit=50)\n",
    "    all_tracks.append(tracks)\n",
    "    \n",
    "for tracks, album in zip(all_tracks, albums.get('items')):\n",
    "    print(\n",
    "        len(tracks.get('items')),\n",
    "        \"\\t\",\n",
    "        album.get('name')\n",
    "    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "name                Thank You Lord (Intro) [feat. Chris Bolton]\n",
      "duration_ms                                               62133\n",
      "popularity                                                   36\n",
      "num_markets                                                  79\n",
      "album                         Snoop Dogg Presents Bible of Love\n",
      "disc_number                                                   1\n",
      "is_explicit                                               False\n",
      "track_number                                                  1\n",
      "release_date                                         2018-03-16\n",
      "artist                                               Snoop Dogg\n",
      "danceability                                              0.268\n",
      "energy                                                    0.526\n",
      "key                                                           5\n",
      "loudness                                                 -6.436\n",
      "mode                                                          0\n",
      "speechiness                                              0.0409\n",
      "acousticness                                              0.302\n",
      "instrumentalness                                        0.00046\n",
      "liveness                                                   0.27\n",
      "valence                                                   0.103\n",
      "tempo                                                    96.278\n",
      "time_signature                                                4\n",
      "Name: 0, dtype: object\n"
     ]
    }
   ],
   "source": [
    "#create df\n",
    "track_ids = []\n",
    "for tracks in all_tracks:\n",
    "    album_tracks = []\n",
    "    for track in tracks.get('items'):\n",
    "        album_tracks.append(track.get('uri'))\n",
    "    track_ids.append(album_tracks)\n",
    "\n",
    "\n",
    "track_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    tracks = sp.tracks(track_id_list)\n",
    "    track_objects.append(tracks)\n",
    "\n",
    "#collecting other features\n",
    "\n",
    "audio_feature_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    features = sp.audio_features(track_id_list)\n",
    "    audio_feature_objects.append(features)\n",
    "\n",
    "spotify_data = {\n",
    "    \"audio_features\": audio_feature_objects,\n",
    "    \"tracks\": track_objects\n",
    "}\n",
    "\n",
    "df = pd.DataFrame(columns=[\n",
    "    'name',\n",
    "    'duration_ms',\n",
    "    'popularity',\n",
    "    'num_markets',\n",
    "    'album',\n",
    "    'disc_number',\n",
    "    'is_explicit',\n",
    "    'track_number',\n",
    "    'release_date',\n",
    "    'artist',\n",
    "    'danceability',\n",
    "    'energy',\n",
    "    'key',\n",
    "    'loudness',\n",
    "    'mode',\n",
    "    'speechiness',\n",
    "    'acousticness',\n",
    "    'instrumentalness',\n",
    "    'liveness',\n",
    "    'valence',\n",
    "    'tempo',\n",
    "    'time_signature',\n",
    "])\n",
    "for album_info, album_features in zip(\n",
    "        spotify_data.get('tracks'), \n",
    "        spotify_data.get('audio_features')\n",
    "        ):\n",
    "    for track_info, track_features in zip(\n",
    "        album_info.get('tracks'),\n",
    "        album_features\n",
    "        ):\n",
    "        y = {\n",
    "            'name': track_info['name'],\n",
    "            'duration_ms': track_info['duration_ms'],\n",
    "            'popularity': track_info['popularity'],\n",
    "            'num_markets': len(track_info['available_markets']),\n",
    "            'album': track_info['album']['name'],\n",
    "            'disc_number': track_info['disc_number'],\n",
    "            'is_explicit': track_info['explicit'],\n",
    "            'track_number': track_info['track_number'],\n",
    "            'release_date': track_info['album']['release_date'],\n",
    "            'artist': track_info['artists'][0]['name'],\n",
    "            'danceability': track_features['danceability'],\n",
    "            'energy': track_features['energy'],\n",
    "            'key': track_features['key'],\n",
    "            'loudness': track_features['loudness'],\n",
    "            'mode': track_features['mode'],\n",
    "            'speechiness': track_features['speechiness'],\n",
    "            'acousticness': track_features['acousticness'],\n",
    "            'instrumentalness': track_features['instrumentalness'],\n",
    "            'liveness': track_features['liveness'],\n",
    "            'valence': track_features['valence'],\n",
    "            'tempo': track_features['tempo'],\n",
    "            'time_signature': track_features['time_signature'],\n",
    "        }\n",
    "        df = df.append(y, ignore_index=True)\n",
    "print(df.iloc[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Bathtub\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"G Funk (Intro)\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Gin And Juice (feat. Dat Nigga Daz)\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Tha Shiznit\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Lodi Dodi (feat. Nancy Fletcher)\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Murder Was The Case (Death After Visualizing Eternity) (feat. Dat Nigga Daz)\" by Snoop Dogg...\n",
      "No results found for: 'Murder Was The Case (Death After Visualizing Eternity) (feat. Dat Nigga Daz) Snoop Dogg'\n",
      "Searching for \"Serial Killa (feat. The D.O.C., Tha Dogg Pound & RBX)\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Who Am I (What's My Name)?\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"For All My Niggaz And Bitches (feat. Tha Dogg Pound & Lady of Rage)\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Ain't No Fun (If the Homies Cant Have None) (feat. Nate Dogg, Warren G & Kurupt)\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Doggy Dogg World (feat. The Dramatics & Tha Dogg Pound)\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Gz And Hustlas (feat. Nancy Fletcher)\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Pump Pump (feat. Lil' Malik)\" by Snoop Dogg...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album doggystyle\n",
    "#clean to album level\n",
    "ds = df[df['album'] == 'Doggystyle']\n",
    "ds = ds[ds['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "ds_list=[]\n",
    "for row in ds['name']:\n",
    "\n",
    "    ds_list.append(getLyric(row, 'Snoop Dogg')),\n",
    "\n",
    "dslyrics = pd.DataFrame(ds_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "ds = ds.reset_index()\n",
    "#add lyrics\n",
    "ds['lyrics'] = dslyrics['string_values']\n",
    "#clean\n",
    "ds =ds.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Intro / Tha Last Meal\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Hennesey N Buddah\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Snoop Dogg (What's My Name Pt. 2)\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"True Lies\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Go Away\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Set It Off\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Stacey Adams\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Lay Low\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Bring It On\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Game Court - Skit\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Issues\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Brake Fluid (Biiittch Pump Yo Brakes)\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Ready 2 Ryde\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Loosen' Control\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"I Can't Swim\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Leave Me Alone\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Back Up Off Me\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Y'All Gone Miss Me\" by Snoop Dogg...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album tlm\n",
    "#clean to album level\n",
    "tlm = df[df['album'] == 'Tha Last Meal']\n",
    "tlm = tlm[tlm['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "tlm_list=[]\n",
    "for row in tlm['name']:\n",
    "\n",
    "    tlm_list.append(getLyric(row, 'Snoop Dogg')),\n",
    "\n",
    "tlmlyrics = pd.DataFrame(tlm_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "tlm = tlm.reset_index()\n",
    "#add lyrics\n",
    "tlm['lyrics'] = tlmlyrics['string_values']\n",
    "#clean\n",
    "tlm =tlm.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                  name duration_ms popularity  \\\n",
      "0          Thank You Lord (Intro) [feat. Chris Bolton]       62133         36   \n",
      "1    Love for God (feat. Uncle Chucc, The Zion Mess...      194546         36   \n",
      "2                          Always Got Something to Say      245306         37   \n",
      "3                         Defeated (feat. John P. Kee)      273013         34   \n",
      "4          In the Name of Jesus (feat. October London)      209786         34   \n",
      "5    Going Home (feat. Uncle Chucc & The Zion Messe...      253160         31   \n",
      "6    Saved (feat. Faith Evans & 3rd Generation (Ber...      215493         32   \n",
      "7               Sunshine Feel Good (feat. Kim Burrell)      228306         36   \n",
      "8                            Sunrise (feat. Sly Pyper)      237000         34   \n",
      "9                  Pure Gold (feat. The Clark Sisters)      337253         30   \n",
      "10                                Pain (feat. B Slade)      284853         29   \n",
      "11                         New Wave (feat. Mali Music)      321893         34   \n",
      "12                             On Time (feat. B Slade)      227986         28   \n",
      "13                            You (feat. Tye Tribbett)      226333         33   \n",
      "14                 One More Day (feat. Charlie Wilson)      286106         33   \n",
      "15      Bible of Love (Interlude) [feat. Lonny Bereal]      160680         27   \n",
      "16     Come as You Are (feat. Marvin Sapp & Mary Mary)      341106         31   \n",
      "17        Talk to God (feat. Mali Music & Kim Burrell)      263746         27   \n",
      "18            Changed (feat. Isaac Carree & Jazze Pha)      199560         33   \n",
      "19                         Praise Him (feat. Soopafly)      213320         28   \n",
      "20               Blessing Me Again (feat. Rance Allen)      242160         29   \n",
      "21   Blessed & Highly Favored (Remix) [feat. The Cl...      304933         28   \n",
      "22                            Unbelievable (feat. Ev3)      215293         27   \n",
      "23                            No One Else (feat. K-Ci)      255613         26   \n",
      "24           Chizzle (feat. Sly Pyper & Daz Dillinger)      281373         33   \n",
      "25                         My God (feat. James Wright)      170493         27   \n",
      "26            When It's All Over (feat. Patti LaBelle)      302693         27   \n",
      "27   Crown (feat. Tyrell Urquhart, Jazze Pha & Issa...      211373         26   \n",
      "28                       Call Him (feat. Fred Hammond)      268680         26   \n",
      "29                Change the World (feat. John P. Kee)      334880         27   \n",
      "..                                                 ...         ...        ...   \n",
      "736                         Who Am I (What's My Name)?      246320         69   \n",
      "737  For All My Niggaz And Bitches (feat. Tha Dogg ...      283546         49   \n",
      "738  Ain't No Fun (If the Homies Cant Have None) (f...      246346         62   \n",
      "739  Doggy Dogg World (feat. The Dramatics & Tha Do...      338813         53   \n",
      "740              Gz And Hustlas (feat. Nancy Fletcher)      275893         56   \n",
      "741                       Pump Pump (feat. Lil' Malik)      279320         50   \n",
      "742                                            Bathtub      110306         13   \n",
      "743                                     G Funk (Intro)      144493         16   \n",
      "744                Gin And Juice (feat. Dat Nigga Daz)      211493         38   \n",
      "745                                        Tha Shiznit      280600         21   \n",
      "746                   Lodi Dodi (feat. Nancy Fletcher)      301400         22   \n",
      "747  Murder Was The Case (Death After Visualizing E...      218186         38   \n",
      "748  Serial Killa (feat. The D.O.C., Tha Dogg Pound...      212853         19   \n",
      "749                         Who Am I (What's My Name)?      246320         39   \n",
      "750  For All My Niggaz And Bitches (feat. Tha Dogg ...      283546         14   \n",
      "751  Ain't No Fun (If the Homies Cant Have None) (f...      246346         27   \n",
      "752  Doggy Dogg World (feat. The Dramatics & Tha Do...      338813         20   \n",
      "753              Gz And Hustlas (feat. Nancy Fletcher)      275893         19   \n",
      "754                       Pump Pump (feat. Lil' Malik)      279453         14   \n",
      "755                               Heavy Hittas - Remix      215722         43   \n",
      "756                                Sirens - Radio Edit      200463         67   \n",
      "757                                          Lifestyle      212110         50   \n",
      "758                                          Lifestyle      213768         20   \n",
      "759  How You Love Me (feat. Conor Maynard & Snoop D...      174265         52   \n",
      "760  How You Love Me (feat. Conor Maynard & Snoop D...      164171         33   \n",
      "761  How You Love Me (feat. Conor Maynard & Snoop D...      179130         48   \n",
      "762  How You Love Me (feat. Conor Maynard & Snoop D...      155625         33   \n",
      "763  How You Love Me (feat. Conor Maynard & Snoop D...      194285         28   \n",
      "764  How You Love Me (feat. Conor Maynard & Snoop D...      194285         65   \n",
      "765                           Moves (feat. Snoop Dogg)      165106         67   \n",
      "\n",
      "    num_markets                                              album  \\\n",
      "0            79                  Snoop Dogg Presents Bible of Love   \n",
      "1            79                  Snoop Dogg Presents Bible of Love   \n",
      "2            79                  Snoop Dogg Presents Bible of Love   \n",
      "3            79                  Snoop Dogg Presents Bible of Love   \n",
      "4            79                  Snoop Dogg Presents Bible of Love   \n",
      "5            79                  Snoop Dogg Presents Bible of Love   \n",
      "6            79                  Snoop Dogg Presents Bible of Love   \n",
      "7            79                  Snoop Dogg Presents Bible of Love   \n",
      "8            79                  Snoop Dogg Presents Bible of Love   \n",
      "9            79                  Snoop Dogg Presents Bible of Love   \n",
      "10           79                  Snoop Dogg Presents Bible of Love   \n",
      "11           79                  Snoop Dogg Presents Bible of Love   \n",
      "12           79                  Snoop Dogg Presents Bible of Love   \n",
      "13           79                  Snoop Dogg Presents Bible of Love   \n",
      "14           79                  Snoop Dogg Presents Bible of Love   \n",
      "15           79                  Snoop Dogg Presents Bible of Love   \n",
      "16           79                  Snoop Dogg Presents Bible of Love   \n",
      "17           79                  Snoop Dogg Presents Bible of Love   \n",
      "18           79                  Snoop Dogg Presents Bible of Love   \n",
      "19           79                  Snoop Dogg Presents Bible of Love   \n",
      "20           79                  Snoop Dogg Presents Bible of Love   \n",
      "21           79                  Snoop Dogg Presents Bible of Love   \n",
      "22           79                  Snoop Dogg Presents Bible of Love   \n",
      "23           79                  Snoop Dogg Presents Bible of Love   \n",
      "24           79                  Snoop Dogg Presents Bible of Love   \n",
      "25           79                  Snoop Dogg Presents Bible of Love   \n",
      "26           79                  Snoop Dogg Presents Bible of Love   \n",
      "27           79                  Snoop Dogg Presents Bible of Love   \n",
      "28           79                  Snoop Dogg Presents Bible of Love   \n",
      "29           79                  Snoop Dogg Presents Bible of Love   \n",
      "..          ...                                                ...   \n",
      "736          79                                         Doggystyle   \n",
      "737          79                                         Doggystyle   \n",
      "738          79                                         Doggystyle   \n",
      "739          79                                         Doggystyle   \n",
      "740          79                                         Doggystyle   \n",
      "741          79                                         Doggystyle   \n",
      "742          79                                         Doggystyle   \n",
      "743          79                                         Doggystyle   \n",
      "744          79                                         Doggystyle   \n",
      "745          79                                         Doggystyle   \n",
      "746          79                                         Doggystyle   \n",
      "747          79                                         Doggystyle   \n",
      "748          79                                         Doggystyle   \n",
      "749          79                                         Doggystyle   \n",
      "750          79                                         Doggystyle   \n",
      "751          79                                         Doggystyle   \n",
      "752          79                                         Doggystyle   \n",
      "753          79                                         Doggystyle   \n",
      "754          79                                         Doggystyle   \n",
      "755          79                                       Heavy Hittas   \n",
      "756          77                                Sirens (Radio Edit)   \n",
      "757          79                                          Lifestyle   \n",
      "758          79                                          Lifestyle   \n",
      "759          78  How You Love Me (feat. Conor Maynard & Snoop D...   \n",
      "760          78  How You Love Me (feat. Conor Maynard & Snoop D...   \n",
      "761          78  How You Love Me (feat. Conor Maynard & Snoop D...   \n",
      "762          78  How You Love Me (feat. Conor Maynard & Snoop D...   \n",
      "763          78  How You Love Me (feat. Conor Maynard & Snoop D...   \n",
      "764          78  How You Love Me (feat. Conor Maynard & Snoop D...   \n",
      "765          79                           Moves (feat. Snoop Dogg)   \n",
      "\n",
      "    disc_number is_explicit track_number release_date       artist  ...  key  \\\n",
      "0             1       False            1   2018-03-16   Snoop Dogg  ...    5   \n",
      "1             1       False            2   2018-03-16   Snoop Dogg  ...    2   \n",
      "2             1       False            3   2018-03-16   Snoop Dogg  ...    6   \n",
      "3             1       False            4   2018-03-16   Snoop Dogg  ...    0   \n",
      "4             1       False            5   2018-03-16   Snoop Dogg  ...    8   \n",
      "5             1       False            6   2018-03-16   Snoop Dogg  ...    8   \n",
      "6             1       False            7   2018-03-16   Snoop Dogg  ...    1   \n",
      "7             1       False            8   2018-03-16   Snoop Dogg  ...    7   \n",
      "8             1       False            9   2018-03-16   Snoop Dogg  ...    9   \n",
      "9             1       False           10   2018-03-16   Snoop Dogg  ...    8   \n",
      "10            1       False           11   2018-03-16   Snoop Dogg  ...    8   \n",
      "11            1       False           12   2018-03-16   Snoop Dogg  ...    7   \n",
      "12            1       False           13   2018-03-16   Snoop Dogg  ...    1   \n",
      "13            1       False           14   2018-03-16   Snoop Dogg  ...    0   \n",
      "14            1       False           15   2018-03-16   Snoop Dogg  ...    1   \n",
      "15            1       False           16   2018-03-16   Snoop Dogg  ...    9   \n",
      "16            1       False           17   2018-03-16   Snoop Dogg  ...    8   \n",
      "17            1       False           18   2018-03-16   Snoop Dogg  ...    5   \n",
      "18            1       False           19   2018-03-16   Snoop Dogg  ...    6   \n",
      "19            1       False           20   2018-03-16   Snoop Dogg  ...    0   \n",
      "20            1       False           21   2018-03-16   Snoop Dogg  ...    8   \n",
      "21            1       False           22   2018-03-16   Snoop Dogg  ...    0   \n",
      "22            1       False           23   2018-03-16   Snoop Dogg  ...    2   \n",
      "23            1       False           24   2018-03-16   Snoop Dogg  ...    8   \n",
      "24            1       False           25   2018-03-16   Snoop Dogg  ...    6   \n",
      "25            1       False           26   2018-03-16   Snoop Dogg  ...   10   \n",
      "26            1       False           27   2018-03-16   Snoop Dogg  ...    1   \n",
      "27            1       False           28   2018-03-16   Snoop Dogg  ...   10   \n",
      "28            1       False           29   2018-03-16   Snoop Dogg  ...   11   \n",
      "29            1       False           30   2018-03-16   Snoop Dogg  ...    5   \n",
      "..          ...         ...          ...          ...          ...  ...  ...   \n",
      "736           1        True            8         1993   Snoop Dogg  ...    7   \n",
      "737           1        True            9         1993   Snoop Dogg  ...    7   \n",
      "738           1        True           10         1993   Snoop Dogg  ...    8   \n",
      "739           1        True           11         1993   Snoop Dogg  ...    7   \n",
      "740           1        True           12         1993   Snoop Dogg  ...    1   \n",
      "741           1        True           13         1993   Snoop Dogg  ...   11   \n",
      "742           1       False            1         1993   Snoop Dogg  ...   11   \n",
      "743           1       False            2         1993   Snoop Dogg  ...    1   \n",
      "744           1       False            3         1993   Snoop Dogg  ...    7   \n",
      "745           1       False            4         1993   Snoop Dogg  ...    7   \n",
      "746           1       False            5         1993   Snoop Dogg  ...    8   \n",
      "747           1       False            6         1993   Snoop Dogg  ...   11   \n",
      "748           1       False            7         1993   Snoop Dogg  ...    1   \n",
      "749           1       False            8         1993   Snoop Dogg  ...    7   \n",
      "750           1       False            9         1993   Snoop Dogg  ...    4   \n",
      "751           1       False           10         1993   Snoop Dogg  ...    8   \n",
      "752           1       False           11         1993   Snoop Dogg  ...    7   \n",
      "753           1       False           12         1993   Snoop Dogg  ...    1   \n",
      "754           1       False           13         1993   Snoop Dogg  ...   11   \n",
      "755           1        True            1   2019-04-05   Snoop Dogg  ...    7   \n",
      "756           1       False            1   2019-04-05         Kaan  ...    9   \n",
      "757           1        True            1   2019-03-01  Tom Francis  ...    1   \n",
      "758           1       False            1   2019-03-01  Tom Francis  ...    1   \n",
      "759           1       False            1   2019-02-22     Hardwell  ...    9   \n",
      "760           1       False            2   2019-02-22     Hardwell  ...    9   \n",
      "761           1       False            3   2019-02-22     Hardwell  ...    0   \n",
      "762           1       False            4   2019-02-22     Hardwell  ...    0   \n",
      "763           1       False            5   2019-02-22     Hardwell  ...    0   \n",
      "764           1       False            1   2018-12-07     Hardwell  ...    0   \n",
      "765           1       False            1   2018-09-28    Olly Murs  ...    9   \n",
      "\n",
      "     loudness mode  speechiness acousticness  instrumentalness  liveness  \\\n",
      "0      -6.436    0       0.0409     0.302000          0.000460    0.2700   \n",
      "1      -8.106    1       0.0372     0.648000          0.000003    0.1510   \n",
      "2      -5.146    1       0.2030     0.104000          0.000000    0.5530   \n",
      "3      -3.318    1       0.1280     0.163000          0.000000    0.1600   \n",
      "4      -4.058    1       0.0604     0.204000          0.000000    0.2250   \n",
      "5      -5.088    1       0.0333     0.152000          0.000166    0.2630   \n",
      "6      -3.240    1       0.0515     0.070200          0.000000    0.4080   \n",
      "7      -5.030    1       0.0839     0.282000          0.000000    0.3500   \n",
      "8      -2.531    1       0.1390     0.129000          0.000000    0.0495   \n",
      "9      -7.087    1       0.0481     0.409000          0.000551    0.2730   \n",
      "10     -4.099    1       0.0474     0.364000          0.000037    0.0706   \n",
      "11    -14.871    0       0.0673     0.843000          0.000000    0.1340   \n",
      "12     -3.682    1       0.3830     0.040900          0.000000    0.2990   \n",
      "13     -6.112    0       0.2040     0.004000          0.000000    0.3380   \n",
      "14     -3.602    1       0.1330     0.202000          0.000000    0.0376   \n",
      "15     -5.096    1       0.0366     0.503000          0.000004    0.3680   \n",
      "16     -5.061    1       0.0298     0.045200          0.000005    0.1390   \n",
      "17     -4.602    0       0.1100     0.128000          0.000000    0.1790   \n",
      "18     -6.005    0       0.2160     0.079600          0.000000    0.0828   \n",
      "19     -6.483    0       0.0421     0.000673          0.000002    0.2930   \n",
      "20     -1.251    1       0.2670     0.129000          0.000000    0.3190   \n",
      "21     -4.567    0       0.1100     0.712000          0.000000    0.0709   \n",
      "22     -7.485    1       0.0433     0.533000          0.000000    0.1210   \n",
      "23     -3.837    1       0.0535     0.465000          0.000000    0.2540   \n",
      "24     -8.039    0       0.0639     0.054600          0.000000    0.1250   \n",
      "25     -3.751    0       0.2450     0.012400          0.000000    0.0604   \n",
      "26     -4.534    1       0.0461     0.047000          0.000132    0.2640   \n",
      "27     -4.556    1       0.1770     0.033000          0.000000    0.1210   \n",
      "28     -1.877    1       0.2140     0.127000          0.000000    0.6600   \n",
      "29     -4.613    0       0.2740     0.437000          0.000000    0.1190   \n",
      "..        ...  ...          ...          ...               ...       ...   \n",
      "736    -3.974    1       0.0492     0.000136          0.000020    0.5150   \n",
      "737    -3.840    1       0.2640     0.016200          0.000000    0.2280   \n",
      "738    -5.079    1       0.0699     0.045000          0.000043    0.1720   \n",
      "739    -6.311    1       0.2920     0.003600          0.000000    0.0959   \n",
      "740    -4.901    1       0.3100     0.164000          0.000000    0.3600   \n",
      "741    -5.834    0       0.1970     0.000432          0.000378    0.0672   \n",
      "742   -13.204    0       0.2860     0.174000          0.000000    0.2510   \n",
      "743    -3.976    0       0.1540     0.030500          0.000000    0.2600   \n",
      "744    -4.279    1       0.2000     0.028700          0.000492    0.6700   \n",
      "745    -4.559    1       0.0515     0.002000          0.000000    0.2920   \n",
      "746    -3.800    1       0.1170     0.010800          0.000000    0.2780   \n",
      "747    -5.368    1       0.1480     0.005610          0.000000    0.3380   \n",
      "748    -4.952    0       0.1700     0.002940          0.000000    0.1050   \n",
      "749    -3.970    1       0.0568     0.000137          0.000011    0.5030   \n",
      "750    -3.834    0       0.3040     0.017900          0.000000    0.2420   \n",
      "751    -5.036    1       0.1020     0.050600          0.000015    0.1860   \n",
      "752    -6.075    1       0.2980     0.002560          0.000000    0.0874   \n",
      "753    -4.958    1       0.3220     0.174000          0.000000    0.3620   \n",
      "754    -5.848    0       0.2240     0.000515          0.000084    0.2290   \n",
      "755    -9.078    1       0.2810     0.103000          0.000003    0.1110   \n",
      "756   -13.229    1       0.0563     0.013400          0.005290    0.4300   \n",
      "757    -9.115    0       0.0614     0.021100          0.000000    0.1430   \n",
      "758    -9.172    0       0.0654     0.019300          0.000000    0.1400   \n",
      "759    -2.273    0       0.1250     0.122000          0.000077    0.1190   \n",
      "760    -4.038    0       0.0426     0.004550          0.000536    0.1620   \n",
      "761    -3.351    1       0.0572     0.070200          0.000112    0.0647   \n",
      "762    -6.341    1       0.0448     0.018800          0.000000    0.1630   \n",
      "763    -4.095    1       0.0468     0.282000          0.000371    0.1260   \n",
      "764    -4.095    1       0.0468     0.282000          0.000371    0.1260   \n",
      "765    -3.458    0       0.2620     0.113000          0.000000    0.1680   \n",
      "\n",
      "     valence    tempo  time_signature  \n",
      "0     0.1030   96.278               4  \n",
      "1     0.1650  114.292               5  \n",
      "2     0.0879   86.553               4  \n",
      "3     0.4600  133.892               3  \n",
      "4     0.6840  127.634               5  \n",
      "5     0.4250  106.821               4  \n",
      "6     0.6230   63.985               3  \n",
      "7     0.4620   91.081               4  \n",
      "8     0.5650   81.548               4  \n",
      "9     0.3680  122.732               4  \n",
      "10    0.2870  116.017               4  \n",
      "11    0.3480   79.992               4  \n",
      "12    0.6480  147.908               4  \n",
      "13    0.5730   90.366               4  \n",
      "14    0.5760   80.079               4  \n",
      "15    0.1200  106.658               4  \n",
      "16    0.3180   97.005               4  \n",
      "17    0.8150   94.008               4  \n",
      "18    0.5540  130.112               4  \n",
      "19    0.9830  123.949               4  \n",
      "20    0.6850   87.007               4  \n",
      "21    0.5380  119.928               4  \n",
      "22    0.3330   81.127               4  \n",
      "23    0.5460  121.107               4  \n",
      "24    0.1290   96.002               4  \n",
      "25    0.8450   90.898               4  \n",
      "26    0.3760  127.100               4  \n",
      "27    0.5310  180.035               4  \n",
      "28    0.5490  107.593               4  \n",
      "29    0.4860   80.128               4  \n",
      "..       ...      ...             ...  \n",
      "736   0.6920   96.814               4  \n",
      "737   0.6260   87.867               4  \n",
      "738   0.6950  100.175               4  \n",
      "739   0.6820   94.188               4  \n",
      "740   0.7880   91.888               4  \n",
      "741   0.3750   97.222               4  \n",
      "742   0.7190   74.313               4  \n",
      "743   0.4940  100.119               4  \n",
      "744   0.3510   94.491               4  \n",
      "745   0.6720   96.805               4  \n",
      "746   0.6350   78.078               3  \n",
      "747   0.6200   91.162               4  \n",
      "748   0.7940   99.488               4  \n",
      "749   0.6600   96.824               4  \n",
      "750   0.5850   87.443               4  \n",
      "751   0.7370  100.171               4  \n",
      "752   0.6630   94.369               4  \n",
      "753   0.7760   91.349               4  \n",
      "754   0.3400   97.210               4  \n",
      "755   0.6710   99.059               4  \n",
      "756   0.5630  128.017               4  \n",
      "757   0.6450   83.214               4  \n",
      "758   0.5610   83.211               4  \n",
      "759   0.5420  126.029               4  \n",
      "760   0.2080  126.035               4  \n",
      "761   0.6570  125.991               4  \n",
      "762   0.3540  127.962               4  \n",
      "763   0.7560  104.991               4  \n",
      "764   0.7560  104.991               4  \n",
      "765   0.9420  202.039               4  \n",
      "\n",
      "[766 rows x 22 columns]\n"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Dolomite Intro\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Buck 'Em\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Trust Me\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"My Heat Goes Boom\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Dolomite - 1999 Digital Remaster\" by Snoop Dogg...\n",
      "No results found for: 'Dolomite - 1999 Digital Remaster Snoop Dogg'\n",
      "Searching for \"Snoopafella\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"In Love With A Thug\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"G Bedtime Stories\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Down 4 My N's\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Betta Days\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Somethin Bout Yo Bidness\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Bitch Please\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Doin' Too Much\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Gangsta Ride\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Ghetto Symphony\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Party With A D.P.G.\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Buss'n Rocks\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Just Dippin'\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Don't Tell\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"20 Minutes\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"I Love My Momma\" by Snoop Dogg...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album nolimittopdogg\n",
    "#clean to album level\n",
    "ptc = df[df['album'] == 'No Limit Top Dogg']\n",
    "ptc = ptc[ptc['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "ptc_list=[]\n",
    "for row in ptc['name']:\n",
    "\n",
    "    ptc_list.append(getLyric(row, 'Snoop Dogg')),\n",
    "\n",
    "ptclyrics = pd.DataFrame(ptc_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "ptc = ptc.reset_index()\n",
    "#add lyrics\n",
    "ptc['lyrics'] = ptclyrics['string_values']\n",
    "#clean\n",
    "ptc =ptc.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Intro\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Doggfather\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Ride 4 Me\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Up Jump Tha Boogie\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Freestyle Conversation\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"When I Grow Up\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Snoop Bounce\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Gold Rush\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"(Tear 'Em Off) Me and My Doggz\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"You Thought\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Vapors\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Groupie\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"2001\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Sixx Minutes\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"(D.J.) Wake Up\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Snoop's Upside Ya Head\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Blueberry\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Traffic Jam\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Doggyland\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Downtown Assassins\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Outro\" by Snoop Dogg...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album tha doggfather\n",
    "#clean to album level\n",
    "td = df[df['album'] == 'Tha Doggfather']\n",
    "td = td[td['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "td_list=[]\n",
    "for row in td['name']:\n",
    "\n",
    "    td_list.append(getLyric(row, 'Snoop Dogg')),\n",
    "\n",
    "tdlyrics = pd.DataFrame(td_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "td = td.reset_index()\n",
    "#add lyrics\n",
    "td['lyrics'] = tdlyrics['string_values']\n",
    "#clean\n",
    "td =td.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Intrology\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Think About It\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Crazy\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Vato\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"That's That Shit\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Candy (Drippin' Like Water) - Final Album Version (Explicit)\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Get A Light\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Gangbangin' 101\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Boss' Life\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"LAX\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"10 Lil' Crips\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Round Here\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"A Bitch I Knew\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Like This\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Which One Of You\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"I Wanna Fuck You\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Psst!\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Beat Up On Yo Pads\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Don't Stop\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Imagine\" by Snoop Dogg...\n",
      "Done.\n",
      "Searching for \"Conversations\" by Snoop Dogg...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for album tha blue carpet\n",
    "#clean to album level\n",
    "dg = df[df['album'] == 'Tha Blue Carpet Treatment']\n",
    "dg = dg[dg['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "dg_list=[]\n",
    "for row in dg['name']:\n",
    "\n",
    "    dg_list.append(getLyric(row, 'Snoop Dogg')),\n",
    "\n",
    "dglyrics = pd.DataFrame(dg_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "dg = dg.reset_index()\n",
    "#add lyrics\n",
    "dg['lyrics'] = dglyrics['string_values']\n",
    "#clean\n",
    "dg =dg.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                 name duration_ms popularity  \\\n",
      "0                                           Intrology      119106         29   \n",
      "1                                      Think About It      217800         33   \n",
      "2                                               Crazy      266613         43   \n",
      "3                                                Vato      284653         57   \n",
      "4                                    That's That Shit      257640         54   \n",
      "5   Candy (Drippin' Like Water) - Final Album Vers...      288040         39   \n",
      "6                                         Get A Light      221066         40   \n",
      "7                                     Gangbangin' 101      242893         36   \n",
      "8                                          Boss' Life      202680         48   \n",
      "9                                                 LAX      201480         32   \n",
      "10                                      10 Lil' Crips      195093         36   \n",
      "11                                         Round Here      222386         39   \n",
      "12                                     A Bitch I Knew      272453         34   \n",
      "13                                          Like This      236306         27   \n",
      "14                                   Which One Of You      212466         31   \n",
      "15                                   I Wanna Fuck You      178840         56   \n",
      "16                                              Psst!      179306         31   \n",
      "17                                 Beat Up On Yo Pads      177626         26   \n",
      "18                                         Don't Stop      202586         27   \n",
      "19                                            Imagine      282186         51   \n",
      "20                                      Conversations      218760         30   \n",
      "\n",
      "   num_markets                      album disc_number is_explicit  \\\n",
      "0           66  Tha Blue Carpet Treatment           1        True   \n",
      "1           66  Tha Blue Carpet Treatment           1        True   \n",
      "2           66  Tha Blue Carpet Treatment           1        True   \n",
      "3           66  Tha Blue Carpet Treatment           1        True   \n",
      "4           64  Tha Blue Carpet Treatment           1        True   \n",
      "5           66  Tha Blue Carpet Treatment           1        True   \n",
      "6           66  Tha Blue Carpet Treatment           1        True   \n",
      "7           66  Tha Blue Carpet Treatment           1        True   \n",
      "8           66  Tha Blue Carpet Treatment           1        True   \n",
      "9           66  Tha Blue Carpet Treatment           1        True   \n",
      "10          66  Tha Blue Carpet Treatment           1        True   \n",
      "11          66  Tha Blue Carpet Treatment           1        True   \n",
      "12          66  Tha Blue Carpet Treatment           1        True   \n",
      "13          66  Tha Blue Carpet Treatment           1        True   \n",
      "14          66  Tha Blue Carpet Treatment           1        True   \n",
      "15          64  Tha Blue Carpet Treatment           1        True   \n",
      "16          66  Tha Blue Carpet Treatment           1        True   \n",
      "17          66  Tha Blue Carpet Treatment           1        True   \n",
      "18          66  Tha Blue Carpet Treatment           1        True   \n",
      "19          66  Tha Blue Carpet Treatment           1        True   \n",
      "20          66  Tha Blue Carpet Treatment           1        True   \n",
      "\n",
      "   track_number release_date      artist  ...  loudness  mode speechiness  \\\n",
      "0             1   2006-01-01  Snoop Dogg  ...    -5.036     0      0.3730   \n",
      "1             2   2006-01-01  Snoop Dogg  ...    -5.244     1      0.3270   \n",
      "2             3   2006-01-01  Snoop Dogg  ...    -3.909     1      0.2580   \n",
      "3             4   2006-01-01  Snoop Dogg  ...    -4.584     1      0.2390   \n",
      "4             5   2006-01-01  Snoop Dogg  ...    -4.795     0      0.1720   \n",
      "5             6   2006-01-01  Snoop Dogg  ...    -6.926     0      0.5210   \n",
      "6             7   2006-01-01  Snoop Dogg  ...    -5.494     1      0.3110   \n",
      "7             8   2006-01-01  Snoop Dogg  ...    -5.109     1      0.3820   \n",
      "8             9   2006-01-01  Snoop Dogg  ...    -4.498     1      0.3060   \n",
      "9            10   2006-01-01  Snoop Dogg  ...    -6.382     0      0.3310   \n",
      "10           11   2006-01-01  Snoop Dogg  ...    -4.603     1      0.2060   \n",
      "11           12   2006-01-01  Snoop Dogg  ...    -3.943     0      0.2560   \n",
      "12           13   2006-01-01  Snoop Dogg  ...    -4.596     1      0.2160   \n",
      "13           14   2006-01-01  Snoop Dogg  ...    -6.102     1      0.3110   \n",
      "14           15   2006-01-01  Snoop Dogg  ...    -4.157     0      0.0961   \n",
      "15           16   2006-01-01  Snoop Dogg  ...    -8.433     1      0.0515   \n",
      "16           17   2006-01-01  Snoop Dogg  ...    -4.418     1      0.2730   \n",
      "17           18   2006-01-01  Snoop Dogg  ...    -3.947     1      0.4930   \n",
      "18           19   2006-01-01  Snoop Dogg  ...    -6.211     0      0.5220   \n",
      "19           20   2006-01-01  Snoop Dogg  ...    -3.787     0      0.4430   \n",
      "20           21   2006-01-01  Snoop Dogg  ...    -4.372     1      0.1360   \n",
      "\n",
      "    acousticness instrumentalness  liveness  valence    tempo  time_signature  \\\n",
      "0        0.12200         0.000006    0.6170    0.421   92.005               4   \n",
      "1        0.08310         0.000000    0.7560    0.724   98.708               4   \n",
      "2        0.28500         0.000006    0.3660    0.623   95.114               4   \n",
      "3        0.14200         0.000000    0.3780    0.460   90.961               4   \n",
      "4        0.01990         0.000000    0.0360    0.750   82.044               4   \n",
      "5        0.20500         0.000000    0.0898    0.411   98.065               4   \n",
      "6        0.46300         0.000120    0.3470    0.158   91.539               4   \n",
      "7        0.26300         0.000000    0.2650    0.444   84.754               4   \n",
      "8        0.11100         0.000000    0.3780    0.590   90.575               4   \n",
      "9        0.09240         0.000002    0.6090    0.684  100.428               4   \n",
      "10       0.37100         0.000000    0.1410    0.628   94.056               4   \n",
      "11       0.01690         0.000000    0.3610    0.473   81.999               4   \n",
      "12       0.00172         0.000000    0.1400    0.521   89.010               4   \n",
      "13       0.06230         0.000000    0.3750    0.188   89.227               4   \n",
      "14       0.22300         0.000000    0.2230    0.830  113.053               4   \n",
      "15       0.04520         0.000000    0.3510    0.278   99.969               4   \n",
      "16       0.18800         0.000019    0.3910    0.613   95.909               4   \n",
      "17       0.14800         0.000000    0.3670    0.559   92.698               4   \n",
      "18       0.06880         0.000000    0.4610    0.503  117.108               5   \n",
      "19       0.28600         0.000000    0.2480    0.638   87.105               4   \n",
      "20       0.10700         0.000000    0.2150    0.856   79.964               4   \n",
      "\n",
      "                                               lyrics  \n",
      "0   [George Clinton]\\nAs I take another chokin' to...  \n",
      "1   Yeah man...\\n\\n\"You know it's easy to talk abo...  \n",
      "2   [Intro]\\n*Gunshots*\\nBlack folks can't never h...  \n",
      "3   [Intro: Snoop Dogg]\\nMan don't you know that I...  \n",
      "4   [Intro: R. Kelly]\\nYeah, that's right, I like ...  \n",
      "5   You want 'em? I got 'em drippin' like water\\nY...  \n",
      "6   [Intro: Snoop Dogg] + (Damian Marley)\\nSay man...  \n",
      "7   [Intro: Snoop Dogg]\\nWest Coast, it's time to ...  \n",
      "8   [Verse 1: Snoop Dogg]\\nSome of 'em lie about t...  \n",
      "9   \"Oh... Cali?\\n\"No doubt\"\\n\\n\"LAX\"\\n\"Oh... Cali...  \n",
      "10  [Hook: Snoop Dogg]\\nTen little Crip niggas run...  \n",
      "11  [Hook] - X 2\\nIt ain't safe to leave the house...  \n",
      "12  Good evening ladies and gentlemen\\n{*scratched...  \n",
      "13  {*sounds of cameras and conversations in backg...  \n",
      "14  Yes.. greetings loved ones\\nYou inside the Nin...  \n",
      "15  [Intro: Akon]\\nKonvict (Konvict, konvict)\\nKon...  \n",
      "16  [Intro]\\nSnoop D-O Double to the G\\nDouble to ...  \n",
      "17  [Intro]\\nWho ride? (We ride!)\\nWho ride? (We r...  \n",
      "18  [Intro: Snoop]\\nYou in the War Zone\\nHa ha, ye...  \n",
      "19  [Intro: Snoop Dogg]\\nYo Doc what up my nigga\\n...  \n",
      "20  [Snoop Dogg]\\nBrothers is wack by popular dema...  \n",
      "\n",
      "[21 rows x 23 columns]\n"
     ]
    }
   ],
   "source": [
    "print(dg)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [],
   "source": [
    "#joinall dataframes for snoop\n",
    "snoop = pd.concat([ds, tlm, ptc, td, dg])\n",
    "snoop=snoop.reset_index()\n",
    "#add region data\n",
    "region= []\n",
    "for row in snoop['name']:\n",
    "    region.append('westcoast')\n",
    "\n",
    "snoop['region'] = region\n",
    "\n",
    "snoop.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\snoopfinal.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Nas\n",
    "\n",
    "Go to <a href=#bookmark>my bookmark</a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotify:artist:12ysl66foCF5mkQC9iEeGl\n"
     ]
    }
   ],
   "source": [
    "#get next artist data\n",
    "\n",
    "results = sp.search(\"artist:Nasir Jones\")\n",
    "artist_id = results['tracks']['items'][0]['artists'][0]['uri']\n",
    "print(artist_id)\n",
    "\n",
    "#not the real nas...manually found the code...input below reflects this.."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://api.spotify.com/v1/artists/20qISvAhX20dpIbOOzGK3q/albums?offset=50&limit=50&include_groups=album,single,compilation,appears_on&market=US\n"
     ]
    }
   ],
   "source": [
    "\n",
    "#get album details\n",
    "albums = sp.artist_albums('20qISvAhX20dpIbOOzGK3q', country=\"US\", limit=50)\n",
    "print(albums['next'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50\n",
      "spotify:album:66EwBbt2kPgugo8Wz0SKAw\n",
      "7 \t NASIR\n",
      "10 \t Illmatic: Live from the Kennedy Center with the National Symphony Orchestra\n",
      "10 \t NAS: TIME IS ILLMATIC\n",
      "14 \t Life Is Good\n",
      "14 \t Life Is Good\n",
      "18 \t Life Is Good (Deluxe)\n",
      "18 \t Life Is Good (Deluxe)\n",
      "15 \t Life Is Good (Explicit Version)\n",
      "15 \t Life Is Good (Edited Version)\n",
      "28 \t Life Is Good (Muve Sessions)\n",
      "18 \t Life Is Good (Deluxe)\n",
      "18 \t Life Is Good (Deluxe)\n",
      "13 \t Distant Relatives\n",
      "15 \t Nas\n",
      "15 \t Untitled\n",
      "17 \t Hip Hop Is Dead (Expanded Edition)\n",
      "17 \t Hip Hop Is Dead (Bonus Tracks)\n",
      "16 \t Hip Hop Is Dead (Deluxe Edition)\n",
      "25 \t Street's Disciple\n",
      "25 \t Street's Disciple\n",
      "15 \t QB 2 Compton Ringtones\n",
      "14 \t God's Son\n",
      "14 \t God's Son\n",
      "11 \t The Lost Tapes\n",
      "14 \t Stillmatic\n",
      "14 \t Stillmatic\n",
      "15 \t Nastradamus\n",
      "15 \t Nastradamus\n",
      "16 \t I Am...\n",
      "16 \t I Am...\n",
      "14 \t It Was Written\n",
      "10 \t Illmatic\n",
      "10 \t Illmatic\n",
      "20 \t Illmatic XX\n",
      "1 \t NY Se Mumbai (From the Motion Picture Gully Boy)\n",
      "1 \t On the Road Again (Music from The American Epic Sessions)\n",
      "1 \t Deep\n",
      "1 \t I'm a Villain (Instrumental)\n",
      "1 \t Villian\n",
      "5 \t Halftime EP\n",
      "1 \t Mi Favorita\n",
      "30 \t The Essential Nas\n",
      "30 \t The Essential Nas\n",
      "14 \t Greatest Hits\n",
      "14 \t Greatest Hits\n",
      "6 \t From Illmatic To Stillmatic The Remixes\n",
      "12 \t The Lost Tapes\n",
      "42 \t Hip Hop 00s\n",
      "15 \t Father Of Asahd\n",
      "7 \t Of Mics and Men (Music From The Showtime Documentary Series)\n"
     ]
    }
   ],
   "source": [
    "#collect album details and print\n",
    "album_ids = [album['uri'] for album in albums['items']]\n",
    "print(len(album_ids))\n",
    "print(album_ids[0])\n",
    "\n",
    "all_tracks = []\n",
    "for album_id in album_ids:\n",
    "    tracks = sp.album_tracks(album_id, limit=50)\n",
    "    all_tracks.append(tracks)\n",
    "    \n",
    "for tracks, album in zip(all_tracks, albums.get('items')):\n",
    "    print(\n",
    "        len(tracks.get('items')),\n",
    "        \"\\t\",\n",
    "        album.get('name')\n",
    "    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "name                Not For Radio\n",
      "duration_ms                202514\n",
      "popularity                     54\n",
      "num_markets                    79\n",
      "album                       NASIR\n",
      "disc_number                     1\n",
      "is_explicit                  True\n",
      "track_number                    1\n",
      "release_date           2018-06-15\n",
      "artist                        Nas\n",
      "danceability                0.494\n",
      "energy                      0.802\n",
      "key                             4\n",
      "loudness                    -5.08\n",
      "mode                            0\n",
      "speechiness                 0.412\n",
      "acousticness               0.0671\n",
      "instrumentalness                0\n",
      "liveness                    0.176\n",
      "valence                     0.453\n",
      "tempo                      96.703\n",
      "time_signature                  5\n",
      "Name: 0, dtype: object\n"
     ]
    }
   ],
   "source": [
    "#create df\n",
    "track_ids = []\n",
    "for tracks in all_tracks:\n",
    "    album_tracks = []\n",
    "    for track in tracks.get('items'):\n",
    "        album_tracks.append(track.get('uri'))\n",
    "    track_ids.append(album_tracks)\n",
    "\n",
    "\n",
    "track_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    tracks = sp.tracks(track_id_list)\n",
    "    track_objects.append(tracks)\n",
    "\n",
    "#collecting other features\n",
    "\n",
    "audio_feature_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    features = sp.audio_features(track_id_list)\n",
    "    audio_feature_objects.append(features)\n",
    "\n",
    "spotify_data = {\n",
    "    \"audio_features\": audio_feature_objects,\n",
    "    \"tracks\": track_objects\n",
    "}\n",
    "\n",
    "df = pd.DataFrame(columns=[\n",
    "    'name',\n",
    "    'duration_ms',\n",
    "    'popularity',\n",
    "    'num_markets',\n",
    "    'album',\n",
    "    'disc_number',\n",
    "    'is_explicit',\n",
    "    'track_number',\n",
    "    'release_date',\n",
    "    'artist',\n",
    "    'danceability',\n",
    "    'energy',\n",
    "    'key',\n",
    "    'loudness',\n",
    "    'mode',\n",
    "    'speechiness',\n",
    "    'acousticness',\n",
    "    'instrumentalness',\n",
    "    'liveness',\n",
    "    'valence',\n",
    "    'tempo',\n",
    "    'time_signature',\n",
    "])\n",
    "for album_info, album_features in zip(\n",
    "        spotify_data.get('tracks'), \n",
    "        spotify_data.get('audio_features')\n",
    "        ):\n",
    "    for track_info, track_features in zip(\n",
    "        album_info.get('tracks'),\n",
    "        album_features\n",
    "        ):\n",
    "        y = {\n",
    "            'name': track_info['name'],\n",
    "            'duration_ms': track_info['duration_ms'],\n",
    "            'popularity': track_info['popularity'],\n",
    "            'num_markets': len(track_info['available_markets']),\n",
    "            'album': track_info['album']['name'],\n",
    "            'disc_number': track_info['disc_number'],\n",
    "            'is_explicit': track_info['explicit'],\n",
    "            'track_number': track_info['track_number'],\n",
    "            'release_date': track_info['album']['release_date'],\n",
    "            'artist': track_info['artists'][0]['name'],\n",
    "            'danceability': track_features['danceability'],\n",
    "            'energy': track_features['energy'],\n",
    "            'key': track_features['key'],\n",
    "            'loudness': track_features['loudness'],\n",
    "            'mode': track_features['mode'],\n",
    "            'speechiness': track_features['speechiness'],\n",
    "            'acousticness': track_features['acousticness'],\n",
    "            'instrumentalness': track_features['instrumentalness'],\n",
    "            'liveness': track_features['liveness'],\n",
    "            'valence': track_features['valence'],\n",
    "            'tempo': track_features['tempo'],\n",
    "            'time_signature': track_features['time_signature'],\n",
    "        }\n",
    "        df = df.append(y, ignore_index=True)\n",
    "print(df.iloc[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Album Intro\" by Nas...\n",
      "Done.\n",
      "Searching for \"The Message\" by Nas...\n",
      "Done.\n",
      "Searching for \"Street Dreams\" by Nas...\n",
      "Done.\n",
      "Searching for \"I Gave You Power\" by Nas...\n",
      "Done.\n",
      "Searching for \"Watch Dem Niggas\" by Nas...\n",
      "Done.\n",
      "Searching for \"Take It In Blood\" by Nas...\n",
      "Done.\n",
      "Searching for \"Nas Is Coming\" by Nas...\n",
      "Done.\n",
      "Searching for \"Affirmative Action\" by Nas...\n",
      "Done.\n",
      "Searching for \"The Set Up\" by Nas...\n",
      "Done.\n",
      "Searching for \"Black Girl Lost\" by Nas...\n",
      "Done.\n",
      "Searching for \"Suspect\" by Nas...\n",
      "Done.\n",
      "Searching for \"Shootouts\" by Nas...\n",
      "Done.\n",
      "Searching for \"Live Nigga Rap\" by Nas...\n",
      "Done.\n",
      "Searching for \"If I Ruled the World (Imagine That)\" by Nas...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for it was written\n",
    "#clean to album level\n",
    "itww = df[df['album'] == 'It Was Written']\n",
    "itww = itww[itww['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "itww_list=[]\n",
    "for row in itww['name']:\n",
    "\n",
    "    itww_list.append(getLyric(row, 'Nas')),\n",
    "\n",
    "itwwlyrics = pd.DataFrame(itww_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "itww = itww.reset_index()\n",
    "#add lyrics\n",
    "itww['lyrics'] = itwwlyrics['string_values']\n",
    "#clean\n",
    "itww =itww.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"The Genesis\" by Nas...\n",
      "Done.\n",
      "Searching for \"N.Y. State of Mind\" by Nas...\n",
      "Done.\n",
      "Searching for \"Life's a Bitch\" by Nas...\n",
      "Done.\n",
      "Searching for \"The World Is Yours\" by Nas...\n",
      "Done.\n",
      "Searching for \"Halftime\" by Nas...\n",
      "Done.\n",
      "Searching for \"Memory Lane (Sittin' in da Park)\" by Nas...\n",
      "Done.\n",
      "Searching for \"One Love\" by Nas...\n",
      "Done.\n",
      "Searching for \"One Time 4 Your Mind\" by Nas...\n",
      "Done.\n",
      "Searching for \"Represent\" by Nas...\n",
      "Done.\n",
      "Searching for \"It Ain't Hard to Tell\" by Nas...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for illmatic\n",
    "#clean to album level\n",
    "ill = df[df['album'] == 'Illmatic']\n",
    "ill = ill[ill['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "ill_list=[]\n",
    "for row in ill['name']:\n",
    "\n",
    "    ill_list.append(getLyric(row, 'Nas')),\n",
    "\n",
    "illlyrics = pd.DataFrame(ill_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "ill = ill.reset_index()\n",
    "#add lyrics\n",
    "ill['lyrics'] = illlyrics['string_values']\n",
    "#clean\n",
    "ill =ill.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Stillmatic (The Intro)\" by Nas...\n",
      "Done.\n",
      "Searching for \"Ether\" by Nas...\n",
      "Done.\n",
      "Searching for \"Got Ur Self A...\" by Nas...\n",
      "Done.\n",
      "Searching for \"Smokin'\" by Nas...\n",
      "Done.\n",
      "Searching for \"You're da Man\" by Nas...\n",
      "Done.\n",
      "Searching for \"Rewind\" by Nas...\n",
      "Done.\n",
      "Searching for \"One Mic\" by Nas...\n",
      "Done.\n",
      "Searching for \"2nd Childhood\" by Nas...\n",
      "Done.\n",
      "Searching for \"Destroy & Rebuild\" by Nas...\n",
      "Done.\n",
      "Searching for \"The Flyest (feat. AZ)\" by Nas...\n",
      "Done.\n",
      "Searching for \"Rule\" by Nas...\n",
      "Done.\n",
      "Searching for \"My Country\" by Nas...\n",
      "Done.\n",
      "Searching for \"What Goes Around\" by Nas...\n",
      "Done.\n",
      "Searching for \"Every Ghetto\" by Nas...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for stillmatic\n",
    "#clean to album level\n",
    "still = df[df['album'] == 'Stillmatic']\n",
    "still = still[still['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "still_list=[]\n",
    "for row in still['name']:\n",
    "\n",
    "    still_list.append(getLyric(row, 'Nas')),\n",
    "\n",
    "stilllyrics = pd.DataFrame(still_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "still = still.reset_index()\n",
    "#add lyrics\n",
    "still['lyrics'] = stilllyrics['string_values']\n",
    "#clean\n",
    "still =still.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"No Introduction\" by Nas...\n",
      "Done.\n",
      "Searching for \"Loco-Motive\" by Nas...\n",
      "Done.\n",
      "Searching for \"A Queens Story\" by Nas...\n",
      "Done.\n",
      "Searching for \"Accident Murderers\" by Nas...\n",
      "Done.\n",
      "Searching for \"Daughters\" by Nas...\n",
      "Done.\n",
      "Searching for \"Reach Out\" by Nas...\n",
      "Done.\n",
      "Searching for \"World's An Addiction\" by Nas...\n",
      "Done.\n",
      "Searching for \"Summer On Smash\" by Nas...\n",
      "Done.\n",
      "Searching for \"You Wouldn't Understand\" by Nas...\n",
      "Done.\n",
      "Searching for \"Back When\" by Nas...\n",
      "Done.\n",
      "Searching for \"The Don\" by Nas...\n",
      "Done.\n",
      "Searching for \"Stay\" by Nas...\n",
      "Done.\n",
      "Searching for \"Cherry Wine\" by Nas...\n",
      "Done.\n",
      "Searching for \"Bye Baby\" by Nas...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for life is good\n",
    "#clean to album level\n",
    "lig = df[df['album'] == 'Life Is Good']\n",
    "lig = lig[lig['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "lig_list=[]\n",
    "for row in lig['name']:\n",
    "\n",
    "    lig_list.append(getLyric(row, 'Nas')),\n",
    "\n",
    "liglyrics = pd.DataFrame(lig_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "lig = lig.reset_index()\n",
    "#add lyrics\n",
    "lig['lyrics'] = liglyrics['string_values']\n",
    "#clean\n",
    "lig =lig.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"The Prediction\" by Nas...\n",
      "Done.\n",
      "Searching for \"Life We Chose\" by Nas...\n",
      "Done.\n",
      "Searching for \"Nastradamus\" by Nas...\n",
      "Done.\n",
      "Searching for \"Some Of Us Have Angels\" by Nas...\n",
      "Done.\n",
      "Searching for \"Project Windows (feat. Ron Isley)\" by Nas...\n",
      "Done.\n",
      "Searching for \"Come Get Me\" by Nas...\n",
      "Done.\n",
      "Searching for \"Shoot 'em Up\" by Nas...\n",
      "Done.\n",
      "Searching for \"Last Words (feat. Nashawn & Millennium Thug)\" by Nas...\n",
      "Done.\n",
      "Searching for \"Family (feat. Nas)\" by Nas...\n",
      "Done.\n",
      "Searching for \"God Love Us\" by Nas...\n",
      "Done.\n",
      "Searching for \"Quiet Niggas (feat. Bravehearts)\" by Nas...\n",
      "Done.\n",
      "Searching for \"Big Girl\" by Nas...\n",
      "Done.\n",
      "Searching for \"New World\" by Nas...\n",
      "Done.\n",
      "Searching for \"You Owe Me (feat. Ginuwine)\" by Nas...\n",
      "Done.\n",
      "Searching for \"The Outcome\" by Nas...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for nastradamus\n",
    "#clean to album level\n",
    "n = df[df['album'] == 'Nastradamus']\n",
    "n = n[n['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "n_list=[]\n",
    "for row in n['name']:\n",
    "\n",
    "    n_list.append(getLyric(row, 'Nas')),\n",
    "\n",
    "nlyrics = pd.DataFrame(n_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "n = n.reset_index()\n",
    "#add lyrics\n",
    "n['lyrics'] = nlyrics['string_values']\n",
    "#clean\n",
    "n =n.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Get Down\" by Nas...\n",
      "Done.\n",
      "Searching for \"The Cross\" by Nas...\n",
      "Done.\n",
      "Searching for \"Made You Look\" by Nas...\n",
      "Done.\n",
      "Searching for \"Last Real N***** Alive\" by Nas...\n",
      "Done.\n",
      "Searching for \"Zone Out\" by Nas...\n",
      "Done.\n",
      "Searching for \"Hey Nas\" by Nas...\n",
      "Done.\n",
      "Searching for \"Book Of Rhymes\" by Nas...\n",
      "Done.\n",
      "Searching for \"Thugz Mansion (N.Y.)\" by Nas...\n",
      "Done.\n",
      "Searching for \"Mastermind\" by Nas...\n",
      "Done.\n",
      "Searching for \"Warrior Song\" by Nas...\n",
      "Done.\n",
      "Searching for \"Revolutionary Warfare\" by Nas...\n",
      "Done.\n",
      "Searching for \"Dance\" by Nas...\n",
      "Done.\n",
      "Searching for \"Heaven\" by Nas...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for gods son\n",
    "#clean to album level\n",
    "gs = df[df['album'] == 'God\\'s Son']\n",
    "gs = gs[gs['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "gs_list=[]\n",
    "for row in gs['name']:\n",
    "\n",
    "    gs_list.append(getLyric(row, 'Nas')),\n",
    "\n",
    "gslyrics = pd.DataFrame(gs_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "gs = gs.reset_index()\n",
    "#add lyrics\n",
    "gs['lyrics'] = gslyrics['string_values']\n",
    "#clean\n",
    "gs =gs.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Album Intro\" by Nas...\n",
      "Done.\n",
      "Searching for \"N.Y. State of Mind, Pt. ll\" by Nas...\n",
      "Done.\n",
      "Searching for \"Hate Me Now\" by Nas...\n",
      "Done.\n",
      "Searching for \"Small World\" by Nas...\n",
      "Done.\n",
      "Searching for \"Favor for a Favor\" by Nas...\n",
      "Done.\n",
      "Searching for \"We Will Survive\" by Nas...\n",
      "Done.\n",
      "Searching for \"Ghetto Prisoners\" by Nas...\n",
      "Done.\n",
      "Searching for \"You Won't See Me Tonight\" by Nas...\n",
      "Done.\n",
      "Searching for \"I Want to Talk to You\" by Nas...\n",
      "Done.\n",
      "Searching for \"Dr. Knockboot\" by Nas...\n",
      "Done.\n",
      "Searching for \"Life Is What You Make It\" by Nas...\n",
      "Done.\n",
      "Searching for \"Big Things\" by Nas...\n",
      "Done.\n",
      "Searching for \"Nas Is Like\" by Nas...\n",
      "Done.\n",
      "Searching for \"K-I-SS-I-N-G\" by Nas...\n",
      "Done.\n",
      "Searching for \"Money Is My Bitch\" by Nas...\n",
      "Done.\n",
      "Searching for \"Undying Love\" by Nas...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for I am...\n",
    "#clean to album level\n",
    "ia = df[df['album'] == 'I Am...']\n",
    "ia = ia[ia['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "ia_list=[]\n",
    "for row in ia['name']:\n",
    "\n",
    "    ia_list.append(getLyric(row, 'Nas')),\n",
    "\n",
    "ialyrics = pd.DataFrame(ia_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "ia = ia.reset_index()\n",
    "#add lyrics\n",
    "ia['lyrics'] = ialyrics['string_values']\n",
    "#clean\n",
    "ia =ia.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"A Message To The Feds, Sincerely, We The People\" by Nas...\n",
      "Done.\n",
      "Searching for \"Nazareth Savage\" by Nas...\n",
      "Done.\n",
      "Searching for \"American Way\" by Nas...\n",
      "Done.\n",
      "Searching for \"These Are Our Heroes\" by Nas...\n",
      "Done.\n",
      "Searching for \"Disciple\" by Nas...\n",
      "Done.\n",
      "Searching for \"Sekou Story\" by Nas...\n",
      "Done.\n",
      "Searching for \"Live Now\" by Nas...\n",
      "Done.\n",
      "Searching for \"Rest Of My Life\" by Nas...\n",
      "Done.\n",
      "Searching for \"Just a Moment\" by Nas...\n",
      "Done.\n",
      "Searching for \"Reason\" by Nas...\n",
      "Done.\n",
      "Searching for \"You Know My Style\" by Nas...\n",
      "Done.\n",
      "Searching for \"Suicide Bounce\" by Nas...\n",
      "Done.\n",
      "Searching for \"Street's Disciple\" by Nas...\n",
      "Done.\n",
      "Searching for \"U.B.R. (Unauthorized Biography Of Rakim)\" by Nas...\n",
      "Done.\n",
      "Searching for \"Virgo\" by Nas...\n",
      "Done.\n",
      "Searching for \"Remember The Times (Intro)\" by Nas...\n",
      "Done.\n",
      "Searching for \"Remember The Times\" by Nas...\n",
      "Done.\n",
      "Searching for \"The Makings Of A Perfect Bitch\" by Nas...\n",
      "Done.\n",
      "Searching for \"Getting Married\" by Nas...\n",
      "Done.\n",
      "Searching for \"No One Else In The Room\" by Nas...\n",
      "Done.\n",
      "Searching for \"War\" by Nas...\n",
      "Done.\n",
      "Searching for \"Me & You (Dedicated To Destiny)\" by Nas...\n",
      "Done.\n",
      "Searching for \"Thief's Theme\" by Nas...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for sd\n",
    "#clean to album level\n",
    "sd= df[df['album'] == 'Street\\'s Disciple']\n",
    "sd = sd[sd['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "sd_list=[]\n",
    "for row in sd['name']:\n",
    "\n",
    "    sd_list.append(getLyric(row, 'Nas')),\n",
    "\n",
    "sdlyrics = pd.DataFrame(sd_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "sd = sd.reset_index()\n",
    "#add lyrics\n",
    "sd['lyrics'] = sdlyrics['string_values']\n",
    "#clean\n",
    "sd =sd.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [],
   "source": [
    "#joinall dataframes for nas\n",
    "nas = pd.concat([itww, ill, still, lig, n, gs, ia, sd])\n",
    "nas=nas.reset_index()\n",
    "#add region data\n",
    "region= []\n",
    "for row in nas['name']:\n",
    "    region.append('eastcoast')\n",
    "\n",
    "nas['region'] = region\n",
    "\n",
    "nas.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\nasfinal.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Tupac\n",
    "\n",
    "Go to <a href=#bookmark>my bookmark</a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotify:artist:1ZwdS5xdxEREPySFridCfh\n"
     ]
    }
   ],
   "source": [
    "#get next artist data\n",
    "\n",
    "results = sp.search(\"artist:2pac\")\n",
    "artist_id = results['tracks']['items'][0]['artists'][0]['uri']\n",
    "print(artist_id)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://api.spotify.com/v1/artists/1ZwdS5xdxEREPySFridCfh/albums?offset=50&limit=50&include_groups=album,single,compilation,appears_on&market=US\n"
     ]
    }
   ],
   "source": [
    "#get album details\n",
    "albums = sp.artist_albums('1ZwdS5xdxEREPySFridCfh', country=\"US\", limit=50)\n",
    "print(albums['next'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50\n",
      "spotify:album:2qmmPaaWXRM1kZujpUKKsO\n",
      "16 \t Soldier 2 Soldier (Collector's Edition)\n",
      "14 \t Nu Mixx Klazzics Vol. 2 (Evolution: Duets And Remixes)\n",
      "12 \t Nu Mixx Klazzics Vol. 2 (Evolution: Duets And Remixes)\n",
      "12 \t Nu Mixx Klazzics Vol. 2 (Evolution: Duets And Remixes)\n",
      "13 \t Pac's Life\n",
      "13 \t Pac's Life\n",
      "25 \t Live at the House Of Blues\n",
      "27 \t All Eyez On Me\n",
      "27 \t All Eyez On Me\n",
      "13 \t Live\n",
      "13 \t Live\n",
      "17 \t Loyal To The Game\n",
      "17 \t Loyal To The Game\n",
      "14 \t Resurrection (Music From And Inspired By The Motion Picture)\n",
      "26 \t Better Dayz\n",
      "26 \t Better Dayz\n",
      "10 \t Unsolved\n",
      "28 \t Until The End Of Time\n",
      "29 \t Until The End Of Time\n",
      "25 \t The Rose That Grew From Concrete\n",
      "26 \t R U Still Down? [Remember Me]\n",
      "27 \t All Eyez On Me\n",
      "15 \t Me Against The World\n",
      "16 \t Strictly 4 My N.I.G.G.A.Z...\n",
      "13 \t 2Pacalypse Now\n",
      "1 \t Make It a better day\n",
      "1 \t Mo Thugs Records Presents: Wonder Why They Call You Bitch by Tupac\n",
      "3 \t Too Late\n",
      "1 \t Too Late\n",
      "1 \t Untouchable Swizz Beatz Remix\n",
      "3 \t Runnin' (Dying To Live)\n",
      "11 \t The Best of 2Pac - Pt. 1: Thug\n",
      "11 \t The Best Of 2Pac (Pt. 1: Thug)\n",
      "11 \t The Best of 2Pac - Pt. 2: Life\n",
      "11 \t The Best Of 2Pac (Pt. 2: Life)\n",
      "15 \t The Rose - Volume 2 - Music Inspired By 2pac's Poetry\n",
      "15 \t The Rose - Volume 2 - Music Inspired By 2pac's Poetry\n",
      "10 \t Deathrow Presents Nu-Mixx Klazzics\n",
      "10 \t Nu-mixx Klazzics\n",
      "10 \t Nu-mixx Klazzics\n",
      "25 \t Greatest Hits\n",
      "25 \t Greatest Hits\n",
      "1 \t Love + Hate\n",
      "13 \t Cold Dayz\n",
      "16 \t Live from Lantana 2\n",
      "24 \t Eid Drop 2017 (Remixes)\n",
      "13 \t Eid Drop XVIII (Remixes)\n",
      "15 \t The Vault Vol. 1 (Remixes)\n",
      "15 \t The Vault Vol. 2 (Remixes)\n",
      "2 \t Fear Comin Back (Remixes)\n"
     ]
    }
   ],
   "source": [
    "#collect album details and print\n",
    "album_ids = [album['uri'] for album in albums['items']]\n",
    "print(len(album_ids))\n",
    "print(album_ids[0])\n",
    "\n",
    "all_tracks = []\n",
    "for album_id in album_ids:\n",
    "    tracks = sp.album_tracks(album_id, limit=50)\n",
    "    all_tracks.append(tracks)\n",
    "    \n",
    "for tracks, album in zip(all_tracks, albums.get('items')):\n",
    "    print(\n",
    "        len(tracks.get('items')),\n",
    "        \"\\t\",\n",
    "        album.get('name')\n",
    "    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "name                                     Soldiers Prayer AM\n",
      "duration_ms                                          121760\n",
      "popularity                                               42\n",
      "num_markets                                              79\n",
      "album               Soldier 2 Soldier (Collector's Edition)\n",
      "disc_number                                               1\n",
      "is_explicit                                            True\n",
      "track_number                                              1\n",
      "release_date                                     2010-11-23\n",
      "artist                                            Dead Prez\n",
      "danceability                                          0.608\n",
      "energy                                                0.437\n",
      "key                                                       5\n",
      "loudness                                            -13.969\n",
      "mode                                                      0\n",
      "speechiness                                          0.0425\n",
      "acousticness                                         0.0314\n",
      "instrumentalness                                          0\n",
      "liveness                                              0.206\n",
      "valence                                               0.363\n",
      "tempo                                                79.101\n",
      "time_signature                                            4\n",
      "Name: 0, dtype: object\n"
     ]
    }
   ],
   "source": [
    "#create df\n",
    "track_ids = []\n",
    "for tracks in all_tracks:\n",
    "    album_tracks = []\n",
    "    for track in tracks.get('items'):\n",
    "        album_tracks.append(track.get('uri'))\n",
    "    track_ids.append(album_tracks)\n",
    "\n",
    "\n",
    "track_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    tracks = sp.tracks(track_id_list)\n",
    "    track_objects.append(tracks)\n",
    "\n",
    "#collecting other features\n",
    "\n",
    "audio_feature_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    features = sp.audio_features(track_id_list)\n",
    "    audio_feature_objects.append(features)\n",
    "\n",
    "spotify_data = {\n",
    "    \"audio_features\": audio_feature_objects,\n",
    "    \"tracks\": track_objects\n",
    "}\n",
    "\n",
    "df = pd.DataFrame(columns=[\n",
    "    'name',\n",
    "    'duration_ms',\n",
    "    'popularity',\n",
    "    'num_markets',\n",
    "    'album',\n",
    "    'disc_number',\n",
    "    'is_explicit',\n",
    "    'track_number',\n",
    "    'release_date',\n",
    "    'artist',\n",
    "    'danceability',\n",
    "    'energy',\n",
    "    'key',\n",
    "    'loudness',\n",
    "    'mode',\n",
    "    'speechiness',\n",
    "    'acousticness',\n",
    "    'instrumentalness',\n",
    "    'liveness',\n",
    "    'valence',\n",
    "    'tempo',\n",
    "    'time_signature',\n",
    "])\n",
    "for album_info, album_features in zip(\n",
    "        spotify_data.get('tracks'), \n",
    "        spotify_data.get('audio_features')\n",
    "        ):\n",
    "    for track_info, track_features in zip(\n",
    "        album_info.get('tracks'),\n",
    "        album_features\n",
    "        ):\n",
    "        y = {\n",
    "            'name': track_info['name'],\n",
    "            'duration_ms': track_info['duration_ms'],\n",
    "            'popularity': track_info['popularity'],\n",
    "            'num_markets': len(track_info['available_markets']),\n",
    "            'album': track_info['album']['name'],\n",
    "            'disc_number': track_info['disc_number'],\n",
    "            'is_explicit': track_info['explicit'],\n",
    "            'track_number': track_info['track_number'],\n",
    "            'release_date': track_info['album']['release_date'],\n",
    "            'artist': track_info['artists'][0]['name'],\n",
    "            'danceability': track_features['danceability'],\n",
    "            'energy': track_features['energy'],\n",
    "            'key': track_features['key'],\n",
    "            'loudness': track_features['loudness'],\n",
    "            'mode': track_features['mode'],\n",
    "            'speechiness': track_features['speechiness'],\n",
    "            'acousticness': track_features['acousticness'],\n",
    "            'instrumentalness': track_features['instrumentalness'],\n",
    "            'liveness': track_features['liveness'],\n",
    "            'valence': track_features['valence'],\n",
    "            'tempo': track_features['tempo'],\n",
    "            'time_signature': track_features['time_signature'],\n",
    "        }\n",
    "        df = df.append(y, ignore_index=True)\n",
    "print(df.iloc[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Ambitionz Az A Ridah\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"All About U (ft. Nate Dogg, Snoop Dogg, Fatal, Yani Hadati)\" by 2Pac...\n",
      "No results found for: 'All About U (ft. Nate Dogg, Snoop Dogg, Fatal, Yani Hadati) 2Pac'\n",
      "Searching for \"Skandalouz (ft. Nate Dogg)\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Got My Mind Made Up (ft. Dat Nigga Daz, Kurupt, Method Man, Redman)\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"How Do You Want It (ft. KC, Jojo)\" by 2Pac...\n",
      "No results found for: 'How Do You Want It (ft. KC, Jojo) 2Pac'\n",
      "Searching for \"2 Of Amerikaz Most Wanted (ft. Snoop Doggy Dog)\" by 2Pac...\n",
      "No results found for: '2 Of Amerikaz Most Wanted (ft. Snoop Doggy Dog) 2Pac'\n",
      "Searching for \"No More Pain\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Heartz Of Men\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Life Goes On\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Only God Can Judge Me (ft. Rappin' 4-Tay)\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Tradin War Stories (ft. C-BO, CPO, Outlawz, The Storm)\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"I Ain't Mad At Cha (ft. Danny Boy)\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Whatz Ya Phone # (ft. Danny Boy)\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Can't C Me\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Shorty Wanna Be A Thug\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Holla At Me\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Wonda Why They Call U B____\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"When We Ride (ft. Outlaw Immortals)\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Thug Passion (ft. Jewell, Outlawz, The Storm)\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Picture Me Rollin' (ft. Danny Boy, CPO, Big Syke)\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Check Out Time\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Ratha Be Ya N____ (ft. Richie Rich)\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"All Eyez On Me (ft. Big Syke)\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Run Tha Streetz (ft. Michel'le, Storm, Mutah)\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Ain't Hard 2 Find (ft. B-Legit, C-BO, E-40, Richie Rich)\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Ambitionz Az A Ridah\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"All About U\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Skandalouz\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Got My Mind Made Up\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"How Do You Want It\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"2 Of Amerikaz Most Wanted\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"No More Pain\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Heartz Of Men\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Life Goes On\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Only God Can Judge Me\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Tradin War Stories\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"California Love (remix)\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"I Ain't Mad At Cha\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Whatz Ya Phone #\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Can't C Me\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Shorty Wanna Be A Thug\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Holla At Me\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Wonda Why They Call U B____\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"When We Ride\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Thug Passion\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Picture Me Rollin'\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Check Out Time\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Ratha Be Ya N____\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"All Eyez On Me\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Run Tha Streetz\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Ain't Hard 2 Find\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Heaven Ain't Hard 2 Find\" by 2Pac...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for all eyez on me\n",
    "#clean to album level\n",
    "ae = df[df['album'] == 'All Eyez On Me']\n",
    "ae = ae[ae['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "ae_list=[]\n",
    "for row in ae['name']:\n",
    "\n",
    "    ae_list.append(getLyric(row, '2Pac')),\n",
    "\n",
    "aelyrics = pd.DataFrame(ae_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "ae = ae.reset_index()\n",
    "#add lyrics\n",
    "ae['lyrics'] = aelyrics['string_values']\n",
    "#clean\n",
    "ae = ae.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [],
   "source": [
    "ae = ae.drop([1])\n",
    "ae = ae.drop([4])\n",
    "ae = ae.drop([5])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Intro\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"If I Die 2Nite\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Me Against The World\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"So Many Tears\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Temptations\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Young Niggaz\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Heavy In The Game\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Lord Knows\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Dear Mama\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"It Ain't Easy\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Can U Get Away\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Old School\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Fuck The World\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Death Around The Corner\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Outlaw\" by 2Pac...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for me against the world\n",
    "#clean to album level\n",
    "matw = df[df['album'] == 'Me Against The World']\n",
    "matw = matw[matw['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "matw_list=[]\n",
    "for row in matw['name']:\n",
    "\n",
    "    matw_list.append(getLyric(row, '2Pac')),\n",
    "\n",
    "matwlyrics = pd.DataFrame(matw_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "matw = matw.reset_index()\n",
    "#add lyrics\n",
    "matw['lyrics'] = matwlyrics['string_values']\n",
    "#clean\n",
    "matw = matw.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Young Black Male\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Trapped\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Soulja's Story\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"I Don't Give A Fuck\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Violent\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Words Of Wisdom\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Something Wicked\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Crooked Ass Nigga\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"If My Homie Calls\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Brenda's Got A Baby\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Tha' Lunatic\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Rebel Of The Underground\" by 2Pac...\n",
      "Done.\n",
      "Searching for \"Part Time Mutha\" by 2Pac...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for 2pacalypse now\n",
    "#clean to album level\n",
    "tpn = df[df['album'] == '2Pacalypse Now']\n",
    "tpn = tpn[tpn['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "tpn_list=[]\n",
    "for row in tpn['name']:\n",
    "\n",
    "    tpn_list.append(getLyric(row, '2Pac')),\n",
    "\n",
    "tpnlyrics = pd.DataFrame(tpn_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "tpn = tpn.reset_index()\n",
    "#add lyrics\n",
    "tpn['lyrics'] = tpnlyrics['string_values']\n",
    "#clean\n",
    "tpn= tpn.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [],
   "source": [
    "#joinall dataframes for tupac\n",
    "tupac = pd.concat([ae, matw, tpn])\n",
    "tupac=tupac.reset_index()\n",
    "#add region data\n",
    "region= []\n",
    "for row in tupac['name']:\n",
    "    region.append('westcoast')\n",
    "\n",
    "tupac['region'] = region\n",
    "\n",
    "tupac.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\tupacfinal.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# T.I.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotify:artist:4OBJLual30L7gRl5UkeRcT\n"
     ]
    }
   ],
   "source": [
    "#get next artist data\n",
    "\n",
    "results = sp.search(\"artist:T.I.\")\n",
    "artist_id = results['tracks']['items'][0]['artists'][0]['uri']\n",
    "print(artist_id)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://api.spotify.com/v1/artists/4OBJLual30L7gRl5UkeRcT/albums?offset=50&limit=50&include_groups=album,single,compilation,appears_on&market=US\n"
     ]
    }
   ],
   "source": [
    "#get album details\n",
    "albums = sp.artist_albums('4OBJLual30L7gRl5UkeRcT', country=\"US\", limit=50)\n",
    "print(albums['next'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50\n",
      "spotify:album:6BLPwtPvpmqKHp2pFfpSIT\n",
      "15 \t DIME TRAP\n",
      "15 \t Us Or Else: Letter To The System\n",
      "15 \t Us Or Else: Letter To The System\n",
      "18 \t Paperwork (Deluxe Explicit)\n",
      "18 \t Paperwork (Deluxe Clean)\n",
      "22 \t F*ck A Mixtape\n",
      "19 \t F*ck Da City Up\n",
      "16 \t Trouble Man: Heavy is the Head\n",
      "16 \t Trouble Man: Heavy is the Head\n",
      "14 \t No Mercy\n",
      "14 \t No Mercy\n",
      "16 \t Paper Trail\n",
      "16 \t Paper Trail\n",
      "18 \t T.I. VS T.I.P.\n",
      "18 \t T.I. VS T.I.P.\n",
      "18 \t T.I. vs. T.I.P. (Instrumental)\n",
      "31 \t Down With The King: Gangsta Grillz\n",
      "17 \t King\n",
      "17 \t King\n",
      "17 \t Urban Legend (Chopped & Screwed)\n",
      "17 \t Urban Legend\n",
      "17 \t Urban Legend\n",
      "16 \t Trap Muzik\n",
      "16 \t Trap Muzik\n",
      "18 \t I'm Serious\n",
      "1 \t Fuck Nigga\n",
      "1 \t The Amazing Mr. F**k Up (feat. Victoria Monét)\n",
      "1 \t The Weekend (feat. Young Thug & Swizz Beatz)\n",
      "1 \t Jefe (feat. Meek Mill)\n",
      "1 \t Wraith\n",
      "1 \t Coalition DJs Presents: Certified (feat. Jacquees)\n",
      "1 \t Coalition DJs Presents: Certified (feat. Jacquees)\n",
      "6 \t Us Or Else\n",
      "6 \t Us Or Else\n",
      "1 \t DOPE\n",
      "1 \t DOPE\n",
      "1 \t Money Talk\n",
      "1 \t Money Talk\n",
      "1 \t California (Ft. Ricco Barrino) - Single\n",
      "5 \t Da' Nic\n",
      "5 \t Da' Nic\n",
      "1 \t Check, Run It - Single\n",
      "1 \t Check, Run It - Single\n",
      "1 \t Project Steps - Single\n",
      "1 \t Paperwork\n",
      "1 \t Paperwork\n",
      "1 \t New National Anthem\n",
      "1 \t New National Anthem\n",
      "1 \t No Mediocre\n",
      "1 \t No Mediocre\n"
     ]
    }
   ],
   "source": [
    "#collect album details and print\n",
    "album_ids = [album['uri'] for album in albums['items']]\n",
    "print(len(album_ids))\n",
    "print(album_ids[0])\n",
    "\n",
    "all_tracks = []\n",
    "for album_id in album_ids:\n",
    "    tracks = sp.album_tracks(album_id, limit=50)\n",
    "    all_tracks.append(tracks)\n",
    "    \n",
    "for tracks, album in zip(all_tracks, albums.get('items')):\n",
    "    print(\n",
    "        len(tracks.get('items')),\n",
    "        \"\\t\",\n",
    "        album.get('name')\n",
    "    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "name                Seasons (feat. Sam Hook)\n",
      "duration_ms                           275280\n",
      "popularity                                42\n",
      "num_markets                               79\n",
      "album                              DIME TRAP\n",
      "disc_number                                1\n",
      "is_explicit                             True\n",
      "track_number                               1\n",
      "release_date                      2018-10-05\n",
      "artist                                  T.I.\n",
      "danceability                           0.453\n",
      "energy                                 0.498\n",
      "key                                        8\n",
      "loudness                              -10.11\n",
      "mode                                       0\n",
      "speechiness                           0.0662\n",
      "acousticness                           0.496\n",
      "instrumentalness                           0\n",
      "liveness                               0.319\n",
      "valence                                0.323\n",
      "tempo                                 88.812\n",
      "time_signature                             4\n",
      "Name: 0, dtype: object\n"
     ]
    }
   ],
   "source": [
    "#create df\n",
    "track_ids = []\n",
    "for tracks in all_tracks:\n",
    "    album_tracks = []\n",
    "    for track in tracks.get('items'):\n",
    "        album_tracks.append(track.get('uri'))\n",
    "    track_ids.append(album_tracks)\n",
    "\n",
    "\n",
    "track_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    tracks = sp.tracks(track_id_list)\n",
    "    track_objects.append(tracks)\n",
    "\n",
    "#collecting other features\n",
    "\n",
    "audio_feature_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    features = sp.audio_features(track_id_list)\n",
    "    audio_feature_objects.append(features)\n",
    "\n",
    "spotify_data = {\n",
    "    \"audio_features\": audio_feature_objects,\n",
    "    \"tracks\": track_objects\n",
    "}\n",
    "\n",
    "df = pd.DataFrame(columns=[\n",
    "    'name',\n",
    "    'duration_ms',\n",
    "    'popularity',\n",
    "    'num_markets',\n",
    "    'album',\n",
    "    'disc_number',\n",
    "    'is_explicit',\n",
    "    'track_number',\n",
    "    'release_date',\n",
    "    'artist',\n",
    "    'danceability',\n",
    "    'energy',\n",
    "    'key',\n",
    "    'loudness',\n",
    "    'mode',\n",
    "    'speechiness',\n",
    "    'acousticness',\n",
    "    'instrumentalness',\n",
    "    'liveness',\n",
    "    'valence',\n",
    "    'tempo',\n",
    "    'time_signature',\n",
    "])\n",
    "for album_info, album_features in zip(\n",
    "        spotify_data.get('tracks'), \n",
    "        spotify_data.get('audio_features')\n",
    "        ):\n",
    "    for track_info, track_features in zip(\n",
    "        album_info.get('tracks'),\n",
    "        album_features\n",
    "        ):\n",
    "        y = {\n",
    "            'name': track_info['name'],\n",
    "            'duration_ms': track_info['duration_ms'],\n",
    "            'popularity': track_info['popularity'],\n",
    "            'num_markets': len(track_info['available_markets']),\n",
    "            'album': track_info['album']['name'],\n",
    "            'disc_number': track_info['disc_number'],\n",
    "            'is_explicit': track_info['explicit'],\n",
    "            'track_number': track_info['track_number'],\n",
    "            'release_date': track_info['album']['release_date'],\n",
    "            'artist': track_info['artists'][0]['name'],\n",
    "            'danceability': track_features['danceability'],\n",
    "            'energy': track_features['energy'],\n",
    "            'key': track_features['key'],\n",
    "            'loudness': track_features['loudness'],\n",
    "            'mode': track_features['mode'],\n",
    "            'speechiness': track_features['speechiness'],\n",
    "            'acousticness': track_features['acousticness'],\n",
    "            'instrumentalness': track_features['instrumentalness'],\n",
    "            'liveness': track_features['liveness'],\n",
    "            'valence': track_features['valence'],\n",
    "            'tempo': track_features['tempo'],\n",
    "            'time_signature': track_features['time_signature'],\n",
    "        }\n",
    "        df = df.append(y, ignore_index=True)\n",
    "print(df.iloc[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"56 Bars (Intro)\" by T.I....\n",
      "Done.\n",
      "Searching for \"I'm Illy\" by T.I....\n",
      "Done.\n",
      "Searching for \"Ready For Whatever\" by T.I....\n",
      "Done.\n",
      "Searching for \"On Top Of The World (feat. Ludacris & B.o.B)\" by T.I....\n",
      "Done.\n",
      "Searching for \"Live Your Life (feat. Rihanna)\" by T.I....\n",
      "Done.\n",
      "Searching for \"Whatever You Like\" by T.I....\n",
      "Done.\n",
      "Searching for \"No Matter What\" by T.I....\n",
      "Done.\n",
      "Searching for \"My Life Your Entertainment (feat. Usher)\" by T.I....\n",
      "Done.\n",
      "Searching for \"Porn Star\" by T.I....\n",
      "Done.\n",
      "Searching for \"Swing Ya Rag (feat. Swizz Beatz)\" by T.I....\n",
      "Done.\n",
      "Searching for \"What Up, What's Haapnin'?\" by T.I....\n",
      "Done.\n",
      "Searching for \"Every Chance I Get\" by T.I....\n",
      "Done.\n",
      "Searching for \"Swagga Like Us (feat. Kanye West & Lil' Wayne)\" by T.I....\n",
      "Done.\n",
      "Searching for \"Slide Show (feat. John Legend)\" by T.I....\n",
      "Done.\n",
      "Searching for \"You Ain't Missin' Nothing\" by T.I....\n",
      "Done.\n",
      "Searching for \"Dead And Gone (feat. Justin Timberlake)\" by T.I....\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for papertrail\n",
    "#clean to album level\n",
    "pw= df[df['album'] == 'Paper Trail']\n",
    "pw = pw[pw['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "pw_list=[]\n",
    "for row in pw['name']:\n",
    "\n",
    "    pw_list.append(getLyric(row, 'T.I.')),\n",
    "\n",
    "pwlyrics = pd.DataFrame(pw_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "pw = pw.reset_index()\n",
    "#add lyrics\n",
    "pw['lyrics'] = pwlyrics['string_values']\n",
    "#clean\n",
    "pw =pw.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"King Back\" by T.I....\n",
      "Done.\n",
      "Searching for \"Front Back (feat. UGK)\" by T.I....\n",
      "Done.\n",
      "Searching for \"What You Know\" by T.I....\n",
      "Done.\n",
      "Searching for \"I'm Talkin' To You\" by T.I....\n",
      "Done.\n",
      "Searching for \"Live In The Sky (feat. Jamie Foxx)\" by T.I....\n",
      "Done.\n",
      "Searching for \"Ride Wit Me\" by T.I....\n",
      "Done.\n",
      "Searching for \"Why You Wanna\" by T.I....\n",
      "Done.\n",
      "Searching for \"Get It\" by T.I....\n",
      "Done.\n",
      "Searching for \"Top Back\" by T.I....\n",
      "Done.\n",
      "Searching for \"I'm Straight (feat. BG & Young Jeezy)\" by T.I....\n",
      "Done.\n",
      "Searching for \"Undertaker (feat. Young Buck, Young Dro & DJ Drama)\" by T.I....\n",
      "No results found for: 'Undertaker (feat. Young Buck, Young Dro & DJ Drama) T.I.'\n",
      "Searching for \"Stand Up Guy\" by T.I....\n",
      "Done.\n",
      "Searching for \"You Know Who\" by T.I....\n",
      "Done.\n",
      "Searching for \"Goodlife (feat. Pharrell & Common)\" by T.I....\n",
      "Done.\n",
      "Searching for \"Hello (feat. Governor)\" by T.I....\n",
      "Done.\n",
      "Searching for \"Told You So\" by T.I....\n",
      "Done.\n",
      "Searching for \"Bankhead (feat. P$C & Young Dro)\" by T.I....\n",
      "No results found for: 'Bankhead (feat. P$C & Young Dro) T.I.'\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for king\n",
    "#clean to album level\n",
    "king= df[df['album'] == 'King']\n",
    "king = king[king['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "king_list=[]\n",
    "for row in king['name']:\n",
    "\n",
    "    king_list.append(getLyric(row, 'T.I.')),\n",
    "\n",
    "kinglyrics = pd.DataFrame(king_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "king = king.reset_index()\n",
    "#add lyrics\n",
    "king['lyrics'] = kinglyrics['string_values']\n",
    "#clean\n",
    "king=king.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Act I: T.I.P.\" by T.I....\n",
      "Done.\n",
      "Searching for \"Big S**t Poppin' (Do It)\" by T.I....\n",
      "Done.\n",
      "Searching for \"Raw\" by T.I....\n",
      "Done.\n",
      "Searching for \"You Know What It Is (feat. Wyclef Jean)\" by T.I....\n",
      "Done.\n",
      "Searching for \"Da Dopeman\" by T.I....\n",
      "Done.\n",
      "Searching for \"Watch What You Say To Me (feat. Jay-Z)\" by T.I....\n",
      "Done.\n",
      "Searching for \"Hurt (feat. Alfamega & Busta Rhymes)\" by T.I....\n",
      "Done.\n",
      "Searching for \"Act II: T.I.\" by T.I....\n",
      "Done.\n",
      "Searching for \"Help Is Coming\" by T.I....\n",
      "Done.\n",
      "Searching for \"My Swag (feat. Wyclef Jean)\" by T.I....\n",
      "Done.\n",
      "Searching for \"We Do This\" by T.I....\n",
      "Done.\n",
      "Searching for \"Show It To Me (feat. Nelly)\" by T.I....\n",
      "Done.\n",
      "Searching for \"Don't You Wanna Be High\" by T.I....\n",
      "Done.\n",
      "Searching for \"Touchdown (feat. Eminem)\" by T.I....\n",
      "Done.\n",
      "Searching for \"Act III: T.I. vs. T.I.P. The Confrontation\" by T.I....\n",
      "Done.\n",
      "Searching for \"Tell 'Em I Said That\" by T.I....\n",
      "Done.\n",
      "Searching for \"Respect This Hustle\" by T.I....\n",
      "Done.\n",
      "Searching for \"My Type\" by T.I....\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for ti vs tip\n",
    "#clean to album level\n",
    "tip= df[df['album'] == 'T.I. VS T.I.P.']\n",
    "tip = tip[tip['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "tip_list=[]\n",
    "for row in tip['name']:\n",
    "\n",
    "    tip_list.append(getLyric(row, 'T.I.')),\n",
    "\n",
    "tiplyrics = pd.DataFrame(tip_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "tip = tip.reset_index()\n",
    "#add lyrics\n",
    "tip['lyrics'] = tiplyrics['string_values']\n",
    "#clean\n",
    "tip=tip.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Tha King\" by T.I....\n",
      "Done.\n",
      "Searching for \"Motivation\" by T.I....\n",
      "Done.\n",
      "Searching for \"U Don't Know Me\" by T.I....\n",
      "Done.\n",
      "Searching for \"ASAP\" by T.I....\n",
      "Done.\n",
      "Searching for \"Prayin For Help\" by T.I....\n",
      "Done.\n",
      "Searching for \"Why U Mad At Me\" by T.I....\n",
      "Done.\n",
      "Searching for \"Get Loose (feat. Nelly)\" by T.I....\n",
      "Done.\n",
      "Searching for \"What They Do (feat. BG)\" by T.I....\n",
      "Done.\n",
      "Searching for \"The Greatest (feat. Mannie Fresh)\" by T.I....\n",
      "Done.\n",
      "Searching for \"Get Ya Shit Together (feat. Lil' Kim)\" by T.I....\n",
      "Done.\n",
      "Searching for \"Freak Though (feat. Pharrell)\" by T.I....\n",
      "Done.\n",
      "Searching for \"Countdown\" by T.I....\n",
      "Done.\n",
      "Searching for \"Bring Em Out\" by T.I....\n",
      "Done.\n",
      "Searching for \"Limelight (feat. P$C & Big Kuntry)\" by T.I....\n",
      "No results found for: 'Limelight (feat. P$C & Big Kuntry) T.I.'\n",
      "Searching for \"Chillin With My Bitch (feat. Jazze Pha)\" by T.I....\n",
      "Done.\n",
      "Searching for \"Stand Up (feat. Trick Daddy, Lil Jon & Lil Wayne)\" by T.I....\n",
      "Done.\n",
      "Searching for \"My Life (feat. Daz Dillinger)\" by T.I....\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for urban legend\n",
    "#clean to album level\n",
    "UL= df[df['album'] == 'Urban Legend']\n",
    "UL = UL[UL['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "UL_list=[]\n",
    "for row in UL['name']:\n",
    "\n",
    "    UL_list.append(getLyric(row, 'T.I.')),\n",
    "\n",
    "ULlyrics = pd.DataFrame(UL_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "UL= UL.reset_index()\n",
    "#add lyrics\n",
    "UL['lyrics'] = ULlyrics['string_values']\n",
    "#clean\n",
    "UL=UL.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                 name duration_ms popularity  \\\n",
      "0                                            Tha King      204586         35   \n",
      "1                                          Motivation      214000         46   \n",
      "2                                     U Don't Know Me      243506         52   \n",
      "3                                                ASAP      284413         48   \n",
      "4                                     Prayin For Help      262600         33   \n",
      "5                                     Why U Mad At Me      233266         33   \n",
      "6                             Get Loose (feat. Nelly)      252120         44   \n",
      "7                             What They Do (feat. BG)      228720         33   \n",
      "8                   The Greatest (feat. Mannie Fresh)      262920         35   \n",
      "9               Get Ya Shit Together (feat. Lil' Kim)      245320         34   \n",
      "10                      Freak Though (feat. Pharrell)      223533         34   \n",
      "11                                          Countdown      295826         30   \n",
      "12                                       Bring Em Out      216706         64   \n",
      "14            Chillin With My Bitch (feat. Jazze Pha)      236480         32   \n",
      "15  Stand Up (feat. Trick Daddy, Lil Jon & Lil Wayne)      282760         42   \n",
      "16                      My Life (feat. Daz Dillinger)      313266         34   \n",
      "\n",
      "   num_markets         album disc_number is_explicit track_number  \\\n",
      "0           79  Urban Legend           1        True            1   \n",
      "1           79  Urban Legend           1        True            2   \n",
      "2           79  Urban Legend           1        True            3   \n",
      "3           79  Urban Legend           1        True            4   \n",
      "4           79  Urban Legend           1        True            5   \n",
      "5           79  Urban Legend           1        True            6   \n",
      "6           79  Urban Legend           1        True            7   \n",
      "7           79  Urban Legend           1        True            8   \n",
      "8           79  Urban Legend           1        True            9   \n",
      "9           79  Urban Legend           1        True           10   \n",
      "10          79  Urban Legend           1        True           11   \n",
      "11          79  Urban Legend           1        True           12   \n",
      "12          79  Urban Legend           1        True           13   \n",
      "14          79  Urban Legend           1        True           15   \n",
      "15          79  Urban Legend           1        True           16   \n",
      "16          79  Urban Legend           1        True           17   \n",
      "\n",
      "   release_date artist  ...  loudness  mode speechiness  acousticness  \\\n",
      "0    2004-11-29   T.I.  ...    -4.985     1       0.252      0.000225   \n",
      "1    2004-11-29   T.I.  ...    -8.010     0       0.305      0.252000   \n",
      "2    2004-11-29   T.I.  ...    -4.854     1       0.170      0.049600   \n",
      "3    2004-11-29   T.I.  ...    -5.426     1       0.317      0.335000   \n",
      "4    2004-11-29   T.I.  ...    -7.490     0       0.277      0.229000   \n",
      "5    2004-11-29   T.I.  ...    -6.834     1       0.347      0.457000   \n",
      "6    2004-11-29   T.I.  ...    -7.591     0       0.283      0.024500   \n",
      "7    2004-11-29   T.I.  ...    -5.275     1       0.261      0.056300   \n",
      "8    2004-11-29   T.I.  ...    -5.700     0       0.300      0.060600   \n",
      "9    2004-11-29   T.I.  ...    -5.977     1       0.673      0.288000   \n",
      "10   2004-11-29   T.I.  ...    -4.135     0       0.147      0.234000   \n",
      "11   2004-11-29   T.I.  ...    -5.972     1       0.370      0.043700   \n",
      "12   2004-11-29   T.I.  ...    -2.983     1       0.257      0.029800   \n",
      "14   2004-11-29   T.I.  ...    -3.584     0       0.258      0.489000   \n",
      "15   2004-11-29   T.I.  ...    -5.361     0       0.456      0.106000   \n",
      "16   2004-11-29   T.I.  ...    -6.006     0       0.316      0.188000   \n",
      "\n",
      "   instrumentalness  liveness  valence    tempo  time_signature  \\\n",
      "0                 0    0.9300    0.486   85.976               4   \n",
      "1                 0    0.2210    0.590  161.984               4   \n",
      "2                 0    0.0825    0.526   83.914               4   \n",
      "3                 0    0.4050    0.583  158.130               4   \n",
      "4                 0    0.1950    0.697   94.951               4   \n",
      "5                 0    0.2440    0.666   86.987               4   \n",
      "6                 0    0.1200    0.483   97.087               4   \n",
      "7                 0    0.0686    0.616  119.979               3   \n",
      "8                 0    0.0814    0.433   90.939               4   \n",
      "9                 0    0.0664    0.676  121.042               5   \n",
      "10         6.31e-05    0.1040    0.700   91.973               4   \n",
      "11                0    0.5930    0.561  110.834               5   \n",
      "12                0    0.1410    0.587   98.579               4   \n",
      "14                0    0.1280    0.774   82.788               4   \n",
      "15                0    0.1490    0.807   83.193               4   \n",
      "16                0    0.3270    0.637   91.412               4   \n",
      "\n",
      "                                               lyrics  \n",
      "0   [Припев: Ammiak]\\nГрязь в твой дом\\nЛюбишь эск...  \n",
      "1   [Intro]\\nBetter get on yo job, tell'em, haters...  \n",
      "2   [Intro]\\nI'mma tell y'all sucka niggas somethi...  \n",
      "3   [Verse 1: T.I.]\\nI'm on my grind, Grand Hustle...  \n",
      "4   [T.I. praying over indistinct chatter]\\nOur fa...  \n",
      "5   [T.I. Talking]\\nI got a question fo you hatin ...  \n",
      "6   [T.I.]\\nAy, I wanna see you dance like them gi...  \n",
      "7   [T.I.]\\nYea\\nYou already know what it is pimp ...  \n",
      "8   [Verse 1]\\nDiamonds in my bracelet shine like ...  \n",
      "9   [Intro - T.I. talking]\\nAs you see the O.G.s f...  \n",
      "10  [T.I.] Hey! Hey! Hey!\\n\\n[Hook - Pharrell Will...  \n",
      "11  [Chorus: Chris Brown]\\nLights out, countdown\\n...  \n",
      "12  [Intro: Jay Z snippet]\\n(Bring 'em out, Its ha...  \n",
      "14  [Intro]\\nDig pimp... I'ma holla at y'all in a ...  \n",
      "15  [Intro: Lil Jon]\\nYeah, yeah\\nCheck this out m...  \n",
      "16  Daz: You know it's your life nigga, you do as ...  \n",
      "\n",
      "[16 rows x 23 columns]\n"
     ]
    }
   ],
   "source": [
    "UL =UL.drop([13])\n",
    "print(UL)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Trap Muzik (feat. Mac Boney)\" by T.I....\n",
      "Done.\n",
      "Searching for \"I Can't Quit\" by T.I....\n",
      "Done.\n",
      "Searching for \"Be Easy\" by T.I....\n",
      "Done.\n",
      "Searching for \"No More Talk\" by T.I....\n",
      "Done.\n",
      "Searching for \"Doin' My Job\" by T.I....\n",
      "Done.\n",
      "Searching for \"Let's Get Away\" by T.I....\n",
      "Done.\n",
      "Searching for \"24's\" by T.I....\n",
      "Done.\n",
      "Searching for \"Rubber Band Man\" by T.I....\n",
      "Done.\n",
      "Searching for \"Look What I Got\" by T.I....\n",
      "Done.\n",
      "Searching for \"I Still Luv You\" by T.I....\n",
      "Done.\n",
      "Searching for \"Let Me Tell You Something\" by T.I....\n",
      "Done.\n",
      "Searching for \"T.I. vs. T.I.P.\" by T.I....\n",
      "Done.\n",
      "Searching for \"Bezzle (feat. Eightball & MJG, Bun B of UGK)\" by T.I....\n",
      "No results found for: 'Bezzle (feat. Eightball & MJG, Bun B of UGK) T.I.'\n",
      "Searching for \"King of da South\" by T.I....\n",
      "Done.\n",
      "Searching for \"Be Better Than Me\" by T.I....\n",
      "Done.\n",
      "Searching for \"Long Live Da Game\" by T.I....\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for trap muzik\n",
    "#clean to album level\n",
    "tm= df[df['album'] == 'Trap Muzik']\n",
    "tm = tm[tm['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "tm_list=[]\n",
    "for row in tm['name']:\n",
    "\n",
    "    tm_list.append(getLyric(row, 'T.I.')),\n",
    "\n",
    "tmlyrics = pd.DataFrame(tm_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "tm= tm.reset_index()\n",
    "#add lyrics\n",
    "tm['lyrics'] = tmlyrics['string_values']\n",
    "#clean\n",
    "tm=tm.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [],
   "source": [
    "tm = tm.drop([13])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [],
   "source": [
    "#joinall dataframes for ti\n",
    "ti = pd.concat([pw, king, tip, UL, tm])\n",
    "ti=ti.reset_index()\n",
    "#add region data\n",
    "region= []\n",
    "for row in ti['name']:\n",
    "    region.append('south')\n",
    "\n",
    "ti['region'] = region\n",
    "\n",
    "ti.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\tifinal.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Killer Mike\n",
    "Left off here <a name='bookmark' />\n",
    "\n",
    "Go to <a href=#bottom>bottomk</a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotify:artist:2N4EYkIlG1kv25g6Wv8LGI\n"
     ]
    }
   ],
   "source": [
    "#get next artist data\n",
    "\n",
    "results = sp.search(\"artist:Killer Mike\")\n",
    "artist_id = results['tracks']['items'][0]['artists'][0]['uri']\n",
    "print(artist_id)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://api.spotify.com/v1/artists/2N4EYkIlG1kv25g6Wv8LGI/albums?offset=50&limit=50&include_groups=album,single,compilation,appears_on&market=US\n",
      "50\n",
      "spotify:album:6FtqZFgeAT84TJDpN2qbGk\n",
      "17 \t Killer Mike Chronicles\n",
      "12 \t R.A.P. Music [Instrumentals]\n",
      "12 \t R.A.P. Music\n",
      "12 \t R.A.P. Music\n",
      "9 \t BANGx3\n",
      "31 \t Underground Atlanta\n",
      "15 \t Underground Atlanta\n",
      "17 \t I Pledge Allegiance to the Grind II\n",
      "21 \t The Killer\n",
      "1 \t ArrowThroughSkinOutOfBlueSky\n",
      "1 \t This Ecstatic Cult\n",
      "2 \t Reagan\n",
      "1 \t Big Beast (feat. Bun B, T.I., And Trouble)\n",
      "1 \t Go Out On The Town\n",
      "1 \t Ready Set Go\n",
      "1 \t Ready Set Go\n",
      "1 \t I'mma Fool Wit It\n",
      "1 \t I'mma Fool Wit It\n",
      "1 \t 2 Sides feat. Shawty Lo\n",
      "1 \t 2 Sides\n",
      "4 \t My Chrome\n",
      "1 \t My Chrome (Explicit Version)\n",
      "1 \t My Chrome (Clean Version)\n",
      "1 \t Get 'Em Shawty feat. Three 6 Mafia (Explicit Version)\n",
      "1 \t Get 'Em Shawty feat. Three 6 Mafia (Clean Version)\n",
      "1 \t Body Rock\n",
      "2 \t A.D.I.D.A.S.\n",
      "5 \t AKshon (yeah!)\n",
      "12 \t The Atlas Underground (Instrumentals)\n",
      "2 \t Doin' It\n",
      "15 \t DJ Central Groove Vol, 13\n",
      "11 \t BLUE SLIME\n",
      "12 \t The Atlas Underground (Clean)\n",
      "1 \t CHICCEN TALK\n",
      "1 \t Rabbit’s Revenge (feat. Bassnectar, Big Boi, and Killer Mike)\n",
      "9 \t Sorry To Bother You: The Soundtrack\n",
      "9 \t RVLTN (Chapter 1): The Divided States Of AmeriKKKa\n",
      "9 \t RVLTN (Chapter 1): The Divided States Of AmeriKKKa\n",
      "1 \t Polo\n",
      "17 \t Jermaine Dupri Presents... So So Def 25\n",
      "6 \t Rapture (Netflix Original TV Series)\n",
      "6 \t Rapture (Netflix Original TV Series)\n",
      "5 \t It's A Mad Love\n",
      "12 \t The Atlas Underground\n",
      "12 \t Against the Odds of Entropy (Remixes)\n",
      "9 \t WHAT UP CUZ\n",
      "1 \t No One Can Stop Us Now (feat. Prodigy, Killer Mike & Jon Connor)\n",
      "12 \t BOOMIVERSE\n",
      "12 \t BOOMIVERSE\n",
      "16 \t Saint or Sinner\n",
      "name                                 Intro\n",
      "duration_ms                         150720\n",
      "popularity                               2\n",
      "num_markets                             79\n",
      "album               Killer Mike Chronicles\n",
      "disc_number                              1\n",
      "is_explicit                           True\n",
      "track_number                             1\n",
      "release_date                    2015-03-31\n",
      "artist                         Killer Mike\n",
      "danceability                         0.499\n",
      "energy                               0.746\n",
      "key                                      7\n",
      "loudness                            -4.755\n",
      "mode                                     1\n",
      "speechiness                          0.242\n",
      "acousticness                       0.00725\n",
      "instrumentalness                  1.58e-05\n",
      "liveness                             0.354\n",
      "valence                              0.331\n",
      "tempo                              139.652\n",
      "time_signature                           4\n",
      "Name: 0, dtype: object\n"
     ]
    }
   ],
   "source": [
    "\n",
    "#get album details\n",
    "albums = sp.artist_albums('2N4EYkIlG1kv25g6Wv8LGI', country=\"US\", limit=50)\n",
    "print(albums['next'])\n",
    "\n",
    "#collect album details and print\n",
    "album_ids = [album['uri'] for album in albums['items']]\n",
    "print(len(album_ids))\n",
    "print(album_ids[0])\n",
    "\n",
    "all_tracks = []\n",
    "for album_id in album_ids:\n",
    "    tracks = sp.album_tracks(album_id, limit=50)\n",
    "    all_tracks.append(tracks)\n",
    "    \n",
    "for tracks, album in zip(all_tracks, albums.get('items')):\n",
    "    print(\n",
    "        len(tracks.get('items')),\n",
    "        \"\\t\",\n",
    "        album.get('name')\n",
    "    )\n",
    "\n",
    "#create df\n",
    "track_ids = []\n",
    "for tracks in all_tracks:\n",
    "    album_tracks = []\n",
    "    for track in tracks.get('items'):\n",
    "        album_tracks.append(track.get('uri'))\n",
    "    track_ids.append(album_tracks)\n",
    "\n",
    "\n",
    "track_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    tracks = sp.tracks(track_id_list)\n",
    "    track_objects.append(tracks)\n",
    "\n",
    "#collecting other features\n",
    "\n",
    "audio_feature_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    features = sp.audio_features(track_id_list)\n",
    "    audio_feature_objects.append(features)\n",
    "\n",
    "spotify_data = {\n",
    "    \"audio_features\": audio_feature_objects,\n",
    "    \"tracks\": track_objects\n",
    "}\n",
    "\n",
    "df = pd.DataFrame(columns=[\n",
    "    'name',\n",
    "    'duration_ms',\n",
    "    'popularity',\n",
    "    'num_markets',\n",
    "    'album',\n",
    "    'disc_number',\n",
    "    'is_explicit',\n",
    "    'track_number',\n",
    "    'release_date',\n",
    "    'artist',\n",
    "    'danceability',\n",
    "    'energy',\n",
    "    'key',\n",
    "    'loudness',\n",
    "    'mode',\n",
    "    'speechiness',\n",
    "    'acousticness',\n",
    "    'instrumentalness',\n",
    "    'liveness',\n",
    "    'valence',\n",
    "    'tempo',\n",
    "    'time_signature',\n",
    "])\n",
    "for album_info, album_features in zip(\n",
    "        spotify_data.get('tracks'), \n",
    "        spotify_data.get('audio_features')\n",
    "        ):\n",
    "    for track_info, track_features in zip(\n",
    "        album_info.get('tracks'),\n",
    "        album_features\n",
    "        ):\n",
    "        y = {\n",
    "            'name': track_info['name'],\n",
    "            'duration_ms': track_info['duration_ms'],\n",
    "            'popularity': track_info['popularity'],\n",
    "            'num_markets': len(track_info['available_markets']),\n",
    "            'album': track_info['album']['name'],\n",
    "            'disc_number': track_info['disc_number'],\n",
    "            'is_explicit': track_info['explicit'],\n",
    "            'track_number': track_info['track_number'],\n",
    "            'release_date': track_info['album']['release_date'],\n",
    "            'artist': track_info['artists'][0]['name'],\n",
    "            'danceability': track_features['danceability'],\n",
    "            'energy': track_features['energy'],\n",
    "            'key': track_features['key'],\n",
    "            'loudness': track_features['loudness'],\n",
    "            'mode': track_features['mode'],\n",
    "            'speechiness': track_features['speechiness'],\n",
    "            'acousticness': track_features['acousticness'],\n",
    "            'instrumentalness': track_features['instrumentalness'],\n",
    "            'liveness': track_features['liveness'],\n",
    "            'valence': track_features['valence'],\n",
    "            'tempo': track_features['tempo'],\n",
    "            'time_signature': track_features['time_signature'],\n",
    "        }\n",
    "        df = df.append(y, ignore_index=True)\n",
    "print(df.iloc[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Big Beast (feat. Bun B, T.I., and Trouble)\" by Killer Mike...\n",
      "Done.\n",
      "Searching for \"Untitled (feat. Scar)\" by Killer Mike...\n",
      "Done.\n",
      "Searching for \"Go!\" by Killer Mike...\n",
      "Done.\n",
      "Searching for \"Southern Fried\" by Killer Mike...\n",
      "Done.\n",
      "Searching for \"JoJo's Chillin\" by Killer Mike...\n",
      "Done.\n",
      "Searching for \"Reagan\" by Killer Mike...\n",
      "Done.\n",
      "Searching for \"Don't Die\" by Killer Mike...\n",
      "Done.\n",
      "Searching for \"Ghetto Gospel\" by Killer Mike...\n",
      "Done.\n",
      "Searching for \"Butane (Champion's Anthem) [feat. El-P]\" by Killer Mike...\n",
      "Done.\n",
      "Searching for \"Anywhere But Here (feat. Emily Panic)\" by Killer Mike...\n",
      "Done.\n",
      "Searching for \"Willie Burke Sherwood\" by Killer Mike...\n",
      "Done.\n",
      "Searching for \"R.A.P. Music\" by Killer Mike...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for rapmuzik\n",
    "#clean to album level\n",
    "rm= df[df['album'] == 'R.A.P. Music']\n",
    "rm = rm[rm['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "rm_list=[]\n",
    "for row in rm['name']:\n",
    "\n",
    "    rm_list.append(getLyric(row, 'Killer Mike')),\n",
    "\n",
    "rmlyrics = pd.DataFrame(rm_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "rm= rm.reset_index()\n",
    "#add lyrics\n",
    "rm['lyrics'] = rmlyrics['string_values']\n",
    "#clean\n",
    "rm=rm.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [],
   "source": [
    "#joinall dataframes for killer mike\n",
    "killermike = pd.concat([rm, ])\n",
    "killermike=killermike.reset_index()\n",
    "#add region data\n",
    "region= []\n",
    "for row in killermike['name']:\n",
    "    region.append('south')\n",
    "\n",
    "killermike['region'] = region\n",
    "\n",
    "killermike.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\killermikefinal.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Mac Miller\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotify:artist:4LLpKhyESsyAXpc4laK94U\n"
     ]
    }
   ],
   "source": [
    "#get next artist data\n",
    "\n",
    "results = sp.search(\"artist:Mac Miller\")\n",
    "artist_id = results['tracks']['items'][0]['artists'][0]['uri']\n",
    "print(artist_id)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://api.spotify.com/v1/artists/4LLpKhyESsyAXpc4laK94U/albums?offset=50&limit=50&include_groups=album,single,compilation,appears_on&market=US\n",
      "50\n",
      "spotify:album:5wtE5aLX5r7jOosmPhJhhk\n",
      "13 \t Swimming\n",
      "10 \t The Divine Feminine\n",
      "10 \t The Divine Feminine\n",
      "16 \t Best Day Ever (5th Anniversary Remastered Edition)\n",
      "16 \t Best Day Ever (5th Anniversary Remastered Edition)\n",
      "17 \t GO:OD AM\n",
      "17 \t GO:OD AM\n",
      "14 \t Live From Space\n",
      "19 \t Watching Movies with the Sound Off (Deluxe Edition)\n",
      "16 \t Watching Movies with the Sound Off\n",
      "17 \t Macadelic (Remastered Edition)\n",
      "32 \t Blue Slide Park (Commentary Version)\n",
      "16 \t Blue Slide Park\n",
      "16 \t Blue Slide Park (Edited Version)\n",
      "2 \t Spotify Singles\n",
      "1 \t What's the Use?\n",
      "1 \t Self Care\n",
      "1 \t Small Worlds\n",
      "1 \t Small Worlds\n",
      "1 \t Buttons\n",
      "1 \t Buttons\n",
      "1 \t Programs\n",
      "1 \t Programs\n",
      "1 \t Dang! (feat. Anderson .Paak) [Radio Edit]\n",
      "1 \t 100 Grandkids (Short Radio Edit)\n",
      "1 \t Clubhouse\n",
      "1 \t Break The Law\n",
      "1 \t 100 Grandkids\n",
      "1 \t Watching Movies\n",
      "1 \t S.D.S.\n",
      "1 \t Lucky Ass Bitch\n",
      "1 \t Loud\n",
      "2 \t Party On Fifth Ave. - Single\n",
      "2 \t Frick Park Market - Single\n",
      "2 \t Donald Trump - Single\n",
      "6 \t On And On And Beyond\n",
      "1 \t Senior Skip Day\n",
      "1 \t Kool Aid and Frozen Pizza\n",
      "1 \t Kool Aid and Frozen Pizza\n",
      "1 \t Nike's on My Feet\n",
      "1 \t Knock Knock - Single\n",
      "13 \t Battered Bruised & Bloody\n",
      "1 \t Learn How to Watch (feat. Mac Miller & MadeinTYO)\n",
      "16 \t The Last Eleven Years \" Part 1 \"\n",
      "22 \t The Big Brother\n",
      "22 \t The Big Brother\n",
      "14 \t Marvelous Adventures, Vol. 2 (Instrumental)\n",
      "1 \t Cold Summer (feat. Kendrick Lamar, Mac Miller, Kevin Gates & Rell)\n",
      "11 \t Triumph\n",
      "16 \t Do What Thou Wilt.\n",
      "name                Come Back to Earth\n",
      "duration_ms                     161840\n",
      "popularity                          72\n",
      "num_markets                         78\n",
      "album                         Swimming\n",
      "disc_number                          1\n",
      "is_explicit                      False\n",
      "track_number                         1\n",
      "release_date                2018-08-03\n",
      "artist                      Mac Miller\n",
      "danceability                     0.272\n",
      "energy                           0.238\n",
      "key                                  2\n",
      "loudness                       -12.148\n",
      "mode                                 0\n",
      "speechiness                     0.0349\n",
      "acousticness                      0.89\n",
      "instrumentalness               0.00925\n",
      "liveness                         0.275\n",
      "valence                          0.119\n",
      "tempo                           83.507\n",
      "time_signature                       4\n",
      "Name: 0, dtype: object\n"
     ]
    }
   ],
   "source": [
    "\n",
    "#get album details\n",
    "albums = sp.artist_albums('4LLpKhyESsyAXpc4laK94U', country=\"US\", limit=50)\n",
    "print(albums['next'])\n",
    "\n",
    "#collect album details and print\n",
    "album_ids = [album['uri'] for album in albums['items']]\n",
    "print(len(album_ids))\n",
    "print(album_ids[0])\n",
    "\n",
    "all_tracks = []\n",
    "for album_id in album_ids:\n",
    "    tracks = sp.album_tracks(album_id, limit=50)\n",
    "    all_tracks.append(tracks)\n",
    "    \n",
    "for tracks, album in zip(all_tracks, albums.get('items')):\n",
    "    print(\n",
    "        len(tracks.get('items')),\n",
    "        \"\\t\",\n",
    "        album.get('name')\n",
    "    )\n",
    "\n",
    "#create df\n",
    "track_ids = []\n",
    "for tracks in all_tracks:\n",
    "    album_tracks = []\n",
    "    for track in tracks.get('items'):\n",
    "        album_tracks.append(track.get('uri'))\n",
    "    track_ids.append(album_tracks)\n",
    "\n",
    "\n",
    "track_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    tracks = sp.tracks(track_id_list)\n",
    "    track_objects.append(tracks)\n",
    "\n",
    "#collecting other features\n",
    "\n",
    "audio_feature_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    features = sp.audio_features(track_id_list)\n",
    "    audio_feature_objects.append(features)\n",
    "\n",
    "spotify_data = {\n",
    "    \"audio_features\": audio_feature_objects,\n",
    "    \"tracks\": track_objects\n",
    "}\n",
    "\n",
    "df = pd.DataFrame(columns=[\n",
    "    'name',\n",
    "    'duration_ms',\n",
    "    'popularity',\n",
    "    'num_markets',\n",
    "    'album',\n",
    "    'disc_number',\n",
    "    'is_explicit',\n",
    "    'track_number',\n",
    "    'release_date',\n",
    "    'artist',\n",
    "    'danceability',\n",
    "    'energy',\n",
    "    'key',\n",
    "    'loudness',\n",
    "    'mode',\n",
    "    'speechiness',\n",
    "    'acousticness',\n",
    "    'instrumentalness',\n",
    "    'liveness',\n",
    "    'valence',\n",
    "    'tempo',\n",
    "    'time_signature',\n",
    "])\n",
    "for album_info, album_features in zip(\n",
    "        spotify_data.get('tracks'), \n",
    "        spotify_data.get('audio_features')\n",
    "        ):\n",
    "    for track_info, track_features in zip(\n",
    "        album_info.get('tracks'),\n",
    "        album_features\n",
    "        ):\n",
    "        y = {\n",
    "            'name': track_info['name'],\n",
    "            'duration_ms': track_info['duration_ms'],\n",
    "            'popularity': track_info['popularity'],\n",
    "            'num_markets': len(track_info['available_markets']),\n",
    "            'album': track_info['album']['name'],\n",
    "            'disc_number': track_info['disc_number'],\n",
    "            'is_explicit': track_info['explicit'],\n",
    "            'track_number': track_info['track_number'],\n",
    "            'release_date': track_info['album']['release_date'],\n",
    "            'artist': track_info['artists'][0]['name'],\n",
    "            'danceability': track_features['danceability'],\n",
    "            'energy': track_features['energy'],\n",
    "            'key': track_features['key'],\n",
    "            'loudness': track_features['loudness'],\n",
    "            'mode': track_features['mode'],\n",
    "            'speechiness': track_features['speechiness'],\n",
    "            'acousticness': track_features['acousticness'],\n",
    "            'instrumentalness': track_features['instrumentalness'],\n",
    "            'liveness': track_features['liveness'],\n",
    "            'valence': track_features['valence'],\n",
    "            'tempo': track_features['tempo'],\n",
    "            'time_signature': track_features['time_signature'],\n",
    "        }\n",
    "        df = df.append(y, ignore_index=True)\n",
    "print(df.iloc[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0                                               Swimming\n",
      "1                                               Swimming\n",
      "2                                               Swimming\n",
      "3                                               Swimming\n",
      "4                                               Swimming\n",
      "5                                               Swimming\n",
      "6                                               Swimming\n",
      "7                                               Swimming\n",
      "8                                               Swimming\n",
      "9                                               Swimming\n",
      "10                                              Swimming\n",
      "11                                              Swimming\n",
      "12                                              Swimming\n",
      "13                                   The Divine Feminine\n",
      "14                                   The Divine Feminine\n",
      "15                                   The Divine Feminine\n",
      "16                                   The Divine Feminine\n",
      "17                                   The Divine Feminine\n",
      "18                                   The Divine Feminine\n",
      "19                                   The Divine Feminine\n",
      "20                                   The Divine Feminine\n",
      "21                                   The Divine Feminine\n",
      "22                                   The Divine Feminine\n",
      "23                                   The Divine Feminine\n",
      "24                                   The Divine Feminine\n",
      "25                                   The Divine Feminine\n",
      "26                                   The Divine Feminine\n",
      "27                                   The Divine Feminine\n",
      "28                                   The Divine Feminine\n",
      "29                                   The Divine Feminine\n",
      "                             ...                        \n",
      "351          Marvelous Adventures, Vol. 2 (Instrumental)\n",
      "352          Marvelous Adventures, Vol. 2 (Instrumental)\n",
      "353    Cold Summer (feat. Kendrick Lamar, Mac Miller,...\n",
      "354                                              Triumph\n",
      "355                                              Triumph\n",
      "356                                              Triumph\n",
      "357                                              Triumph\n",
      "358                                              Triumph\n",
      "359                                              Triumph\n",
      "360                                              Triumph\n",
      "361                                              Triumph\n",
      "362                                              Triumph\n",
      "363                                              Triumph\n",
      "364                                              Triumph\n",
      "365                                   Do What Thou Wilt.\n",
      "366                                   Do What Thou Wilt.\n",
      "367                                   Do What Thou Wilt.\n",
      "368                                   Do What Thou Wilt.\n",
      "369                                   Do What Thou Wilt.\n",
      "370                                   Do What Thou Wilt.\n",
      "371                                   Do What Thou Wilt.\n",
      "372                                   Do What Thou Wilt.\n",
      "373                                   Do What Thou Wilt.\n",
      "374                                   Do What Thou Wilt.\n",
      "375                                   Do What Thou Wilt.\n",
      "376                                   Do What Thou Wilt.\n",
      "377                                   Do What Thou Wilt.\n",
      "378                                   Do What Thou Wilt.\n",
      "379                                   Do What Thou Wilt.\n",
      "380                                   Do What Thou Wilt.\n",
      "Name: album, Length: 381, dtype: object\n"
     ]
    }
   ],
   "source": [
    "print(df['album'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Best Day Ever\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Get Up\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Donald Trump\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Oy Vey\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"I'll Be There\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Wear My Hat\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Wake Up\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"All Around The World\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Down The Rabbit Hole\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"In The Air\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Play Ya Cards\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"She Said\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Life Ain't Easy\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Snooze\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Keep Floatin'\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"BDE Bonus\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Best Day Ever\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Get Up\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Donald Trump\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Oy Vey\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"I'll Be There\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Wear My Hat\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Wake Up\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"All Around the World\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Down the Rabbit Hole\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"In the Air\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Play Ya Cards\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"She Said\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Life Ain't Easy\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Snooze\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Keep Floatin'\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"BDE Bonus\" by Mac Miller...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for bde\n",
    "#clean to album level\n",
    "bde= df[df['album'] == 'Best Day Ever (5th Anniversary Remastered Edition)']\n",
    "bde = bde[bde['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "bde_list=[]\n",
    "for row in bde['name']:\n",
    "\n",
    "    bde_list.append(getLyric(row, 'Mac Miller')),\n",
    "\n",
    "bdelyrics = pd.DataFrame(bde_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "bde= bde.reset_index()\n",
    "#add lyrics\n",
    "bde['lyrics'] = bdelyrics['string_values']\n",
    "#clean\n",
    "bde=bde.drop('index', 1)\n",
    "bde = bde.drop([16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31])\n",
    "print(bde)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Hurt Feelings\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"What's the Use?\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Perfecto\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Self Care\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Wings\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Ladders\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Small Worlds\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Conversation Pt. 1\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Dunno\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Jet Fuel\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"2009\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"So It Goes\" by Mac Miller...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for swimming\n",
    "#clean to album level\n",
    "swm= df[df['album'] == 'Swimming']\n",
    "swm = swm[swm['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "swm_list=[]\n",
    "for row in swm['name']:\n",
    "\n",
    "    swm_list.append(getLyric(row, 'Mac Miller')),\n",
    "\n",
    "swmlyrics = pd.DataFrame(swm_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "swm= swm.reset_index()\n",
    "#add lyrics\n",
    "swm['lyrics'] = swmlyrics['string_values']\n",
    "#clean\n",
    "swm=swm.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"English Lane\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Blue Slide Park\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Party On Fifth Ave.\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"PA Nights\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Frick Park Market\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Smile Back\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Under The Weather\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Of The Soul\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"My Team\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Up All Night\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Loitering\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Hole In My Pocket\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Diamonds & Gold\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Missed Calls\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Man In The Hat\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"One Last Thing\" by Mac Miller...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for bsp\n",
    "#clean to album level\n",
    "bsp= df[df['album'] == 'Blue Slide Park']\n",
    "bsp = bsp[bsp['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "bsp_list=[]\n",
    "for row in bsp['name']:\n",
    "\n",
    "    bsp_list.append(getLyric(row, 'Mac Miller')),\n",
    "\n",
    "bsplyrics = pd.DataFrame(bsp_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "bsp= bsp.reset_index()\n",
    "#add lyrics\n",
    "bsp['lyrics'] = bsplyrics['string_values']\n",
    "#clean\n",
    "bsp=bsp.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Doors\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Brand Name\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Rush Hour\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Two Matches (feat. Ab-Soul)\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"100 Grandkids\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Time Flies (feat. Lil B)\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Weekend (feat. Miguel)\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Clubhouse\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"In the Bag\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Break the Law\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Perfect Circle / God Speed\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"When in Rome\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"ROS\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Cut the Check (feat. Chief Keef)\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Ascension\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Jump\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"The Festival (feat. Little Dragon)\" by Mac Miller...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for kids\n",
    "#clean to album level\n",
    "faces= df[df['album'] == 'GO:OD AM']\n",
    "faces = faces[faces['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "faces_list=[]\n",
    "for row in faces['name']:\n",
    "\n",
    "    faces_list.append(getLyric(row, 'Mac Miller')),\n",
    "\n",
    "faceslyrics = pd.DataFrame(faces_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "faces= faces.reset_index()\n",
    "#add lyrics\n",
    "faces['lyrics'] = faceslyrics['string_values']\n",
    "#clean\n",
    "faces=faces.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "name                Congratulations (feat. Bilal)\n",
      "duration_ms                                256426\n",
      "popularity                                     58\n",
      "num_markets                                    78\n",
      "album                         The Divine Feminine\n",
      "disc_number                                     1\n",
      "is_explicit                                  True\n",
      "track_number                                    1\n",
      "release_date                           2016-09-16\n",
      "artist                                 Mac Miller\n",
      "danceability                                0.465\n",
      "energy                                      0.225\n",
      "key                                             4\n",
      "loudness                                  -12.637\n",
      "mode                                            0\n",
      "speechiness                                0.0455\n",
      "acousticness                                0.948\n",
      "instrumentalness                          0.00155\n",
      "liveness                                     0.18\n",
      "valence                                     0.207\n",
      "tempo                                       57.75\n",
      "time_signature                                  4\n",
      "Name: 13, dtype: object\n"
     ]
    }
   ],
   "source": [
    "print(df.iloc[13])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Congratulations (feat. Bilal)\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Dang! (feat. Anderson .Paak)\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Stay\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Skin\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Cinderella (feat. Ty Dolla $ign)\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"Planet God Damn (feat. Njomza)\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"We (feat. CeeLo Green)\" by Mac Miller...\n",
      "Done.\n",
      "Searching for \"God Is Fair, Sexy Nasty (feat. Kendrick Lamar)\" by Mac Miller...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for devinefem\n",
    "#clean to album level\n",
    "tdf= df.iloc[13:32]\n",
    "tdf = tdf[tdf['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "tdf_list=[]\n",
    "for row in tdf['name']:\n",
    "\n",
    "    tdf_list.append(getLyric(row, 'Mac Miller')),\n",
    "\n",
    "tdflyrics = pd.DataFrame(tdf_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "tdf= tdf.reset_index()\n",
    "#add lyrics\n",
    "tdf['lyrics'] = tdflyrics['string_values']\n",
    "#clean\n",
    "tdf=tdf.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "metadata": {},
   "outputs": [],
   "source": [
    "#joinall dataframes for macmiller\n",
    "macmiller = pd.concat([bde,swm,bsp, faces, tdf])\n",
    "macmiller=macmiller.reset_index()\n",
    "#add region data\n",
    "region= []\n",
    "for row in macmiller['name']:\n",
    "    region.append('eastcoast')\n",
    "\n",
    "macmiller['region'] = region\n",
    "\n",
    "macmiller.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\macmillerfinal.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---------------------------------------------------------------------------------------------------------------------------------------"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# notorious\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotify:artist:5me0Irg2ANcsgc93uaYrpb\n"
     ]
    }
   ],
   "source": [
    "#get next artist data\n",
    "\n",
    "results = sp.search(\"artist:The Notorious B.I.G.\")\n",
    "artist_id = results['tracks']['items'][0]['artists'][0]['uri']\n",
    "print(artist_id)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://api.spotify.com/v1/artists/5me0Irg2ANcsgc93uaYrpb/albums?offset=50&limit=50&include_groups=album,single,compilation,appears_on&market=US\n",
      "50\n",
      "spotify:album:3Ezv8bXs9vS908aaKdWrQ3\n",
      "25 \t The King & I\n",
      "25 \t The King & I\n",
      "22 \t Duets: The Final Chapter\n",
      "22 \t Duets: The Final Chapter\n",
      "18 \t Born Again\n",
      "24 \t Life After Death (Remastered Edition)\n",
      "14 \t Life After Death (Remastered Edition) [Amended]\n",
      "19 \t Ready To Die The Remaster\n",
      "18 \t Ready To Die The Remaster\n",
      "19 \t Ready To Die The Remaster\n",
      "1 \t Party On The West Coast (feat. Snoop Dogg)\n",
      "2 \t Old Thing Back (feat. Ja Rule and Ralph Tresvant)\n",
      "2 \t Spit Your Game\n",
      "4 \t Hypnotize\n",
      "8 \t Mo Money Mo Problems\n",
      "5 \t Big Poppa\n",
      "7 \t One More Chance\n",
      "6 \t Juicy / Unbelievable\n",
      "4 \t Who Shot Ya? / Warning\n",
      "17 \t Greatest Hits (Explicit Version)\n",
      "17 \t Greatest Hits\n",
      "14 \t Heir To The Throne - Smooth Edition\n",
      "15 \t Heir To The Throne 2\n",
      "17 \t Jermaine Dupri Presents... So So Def 25\n",
      "26 \t R'N'B Men\n",
      "25 \t New School Rap\n",
      "2 \t So So Def 25: From the Vault\n",
      "23 \t 90s Rap\n",
      "10 \t Lost In The 90's Pt 1\n",
      "1 \t P.YP. (feat. The Notorious B.I.G. & Voice)\n",
      "4 \t Smoke\n",
      "4 \t Smoke\n",
      "11 \t Volume 1\n",
      "1 \t Lost My Mind\n",
      "1 \t Lost My Mind\n",
      "20 \t 90's The Collection\n",
      "26 \t 1996\n",
      "30 \t Play - Hip Hop\n",
      "25 \t Hip Hop Heroes\n",
      "25 \t 90's Party Anthems\n",
      "34 \t Hip Hop\n",
      "25 \t 90's Party Anthems\n",
      "50 \t Bad Boy 20th Anniversary Box Set Edition\n",
      "50 \t Bad Boy 20th Anniversary Box Set Edition\n",
      "17 \t Legendary Classics, Vol. 1\n",
      "21 \t The Battle Of Armageddon\n",
      "21 \t So Icy Boy 2\n",
      "20 \t Back To School Classics\n",
      "25 \t Hip Hop Fundamentals\n",
      "14 \t Southpaw (Music From And Inspired By The Motion Picture)\n",
      "name                   A Billion\n",
      "duration_ms                60133\n",
      "popularity                    38\n",
      "num_markets                   69\n",
      "album               The King & I\n",
      "disc_number                    1\n",
      "is_explicit                False\n",
      "track_number                   1\n",
      "release_date          2017-05-19\n",
      "artist               Faith Evans\n",
      "danceability               0.306\n",
      "energy                     0.396\n",
      "key                            3\n",
      "loudness                  -8.693\n",
      "mode                           0\n",
      "speechiness               0.0307\n",
      "acousticness               0.675\n",
      "instrumentalness               0\n",
      "liveness                   0.232\n",
      "valence                    0.308\n",
      "tempo                     34.498\n",
      "time_signature                 3\n",
      "Name: 0, dtype: object\n"
     ]
    }
   ],
   "source": [
    "\n",
    "#get album details\n",
    "albums = sp.artist_albums('5me0Irg2ANcsgc93uaYrpb', country=\"US\", limit=50)\n",
    "print(albums['next'])\n",
    "\n",
    "#collect album details and print\n",
    "album_ids = [album['uri'] for album in albums['items']]\n",
    "print(len(album_ids))\n",
    "print(album_ids[0])\n",
    "\n",
    "all_tracks = []\n",
    "for album_id in album_ids:\n",
    "    tracks = sp.album_tracks(album_id, limit=50)\n",
    "    all_tracks.append(tracks)\n",
    "    \n",
    "for tracks, album in zip(all_tracks, albums.get('items')):\n",
    "    print(\n",
    "        len(tracks.get('items')),\n",
    "        \"\\t\",\n",
    "        album.get('name')\n",
    "    )\n",
    "\n",
    "#create df\n",
    "track_ids = []\n",
    "for tracks in all_tracks:\n",
    "    album_tracks = []\n",
    "    for track in tracks.get('items'):\n",
    "        album_tracks.append(track.get('uri'))\n",
    "    track_ids.append(album_tracks)\n",
    "\n",
    "\n",
    "track_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    tracks = sp.tracks(track_id_list)\n",
    "    track_objects.append(tracks)\n",
    "\n",
    "#collecting other features\n",
    "\n",
    "audio_feature_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    features = sp.audio_features(track_id_list)\n",
    "    audio_feature_objects.append(features)\n",
    "\n",
    "spotify_data = {\n",
    "    \"audio_features\": audio_feature_objects,\n",
    "    \"tracks\": track_objects\n",
    "}\n",
    "\n",
    "df = pd.DataFrame(columns=[\n",
    "    'name',\n",
    "    'duration_ms',\n",
    "    'popularity',\n",
    "    'num_markets',\n",
    "    'album',\n",
    "    'disc_number',\n",
    "    'is_explicit',\n",
    "    'track_number',\n",
    "    'release_date',\n",
    "    'artist',\n",
    "    'danceability',\n",
    "    'energy',\n",
    "    'key',\n",
    "    'loudness',\n",
    "    'mode',\n",
    "    'speechiness',\n",
    "    'acousticness',\n",
    "    'instrumentalness',\n",
    "    'liveness',\n",
    "    'valence',\n",
    "    'tempo',\n",
    "    'time_signature',\n",
    "])\n",
    "for album_info, album_features in zip(\n",
    "        spotify_data.get('tracks'), \n",
    "        spotify_data.get('audio_features')\n",
    "        ):\n",
    "    for track_info, track_features in zip(\n",
    "        album_info.get('tracks'),\n",
    "        album_features\n",
    "        ):\n",
    "        y = {\n",
    "            'name': track_info['name'],\n",
    "            'duration_ms': track_info['duration_ms'],\n",
    "            'popularity': track_info['popularity'],\n",
    "            'num_markets': len(track_info['available_markets']),\n",
    "            'album': track_info['album']['name'],\n",
    "            'disc_number': track_info['disc_number'],\n",
    "            'is_explicit': track_info['explicit'],\n",
    "            'track_number': track_info['track_number'],\n",
    "            'release_date': track_info['album']['release_date'],\n",
    "            'artist': track_info['artists'][0]['name'],\n",
    "            'danceability': track_features['danceability'],\n",
    "            'energy': track_features['energy'],\n",
    "            'key': track_features['key'],\n",
    "            'loudness': track_features['loudness'],\n",
    "            'mode': track_features['mode'],\n",
    "            'speechiness': track_features['speechiness'],\n",
    "            'acousticness': track_features['acousticness'],\n",
    "            'instrumentalness': track_features['instrumentalness'],\n",
    "            'liveness': track_features['liveness'],\n",
    "            'valence': track_features['valence'],\n",
    "            'tempo': track_features['tempo'],\n",
    "            'time_signature': track_features['time_signature'],\n",
    "        }\n",
    "        df = df.append(y, ignore_index=True)\n",
    "print(df.iloc[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Intro\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Things Done Changed\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Gimme the Loot\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Machine Gun Funk\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Warning\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Ready to Die\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"One More Chance\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"#!*@ Me - Interlude\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"The What\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Juicy\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Everyday Struggle\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Me and My Bitch\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Big Poppa\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Respect\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Friend of Mine\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Unbelievable\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Suicidal Thoughts\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Who Shot Ya\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Just Playing (Dreams)\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Intro\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Things Done Changed\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Gimme the Loot\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Machine Gun Funk\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Warning\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Ready to Die\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"One More Chance\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"#!*@ Me - Interlude\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Juicy\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Everyday Struggle\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Me and My Bitch\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Big Poppa\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Respect\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Friend of Mine\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Unbelievable\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Suicidal Thoughts\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Who Shot Ya\" by The Notorious B.I.G....\n",
      "Done.\n",
      "Searching for \"Just Playing (Dreams)\" by The Notorious B.I.G....\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for rtd\n",
    "#clean to album level\n",
    "rtd= df[df['album'] == 'Ready To Die The Remaster']\n",
    "rtd = rtd[rtd['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "rtd_list=[]\n",
    "for row in rtd['name']:\n",
    "\n",
    "    rtd_list.append(getLyric(row, 'The Notorious B.I.G.')),\n",
    "\n",
    "rtdlyrics = pd.DataFrame(rtd_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "rtd= rtd.reset_index()\n",
    "#add lyrics\n",
    "rtd['lyrics'] = rtdlyrics['string_values']\n",
    "#clean\n",
    "rtd=rtd.drop('index', 1)\n",
    "rtd= rtd.drop([19, 20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Life After Death (Intro) - 2014 Remaster\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"Somebody's Gotta Die - 2014 Remaster\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"Hypnotize - 2014 Remaster\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"Kick in the Door - 2014 Remaster\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"#!*@ You Tonight (feat. R. Kelly) - 2014 Remaster\" by The Nototious B.I.G....\n",
      "No results found for: '#!*@ You Tonight (feat. R. Kelly) - 2014 Remaster The Nototious B.I.G.'\n",
      "Searching for \"Last Day (feat. The Lox) - 2014 Remaster\" by The Nototious B.I.G....\n",
      "No results found for: 'Last Day (feat. The Lox) - 2014 Remaster The Nototious B.I.G.'\n",
      "Searching for \"I Love the Dough (feat. Jay-Z & Angela Winbush) - 2014 Remaster\" by The Nototious B.I.G....\n",
      "No results found for: 'I Love the Dough (feat. Jay-Z & Angela Winbush) - 2014 Remaster The Nototious B.I.G.'\n",
      "Searching for \"What's Beef - 2014 Remaster\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"B.I.G. (Interlude) - 2014 Remaster\" by The Nototious B.I.G....\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Mo Money Mo Problems (feat. Mase & Puff Daddy) - 2014 Remaster\" by The Nototious B.I.G....\n",
      "No results found for: 'Mo Money Mo Problems (feat. Mase & Puff Daddy) - 2014 Remaster The Nototious B.I.G.'\n",
      "Searching for \"Niggas Bleed - 2014 Remaster\" by The Nototious B.I.G....\n",
      "No results found for: 'Niggas Bleed - 2014 Remaster The Nototious B.I.G.'\n",
      "Searching for \"I Got a Story to Tell - 2014 Remaster\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"Notorious Thugs - 2014 Remaster\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"Miss U - 2014 Remaster\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"Another (feat. Lil' Kim) - 2014 Remaster\" by The Nototious B.I.G....\n",
      "No results found for: 'Another (feat. Lil' Kim) - 2014 Remaster The Nototious B.I.G.'\n",
      "Searching for \"Going Back to Cali - 2014 Remaster\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"Ten Crack Commandments - 2014 Remaster\" by The Nototious B.I.G....\n",
      "No results found for: 'Ten Crack Commandments - 2014 Remaster The Nototious B.I.G.'\n",
      "Searching for \"Playa Hater - 2014 Remaster\" by The Nototious B.I.G....\n",
      "No results found for: 'Playa Hater - 2014 Remaster The Nototious B.I.G.'\n",
      "Searching for \"Nasty Boy - 2014 Remaster\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"Sky's the Limit (feat. 112) - 2014 Remaster\" by The Nototious B.I.G....\n",
      "No results found for: 'Sky's the Limit (feat. 112) - 2014 Remaster The Nototious B.I.G.'\n",
      "Searching for \"The World Is Filled... (feat. Too Short & Puff Daddy) - 2014 Remaster\" by The Nototious B.I.G....\n",
      "No results found for: 'The World Is Filled... (feat. Too Short & Puff Daddy) - 2014 Remaster The Nototious B.I.G.'\n",
      "Searching for \"My Downfall (feat. DMC) - 2014 Remaster\" by The Nototious B.I.G....\n",
      "No results found for: 'My Downfall (feat. DMC) - 2014 Remaster The Nototious B.I.G.'\n",
      "Searching for \"Long Kiss Goodnight - 2014 Remaster\" by The Nototious B.I.G....\n",
      "No results found for: 'Long Kiss Goodnight - 2014 Remaster The Nototious B.I.G.'\n",
      "Searching for \"You're Nobody (Til Somebody Kills You) - 2014 Remaster\" by The Nototious B.I.G....\n",
      "No results found for: 'You're Nobody (Til Somebody Kills You) - 2014 Remaster The Nototious B.I.G.'\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for lad\n",
    "#clean to album level\n",
    "lad= df[df['album'] == 'Life After Death (Remastered Edition)']\n",
    "lad = lad[lad['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "lad_list=[]\n",
    "for row in lad['name']:\n",
    "\n",
    "    lad_list.append(getLyric(row, 'The Nototious B.I.G.')),\n",
    "\n",
    "ladlyrics = pd.DataFrame(lad_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "lad= lad.reset_index()\n",
    "#add lyrics\n",
    "lad['lyrics'] = ladlyrics['string_values']\n",
    "#clean\n",
    "lad=lad.drop('index', 1)\n",
    "lad = lad.drop([4,5,6,8,9,10,14,16,17,19,20,21,22,23])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Born Again (Intro)\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"Notorious B.I.G. (feat. Lil' Kim & Puff Daddy)\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"Dead Wrong (feat. Eminem)\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"Hope You Niggas Sleep (feat. Hot Boys & Big Tmer)\" by The Nototious B.I.G....\n",
      "No results found for: 'Hope You Niggas Sleep (feat. Hot Boys & Big Tmer) The Nototious B.I.G.'\n",
      "Searching for \"Dangerous MC's (feat. Mark Curry, Snoop Dogg & Busta Rhymes)\" by The Nototious B.I.G....\n",
      "No results found for: 'Dangerous MC's (feat. Mark Curry, Snoop Dogg & Busta Rhymes) The Nototious B.I.G.'\n",
      "Searching for \"Biggie (feat. Junior M.A.F.I.A.)\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"Niggas\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"Big Booty Hoes (feat. Too $hort)\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"Would You Die for Me (feat. Lil' Kim & Puff Daddy)\" by The Nototious B.I.G....\n",
      "No results found for: 'Would You Die for Me (feat. Lil' Kim & Puff Daddy) The Nototious B.I.G.'\n",
      "Searching for \"Come On (feat. Sadat X)\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"Rap Phenomenon (feat. Redman & Method Man)\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"Let Me Get Down (feat. G-Dep, Craig Mack & Missy \"Misdemeanor\" Elliott)\" by The Nototious B.I.G....\n",
      "No results found for: 'Let Me Get Down (feat. G-Dep, Craig Mack & Missy \"Misdemeanor\" Elliott) The Nototious B.I.G.'\n",
      "Searching for \"Tonight (feat. Mobb Deep & Joe Hooker)\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"If I Should Die Before I Wake (feat. Black Rob, Ice Cube, & Beanie Sigel)\" by The Nototious B.I.G....\n",
      "No results found for: 'If I Should Die Before I Wake (feat. Black Rob, Ice Cube, & Beanie Sigel) The Nototious B.I.G.'\n",
      "Searching for \"Who Shot Ya\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"Can I Get Witcha (feat. Lil' Cease)\" by The Nototious B.I.G....\n",
      "Done.\n",
      "Searching for \"I Really Want to Show You (feat. K-CI & Jo-Jo & Nas)\" by The Nototious B.I.G....\n",
      "No results found for: 'I Really Want to Show You (feat. K-CI & Jo-Jo & Nas) The Nototious B.I.G.'\n",
      "Searching for \"Ms. Wallace (Outro)\" by The Nototious B.I.G....\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for born\n",
    "#clean to album level\n",
    "born= df[df['album'] == 'Born Again']\n",
    "born = born[born['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "born_list=[]\n",
    "for row in born['name']:\n",
    "\n",
    "    born_list.append(getLyric(row, 'The Nototious B.I.G.')),\n",
    "\n",
    "bornlyrics = pd.DataFrame(born_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "born= born.reset_index()\n",
    "#add lyrics\n",
    "born['lyrics'] = bornlyrics['string_values']\n",
    "#clean\n",
    "born=born.drop('index', 1)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "metadata": {},
   "outputs": [],
   "source": [
    "#joinall dataframes for macmiller\n",
    "notorious = pd.concat([rtd,lad, born ])\n",
    "notorious=notorious.reset_index()\n",
    "#add region data\n",
    "region= []\n",
    "for row in notorious['name']:\n",
    "    region.append('eastcoast')\n",
    "\n",
    "notorious['region'] = region\n",
    "\n",
    "notorious.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\notoriousfinal.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---------------------------------------------------------------------------------------------------------------------------------------"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# eminem\n",
    "Go to <a href=#bookmark>my bookmark</a>\n",
    "\n",
    "Bottom <a name='bottom' />"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotify:artist:7dGJo4pcD2V6oG8kP0tJRR\n"
     ]
    }
   ],
   "source": [
    "#get next artist data\n",
    "\n",
    "results = sp.search(\"artist:Eminem\")\n",
    "artist_id = results['tracks']['items'][0]['artists'][0]['uri']\n",
    "print(artist_id)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://api.spotify.com/v1/artists/7dGJo4pcD2V6oG8kP0tJRR/albums?offset=50&limit=50&include_groups=album,single,compilation,appears_on&market=US\n",
      "50\n",
      "spotify:album:3HNnxK7NgLXbDoxRZxNWiR\n",
      "13 \t Kamikaze\n",
      "13 \t Kamikaze\n",
      "19 \t Revival\n",
      "19 \t Revival\n",
      "19 \t Revival\n",
      "19 \t Revival\n",
      "21 \t The Marshall Mathers LP2 (Deluxe)\n",
      "16 \t The Marshall Mathers LP2\n",
      "21 \t The Marshall Mathers LP2\n",
      "16 \t The Marshall Mathers LP2\n",
      "17 \t Recovery\n",
      "17 \t Recovery\n",
      "29 \t Relapse: Refill\n",
      "27 \t Relapse: Refill\n",
      "20 \t Relapse\n",
      "20 \t Relapse\n",
      "22 \t Relapse [Deluxe]\n",
      "23 \t Encore\n",
      "20 \t Encore\n",
      "20 \t Encore\n",
      "23 \t Encore (Deluxe Version)\n",
      "20 \t The Eminem Show\n",
      "20 \t The Eminem Show (Edited Version)\n",
      "19 \t The Eminem Show\n",
      "18 \t The Marshall Mathers LP\n",
      "18 \t The Marshall Mathers LP\n",
      "30 \t The Slim Shady LP (Expanded Edition)\n",
      "20 \t The Slim Shady LP\n",
      "20 \t The Slim Shady LP\n",
      "1 \t Homicide\n",
      "1 \t Homicide\n",
      "1 \t Venom (Music From The Motion Picture)\n",
      "1 \t Venom (Music From The Motion Picture)\n",
      "1 \t Killshot\n",
      "1 \t Nowhere Fast (Extended Version)\n",
      "1 \t Nowhere Fast (feat. Kehlani) [Extended Version]\n",
      "1 \t Nowhere Fast (feat. Kehlani) [Extended Version]\n",
      "1 \t Chloraseptic (feat. 2 Chainz & Phresher) [Remix]\n",
      "1 \t Campaign Speech\n",
      "1 \t Guts Over Fear\n",
      "1 \t Rap God\n",
      "1 \t Rap God\n",
      "1 \t The Monster\n",
      "1 \t 3 a.m. (Travis Barker Remix)\n",
      "1 \t Jimmy Crack Corn [Cashis Vocal Mix (EX)]\n",
      "1 \t Jimmy Crack Corn\n",
      "3 \t When I'm Gone\n",
      "3 \t Mockingbird\n",
      "1 \t Just Lose It\n",
      "1 \t Mosh\n",
      "name                The Ringer\n",
      "duration_ms             337941\n",
      "popularity                  76\n",
      "num_markets                 79\n",
      "album                 Kamikaze\n",
      "disc_number                  1\n",
      "is_explicit               True\n",
      "track_number                 1\n",
      "release_date        2018-08-31\n",
      "artist                  Eminem\n",
      "danceability             0.939\n",
      "energy                   0.551\n",
      "key                          1\n",
      "loudness                -9.126\n",
      "mode                         1\n",
      "speechiness              0.291\n",
      "acousticness            0.0311\n",
      "instrumentalness             0\n",
      "liveness                 0.192\n",
      "valence                   0.42\n",
      "tempo                  118.552\n",
      "time_signature               4\n",
      "Name: 0, dtype: object\n"
     ]
    }
   ],
   "source": [
    "\n",
    "#get album details\n",
    "albums = sp.artist_albums('7dGJo4pcD2V6oG8kP0tJRR', country=\"US\", limit=50)\n",
    "print(albums['next'])\n",
    "\n",
    "#collect album details and print\n",
    "album_ids = [album['uri'] for album in albums['items']]\n",
    "print(len(album_ids))\n",
    "print(album_ids[0])\n",
    "\n",
    "all_tracks = []\n",
    "for album_id in album_ids:\n",
    "    tracks = sp.album_tracks(album_id, limit=50)\n",
    "    all_tracks.append(tracks)\n",
    "    \n",
    "for tracks, album in zip(all_tracks, albums.get('items')):\n",
    "    print(\n",
    "        len(tracks.get('items')),\n",
    "        \"\\t\",\n",
    "        album.get('name')\n",
    "    )\n",
    "\n",
    "#create df\n",
    "track_ids = []\n",
    "for tracks in all_tracks:\n",
    "    album_tracks = []\n",
    "    for track in tracks.get('items'):\n",
    "        album_tracks.append(track.get('uri'))\n",
    "    track_ids.append(album_tracks)\n",
    "\n",
    "\n",
    "track_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    tracks = sp.tracks(track_id_list)\n",
    "    track_objects.append(tracks)\n",
    "\n",
    "#collecting other features\n",
    "\n",
    "audio_feature_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    features = sp.audio_features(track_id_list)\n",
    "    audio_feature_objects.append(features)\n",
    "\n",
    "spotify_data = {\n",
    "    \"audio_features\": audio_feature_objects,\n",
    "    \"tracks\": track_objects\n",
    "}\n",
    "\n",
    "df = pd.DataFrame(columns=[\n",
    "    'name',\n",
    "    'duration_ms',\n",
    "    'popularity',\n",
    "    'num_markets',\n",
    "    'album',\n",
    "    'disc_number',\n",
    "    'is_explicit',\n",
    "    'track_number',\n",
    "    'release_date',\n",
    "    'artist',\n",
    "    'danceability',\n",
    "    'energy',\n",
    "    'key',\n",
    "    'loudness',\n",
    "    'mode',\n",
    "    'speechiness',\n",
    "    'acousticness',\n",
    "    'instrumentalness',\n",
    "    'liveness',\n",
    "    'valence',\n",
    "    'tempo',\n",
    "    'time_signature',\n",
    "])\n",
    "for album_info, album_features in zip(\n",
    "        spotify_data.get('tracks'), \n",
    "        spotify_data.get('audio_features')\n",
    "        ):\n",
    "    for track_info, track_features in zip(\n",
    "        album_info.get('tracks'),\n",
    "        album_features\n",
    "        ):\n",
    "        y = {\n",
    "            'name': track_info['name'],\n",
    "            'duration_ms': track_info['duration_ms'],\n",
    "            'popularity': track_info['popularity'],\n",
    "            'num_markets': len(track_info['available_markets']),\n",
    "            'album': track_info['album']['name'],\n",
    "            'disc_number': track_info['disc_number'],\n",
    "            'is_explicit': track_info['explicit'],\n",
    "            'track_number': track_info['track_number'],\n",
    "            'release_date': track_info['album']['release_date'],\n",
    "            'artist': track_info['artists'][0]['name'],\n",
    "            'danceability': track_features['danceability'],\n",
    "            'energy': track_features['energy'],\n",
    "            'key': track_features['key'],\n",
    "            'loudness': track_features['loudness'],\n",
    "            'mode': track_features['mode'],\n",
    "            'speechiness': track_features['speechiness'],\n",
    "            'acousticness': track_features['acousticness'],\n",
    "            'instrumentalness': track_features['instrumentalness'],\n",
    "            'liveness': track_features['liveness'],\n",
    "            'valence': track_features['valence'],\n",
    "            'tempo': track_features['tempo'],\n",
    "            'time_signature': track_features['time_signature'],\n",
    "        }\n",
    "        df = df.append(y, ignore_index=True)\n",
    "print(df.iloc[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 187,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Public Service Announcement\" by Eminem...\n",
      "Done.\n",
      "Searching for \"My Name Is\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Guilty Conscience\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Brain Damage\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Paul - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"If I Had\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Role Model\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Lounge - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"My Fault\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Ken Kaniff - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Cum On Everybody\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Rock Bottom\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Just Don't Give A Fuck\" by Eminem...\n",
      "Done.\n",
      "Searching for \"As The World Turns\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Bad Meets Evil\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Still Don't Give A Fuck\" by Eminem...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for slim shadylp\n",
    "#clean to album level\n",
    "sslp= df[df['album'] == 'The Slim Shady LP']\n",
    "sslp = sslp[sslp['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "sslp_list=[]\n",
    "for row in sslp['name']:\n",
    "\n",
    "    sslp_list.append(getLyric(row, 'Eminem')),\n",
    "\n",
    "sslplyrics = pd.DataFrame(sslp_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "sslp= sslp.reset_index()\n",
    "#add lyrics\n",
    "sslp['lyrics'] = sslplyrics['string_values']\n",
    "#clean\n",
    "sslp=sslp.drop('index', 1)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Public Service Announcement 2000\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Kill You\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Stan\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Paul - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Who Knew\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Steve Berman\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"The Way I Am\" by Eminem...\n",
      "Done.\n",
      "Searching for \"The Real Slim Shady\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Remember Me?\" by Eminem...\n",
      "Done.\n",
      "Searching for \"I'm Back\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Marshall Mathers\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Ken Kaniff - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Drug Ballad\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Amityville\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Bitch Please II\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Kim\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Under The Influence\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Criminal\" by Eminem...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for marshall mathers lp\n",
    "#clean to album level\n",
    "mmlp= df[df['album'] == 'The Marshall Mathers LP']\n",
    "mmlp = mmlp[mmlp['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "mmlp_list=[]\n",
    "for row in mmlp['name']:\n",
    "\n",
    "    mmlp_list.append(getLyric(row, 'Eminem')),\n",
    "\n",
    "mmlplyrics = pd.DataFrame(mmlp_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "mmlp= mmlp.reset_index()\n",
    "#add lyrics\n",
    "mmlp['lyrics'] = mmlplyrics['string_values']\n",
    "#clean\n",
    "mmlp=mmlp.drop('index', 1)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Curtains Up - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"White America\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Business\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Cleanin' Out My Closet\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Square Dance\" by Eminem...\n",
      "Done.\n",
      "Searching for \"The Kiss - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Soldier\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Say Goodbye Hollywood\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Drips\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Without Me\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Paul Rosenberg - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Sing For The Moment\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Superman\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Hailie's Song\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Steve Berman - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"When The Music Stops\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Say What You Say\" by Eminem...\n",
      "Done.\n",
      "Searching for \"'Till I Collapse\" by Eminem...\n",
      "Done.\n",
      "Searching for \"My Dad's Gone Crazy\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Curtains Close\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for eminemshow\n",
    "#clean to album level\n",
    "mmshow= df[df['album'] == 'The Eminem Show']\n",
    "mmshow = mmshow[mmshow['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "mmshow_list=[]\n",
    "for row in mmshow['name']:\n",
    "\n",
    "    mmshow_list.append(getLyric(row, 'Eminem')),\n",
    "\n",
    "mmshowlyrics = pd.DataFrame(mmshow_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "mmshow= mmshow.reset_index()\n",
    "#add lyrics\n",
    "mmshow['lyrics'] = mmshowlyrics['string_values']\n",
    "#clean\n",
    "mmshow=mmshow.drop('index', 1)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Curtains Up\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Evil Deeds\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Never Enough\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Yellow Brick Road\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Like Toy Soldiers\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Mosh\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Puke\" by Eminem...\n",
      "Done.\n",
      "Searching for \"My 1st Single\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Paul - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Rain Man\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Big Weenie\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Em Calls Paul - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Just Lose It\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Ass Like That\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Spend Some Time\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Mockingbird\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Crazy In Love\" by Eminem...\n",
      "Done.\n",
      "Searching for \"One Shot 2 Shot\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Final Thought - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Encore/Curtains Down\" by Eminem...\n",
      "Done.\n",
      "Searching for \"We As Americans\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Love You More\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Ricky Ticky Toc\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Curtains Up\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Evil Deeds\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Never Enough\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Yellow Brick Road\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Like Toy Soldiers\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Mosh\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Puke\" by Eminem...\n",
      "Done.\n",
      "Searching for \"My 1st Single\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Paul - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Rain Man\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Big Weenie\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Em Calls Paul - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Just Lose It\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Ass Like That\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Spend Some Time\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Mockingbird\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Crazy In Love\" by Eminem...\n",
      "Done.\n",
      "Searching for \"One Shot 2 Shot\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Final Thought - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Encore/Curtains Down\" by Eminem...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for encore\n",
    "#clean to album level\n",
    "encore= df[df['album'] == 'Encore']\n",
    "encore = encore[encore['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "encore_list=[]\n",
    "for row in encore['name']:\n",
    "\n",
    "    encore_list.append(getLyric(row, 'Eminem')),\n",
    "\n",
    "encorelyrics = pd.DataFrame(encore_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "encore= encore.reset_index()\n",
    "#add lyrics\n",
    "encore['lyrics'] = encorelyrics['string_values']\n",
    "#clean\n",
    "encore=encore.drop('index', 1)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Dr. West - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"3 a.m.\" by Eminem...\n",
      "Done.\n",
      "Searching for \"My Mom\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Insane\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Bagpipes From Baghdad\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Hello\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Tonya - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Same Song & Dance\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Medicine Ball\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Paul - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Stay Wide Awake\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Old Time's Sake\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Must Be The Ganja\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Deja Vu\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Beautiful\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Crack A Bottle\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Steve Berman - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Underground\" by Eminem...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for relapse\n",
    "#clean to album level\n",
    "relapse= df[df['album'] == 'Relapse']\n",
    "relapse = relapse[relapse['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "relapse_list=[]\n",
    "for row in relapse['name']:\n",
    "\n",
    "    relapse_list.append(getLyric(row, 'Eminem')),\n",
    "\n",
    "relapselyrics = pd.DataFrame(relapse_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "relapse= relapse.reset_index()\n",
    "#add lyrics\n",
    "relapse['lyrics'] = relapselyrics['string_values']\n",
    "#clean\n",
    "relapse=relapse.drop('index', 1)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Bad Guy\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Parking Lot - Skit\" by Eminem...\n",
      "Specified song does not contain lyrics. Rejecting.\n",
      "Searching for \"Rhyme Or Reason\" by Eminem...\n",
      "Done.\n",
      "Searching for \"So Much Better\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Survival\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Legacy\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Asshole\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Berzerk\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Rap God\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Brainless\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Stronger Than I Was\" by Eminem...\n",
      "Done.\n",
      "Searching for \"The Monster\" by Eminem...\n",
      "Done.\n",
      "Searching for \"So Far...\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Love Game\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Headlights\" by Eminem...\n",
      "Done.\n",
      "Searching for \"Evil Twin - Skit\" by Eminem...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for mmlp2\n",
    "#clean to album level\n",
    "mmlp2= df[df['album'] == 'The Marshall Mathers LP2']\n",
    "mmlp2 = mmlp2[mmlp2['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "mmlp2_list=[]\n",
    "for row in mmlp2['name']:\n",
    "\n",
    "    mmlp2_list.append(getLyric(row, 'Eminem')),\n",
    "\n",
    "mmlp2lyrics = pd.DataFrame(mmlp2_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "mmlp2= mmlp2.reset_index()\n",
    "#add lyrics\n",
    "mmlp2['lyrics'] = mmlp2lyrics['string_values']\n",
    "#clean\n",
    "mmlp2=mmlp2.drop('index', 1)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 210,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 211,
   "metadata": {},
   "outputs": [],
   "source": [
    "#joinall dataframes for macmiller\n",
    "eminem = pd.concat([sslp, mmlp, mmshow, encore, relapse, mmlp2])\n",
    "eminem=eminem.reset_index()\n",
    "#add region data\n",
    "region= []\n",
    "for row in eminem['name']:\n",
    "    region.append('midwest')\n",
    "\n",
    "eminem['region'] = region\n",
    "\n",
    "eminem.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\eminemfinal.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Dr dre\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotify:artist:6DPYiyq5kWVQS4RGwxzPC7\n"
     ]
    }
   ],
   "source": [
    "#get next artist data\n",
    "\n",
    "results = sp.search(\"artist:Dr. Dre\")\n",
    "artist_id = results['tracks']['items'][0]['artists'][0]['uri']\n",
    "print(artist_id)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 213,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://api.spotify.com/v1/artists/6DPYiyq5kWVQS4RGwxzPC7/albums?offset=50&limit=50&include_groups=album,single,compilation,appears_on&market=US\n",
      "50\n",
      "spotify:album:7q2B4M5EiBkqrlsNW8lB7N\n",
      "23 \t 2001\n",
      "23 \t 2001\n",
      "20 \t 2001 Instrumental\n",
      "22 \t 2001\n",
      "1 \t I Need A Doctor\n",
      "1 \t I Need A Doctor\n",
      "1 \t Kush\n",
      "32 \t 90s Hip Hop\n",
      "27 \t 80s Hip Hop\n",
      "29 \t 90's Kids\n",
      "44 \t 90s RnB\n",
      "35 \t Friday Office Music\n",
      "30 \t Hello Weekend\n",
      "50 \t Hip Hop 100 Hits - Urban rap & R n B anthems inc. Jay Z, A$ap Rocky, Wu-Tang Clan & Nas\n",
      "30 \t Mood jams\n",
      "38 \t House Party Jams\n",
      "43 \t Sports Anthems\n",
      "42 \t 90s Rap\n",
      "24 \t New Year's Eve Party Mix\n",
      "14 \t Oxnard\n",
      "14 \t Oxnard\n",
      "27 \t West Coast Hip-Hop\n",
      "25 \t Hip Hop Workout\n",
      "20 \t Caltroit\n",
      "25 \t Hip Hop 420\n",
      "20 \t Throwback Tunes: 90s\n",
      "10 \t Drew's Famous Hits Of The 90's\n",
      "9 \t Remix The Classics (Vol. 4)\n",
      "40 \t The Documentary 2 + 2.5 (Collector's Edition)\n",
      "17 \t Straight Outta Compton (Music From The Motion Picture)\n",
      "17 \t Straight Outta Compton (Music From The Motion Picture)\n",
      "16 \t Straight Outta Compton (Music From The Motion Picture)\n",
      "19 \t The Documentary 2\n",
      "19 \t The Documentary 2\n",
      "1 \t Don't Trip (feat. Ice Cube, Dr. Dre & will.i.am)\n",
      "16 \t Caponeyboy\n",
      "20 \t 20 #1's: 90's R&B\n",
      "16 \t Friends & Lovers\n",
      "16 \t Friends & Lovers\n",
      "1 \t Stronger\n",
      "1 \t Stronger\n",
      "30 \t Who Ride Wit Us: Kurupt's Greatest Hits\n",
      "14 \t West Coast Livin', Volume Three\n",
      "22 \t Still Affiliated\n",
      "23 \t Le mix du dragon (Double H Merchandising présente Cut Killer)\n",
      "18 \t Tha Streetz Iz A Mutha (Digitally Remastered)\n",
      "18 \t Tha Streetz Iz A Mutha (Digitally Remastered)\n",
      "10 \t Urban Chic\n",
      "15 \t God Forgives, I Don't\n",
      "15 \t God Forgives, I Don't\n",
      "name                Lolo - Intro\n",
      "duration_ms                41053\n",
      "popularity                    46\n",
      "num_markets                   77\n",
      "album                       2001\n",
      "disc_number                    1\n",
      "is_explicit                 True\n",
      "track_number                   1\n",
      "release_date          1999-11-16\n",
      "artist                   Dr. Dre\n",
      "danceability               0.455\n",
      "energy                     0.714\n",
      "key                            0\n",
      "loudness                  -13.58\n",
      "mode                           1\n",
      "speechiness                0.527\n",
      "acousticness              0.0593\n",
      "instrumentalness               0\n",
      "liveness                   0.259\n",
      "valence                    0.154\n",
      "tempo                    126.669\n",
      "time_signature                 4\n",
      "Name: 0, dtype: object\n"
     ]
    }
   ],
   "source": [
    "\n",
    "#get album details\n",
    "albums = sp.artist_albums('6DPYiyq5kWVQS4RGwxzPC7', country=\"US\", limit=50)\n",
    "print(albums['next'])\n",
    "\n",
    "#collect album details and print\n",
    "album_ids = [album['uri'] for album in albums['items']]\n",
    "print(len(album_ids))\n",
    "print(album_ids[0])\n",
    "\n",
    "all_tracks = []\n",
    "for album_id in album_ids:\n",
    "    tracks = sp.album_tracks(album_id, limit=50)\n",
    "    all_tracks.append(tracks)\n",
    "    \n",
    "for tracks, album in zip(all_tracks, albums.get('items')):\n",
    "    print(\n",
    "        len(tracks.get('items')),\n",
    "        \"\\t\",\n",
    "        album.get('name')\n",
    "    )\n",
    "\n",
    "#create df\n",
    "track_ids = []\n",
    "for tracks in all_tracks:\n",
    "    album_tracks = []\n",
    "    for track in tracks.get('items'):\n",
    "        album_tracks.append(track.get('uri'))\n",
    "    track_ids.append(album_tracks)\n",
    "\n",
    "\n",
    "track_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    tracks = sp.tracks(track_id_list)\n",
    "    track_objects.append(tracks)\n",
    "\n",
    "#collecting other features\n",
    "\n",
    "audio_feature_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    features = sp.audio_features(track_id_list)\n",
    "    audio_feature_objects.append(features)\n",
    "\n",
    "spotify_data = {\n",
    "    \"audio_features\": audio_feature_objects,\n",
    "    \"tracks\": track_objects\n",
    "}\n",
    "\n",
    "df = pd.DataFrame(columns=[\n",
    "    'name',\n",
    "    'duration_ms',\n",
    "    'popularity',\n",
    "    'num_markets',\n",
    "    'album',\n",
    "    'disc_number',\n",
    "    'is_explicit',\n",
    "    'track_number',\n",
    "    'release_date',\n",
    "    'artist',\n",
    "    'danceability',\n",
    "    'energy',\n",
    "    'key',\n",
    "    'loudness',\n",
    "    'mode',\n",
    "    'speechiness',\n",
    "    'acousticness',\n",
    "    'instrumentalness',\n",
    "    'liveness',\n",
    "    'valence',\n",
    "    'tempo',\n",
    "    'time_signature',\n",
    "])\n",
    "for album_info, album_features in zip(\n",
    "        spotify_data.get('tracks'), \n",
    "        spotify_data.get('audio_features')\n",
    "        ):\n",
    "    for track_info, track_features in zip(\n",
    "        album_info.get('tracks'),\n",
    "        album_features\n",
    "        ):\n",
    "        y = {\n",
    "            'name': track_info['name'],\n",
    "            'duration_ms': track_info['duration_ms'],\n",
    "            'popularity': track_info['popularity'],\n",
    "            'num_markets': len(track_info['available_markets']),\n",
    "            'album': track_info['album']['name'],\n",
    "            'disc_number': track_info['disc_number'],\n",
    "            'is_explicit': track_info['explicit'],\n",
    "            'track_number': track_info['track_number'],\n",
    "            'release_date': track_info['album']['release_date'],\n",
    "            'artist': track_info['artists'][0]['name'],\n",
    "            'danceability': track_features['danceability'],\n",
    "            'energy': track_features['energy'],\n",
    "            'key': track_features['key'],\n",
    "            'loudness': track_features['loudness'],\n",
    "            'mode': track_features['mode'],\n",
    "            'speechiness': track_features['speechiness'],\n",
    "            'acousticness': track_features['acousticness'],\n",
    "            'instrumentalness': track_features['instrumentalness'],\n",
    "            'liveness': track_features['liveness'],\n",
    "            'valence': track_features['valence'],\n",
    "            'tempo': track_features['tempo'],\n",
    "            'time_signature': track_features['time_signature'],\n",
    "        }\n",
    "        df = df.append(y, ignore_index=True)\n",
    "print(df.iloc[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---------------------------------------------------------------------------------------------------------------------------------------"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Lolo - Intro\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"The Watcher\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"Fuck You\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"Still D.R.E.\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"Big Ego's\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"Xxplosive\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"What's The Difference\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"Bar One\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"Light Speed\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"Forgot About Dre\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"The Next Episode\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"Let's Get High\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"Bitch Niggaz\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"The Car Bomb\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"Murder Ink\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"Ed-Ucation\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"Some L.A. Niggaz\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"Pause 4 Porno\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"Housewife\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"Ackrite\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"Bang Bang\" by Dr. Dre...\n",
      "Done.\n",
      "Searching for \"The Message\" by Dr. Dre...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for 2001\n",
    "#clean to album level\n",
    "df2001= df[df['album'] == '2001']\n",
    "df2001 = df2001[df2001['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "df2001_list=[]\n",
    "for row in df2001['name']:\n",
    "\n",
    "    df2001_list.append(getLyric(row, 'Dr. Dre')),\n",
    "\n",
    "df2001lyrics = pd.DataFrame(df2001_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "df2001= df2001.reset_index()\n",
    "#add lyrics\n",
    "df2001['lyrics'] = df2001lyrics['string_values']\n",
    "#clean\n",
    "df2001=df2001.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 219,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                     name duration_ms popularity num_markets album  \\\n",
      "0            Lolo - Intro       41053         46          77  2001   \n",
      "1             The Watcher      206546         57          77  2001   \n",
      "2                Fuck You      205453         59          77  2001   \n",
      "3            Still D.R.E.      270586         75          77  2001   \n",
      "4               Big Ego's      238306         53          77  2001   \n",
      "5               Xxplosive      215200         64          77  2001   \n",
      "6   What's The Difference      244200         64          77  2001   \n",
      "7                 Bar One       50653         46          77  2001   \n",
      "8             Light Speed      160973         50          77  2001   \n",
      "9        Forgot About Dre      222293         71          77  2001   \n",
      "10       The Next Episode      161506         70          77  2001   \n",
      "11         Let's Get High      147426         54          77  2001   \n",
      "12           Bitch Niggaz      253560         51          77  2001   \n",
      "13           The Car Bomb       60893         45          77  2001   \n",
      "14             Murder Ink      148293         49          77  2001   \n",
      "15             Ed-Ucation       92146         45          77  2001   \n",
      "16       Some L.A. Niggaz      265213         49          77  2001   \n",
      "17          Pause 4 Porno       92680         42          77  2001   \n",
      "18              Housewife      242680         49          77  2001   \n",
      "19                Ackrite      219933         49          77  2001   \n",
      "20              Bang Bang      222320         53          77  2001   \n",
      "21            The Message      329466         30          23  2001   \n",
      "\n",
      "   disc_number is_explicit track_number release_date   artist  ...  loudness  \\\n",
      "0            1        True            1   1999-11-16  Dr. Dre  ...   -13.580   \n",
      "1            1        True            2   1999-11-16  Dr. Dre  ...    -3.527   \n",
      "2            1        True            3   1999-11-16  Dr. Dre  ...    -3.923   \n",
      "3            1        True            4   1999-11-16  Dr. Dre  ...    -3.418   \n",
      "4            1        True            5   1999-11-16  Dr. Dre  ...    -1.480   \n",
      "5            1        True            6   1999-11-16  Dr. Dre  ...    -4.368   \n",
      "6            1        True            7   1999-11-16  Dr. Dre  ...    -0.362   \n",
      "7            1        True            8   1999-11-16  Dr. Dre  ...    -8.462   \n",
      "8            1        True            9   1999-11-16  Dr. Dre  ...    -2.752   \n",
      "9            1        True           10   1999-11-16  Dr. Dre  ...    -2.132   \n",
      "10           1        True           11   1999-11-16  Dr. Dre  ...    -2.494   \n",
      "11           1        True           12   1999-11-16  Dr. Dre  ...    -2.850   \n",
      "12           1        True           13   1999-11-16  Dr. Dre  ...    -1.953   \n",
      "13           1        True           14   1999-11-16  Dr. Dre  ...    -9.562   \n",
      "14           1        True           15   1999-11-16  Dr. Dre  ...    -1.248   \n",
      "15           1        True           16   1999-11-16  Dr. Dre  ...    -3.140   \n",
      "16           1        True           17   1999-11-16  Dr. Dre  ...    -2.844   \n",
      "17           1        True           18   1999-11-16  Dr. Dre  ...    -7.298   \n",
      "18           1        True           19   1999-11-16  Dr. Dre  ...    -2.825   \n",
      "19           1        True           20   1999-11-16  Dr. Dre  ...    -3.398   \n",
      "20           1        True           21   1999-11-16  Dr. Dre  ...    -2.500   \n",
      "21           1        True           22   1999-01-01  Dr. Dre  ...    -4.508   \n",
      "\n",
      "    mode speechiness  acousticness instrumentalness  liveness  valence  \\\n",
      "0      1      0.5270        0.0593                0    0.2590    0.154   \n",
      "1      1      0.2180        0.1980                0    0.2380    0.504   \n",
      "2      0      0.4160        0.2640                0    0.1190    0.759   \n",
      "3      1      0.2350        0.1770         0.000676    0.0577    0.547   \n",
      "4      0      0.2490        0.5820         6.95e-06    0.2350    0.485   \n",
      "5      1      0.1340        0.2010         1.07e-05    0.1500    0.926   \n",
      "6      0      0.2300        0.2380                0    0.1860    0.696   \n",
      "7      0      0.2800        0.1850                0    0.2510    0.878   \n",
      "8      0      0.2140        0.0813         8.93e-06    0.1400    0.878   \n",
      "9      1      0.0815        0.0879                0    0.1630    0.626   \n",
      "10     0      0.1950        0.0279                0    0.0803    0.291   \n",
      "11     0      0.3430        0.0571                0    0.1040    0.489   \n",
      "12     0      0.3900        0.3990                0    0.2820    0.597   \n",
      "13     1      0.6730        0.6470                0    0.3800    0.377   \n",
      "14     0      0.2600        0.0275         1.51e-05    0.6260    0.776   \n",
      "15     1      0.4810        0.5160                0    0.3740    0.591   \n",
      "16     1      0.4130        0.1260                0    0.0887    0.741   \n",
      "17     0      0.2400        0.2390                0    0.6750    0.793   \n",
      "18     0      0.2490        0.2580         1.46e-06    0.6810    0.909   \n",
      "19     1      0.3250        0.0848                0    0.5630    0.868   \n",
      "20     0      0.1490        0.1300                0    0.1100    0.768   \n",
      "21     1      0.1420        0.0529         4.76e-05    0.0723    0.803   \n",
      "\n",
      "      tempo  time_signature                                             lyrics  \n",
      "0   126.669               4  [Intro]\\n(THX Sound)\\n\\n[Skit: Xzibit + Tray-D...  \n",
      "1    97.591               4  [Verse 1: Dr. Dre]\\nThings just ain't the same...  \n",
      "2    92.170               4  [Intro: Girl on answering machine]\\nHi, baby\\n...  \n",
      "3    93.425               4  [Produced by Dr. Dre, Scott Storch and Mel-Man...  \n",
      "4    88.688               4  [Spoken Intro]\\nLos Angeles approach control\\n...  \n",
      "5   168.955               4  [Intro: Hittman]\\nExplosive, West coast shit\\n...  \n",
      "6    91.907               4  [Produced by Dr. Dre & Mel-Man]\\n\\n[Intro: Phi...  \n",
      "7    81.325               4  [Skit: Ms. Roq and Traci Nelson (Eddie Griffin...  \n",
      "8    86.388               4  [Dr. Dre]\\nHey, yo, whassup?\\nMy name is Dre\\n...  \n",
      "9   133.961               4  [Verse 1: Dr. Dre]\\nY'all know me, still the s...  \n",
      "10   95.300               4  [Chorus: Snoop Dogg & Kurupt]\\nLa-da-da-da-dah...  \n",
      "11   99.359               4  [Intro]\\nAll these niggas and all these hoes i...  \n",
      "12   77.073               1  [Intro: Snoop Dogg & Dr. Dre]\\nSome good-ass w...  \n",
      "13   84.736               1  And now, the car bomb\\n\\n[Mel-Man]\\nYo, re-re,...  \n",
      "14   88.189               4  [Verse 1: Hittman]\\nWhen darkness be closin' i...  \n",
      "15  168.931               3  [Eddie Griffin]\\nAww they say uhh..\\n.. a blac...  \n",
      "16   88.814               4  [Intro: MC Ren]\\nYeah nigga, MC Ren up in this...  \n",
      "17   79.273               4  [Instrumental to \"Some L.A. Niggas\" briefly pl...  \n",
      "18   92.903               4  [Hook: Kurupt]\\nNow this, this is one of them ...  \n",
      "19   94.169               4  [Intro: Hittman]\\nIt's fuckin ackrite\\nQuestio...  \n",
      "20   95.312               4  [Chorus: T. Y. Nichols]\\nEverywhere I go, all ...  \n",
      "21   82.438               4  [Intro: Dr. Dre]\\nThis one is for my brother, ...  \n",
      "\n",
      "[22 rows x 23 columns]\n"
     ]
    }
   ],
   "source": [
    "\n",
    "print(df2001)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 220,
   "metadata": {},
   "outputs": [],
   "source": [
    "#joinall dataframes for drdre\n",
    "drdre = pd.concat([df2001])\n",
    "drdre=drdre.reset_index()\n",
    "#add region data\n",
    "region= []\n",
    "for row in drdre['name']:\n",
    "    region.append('westcoast')\n",
    "\n",
    "drdre['region'] = region\n",
    "\n",
    "drdre.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\drdrefinal.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Eazy-E\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 229,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotify:artist:7B4hKK0S9QYnaoqa9OuwgX\n"
     ]
    }
   ],
   "source": [
    "#get next artist data\n",
    "\n",
    "results = sp.search(\"artist:Eazy-E\")\n",
    "artist_id = results['tracks']['items'][0]['artists'][0]['uri']\n",
    "print(artist_id)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 230,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://api.spotify.com/v1/artists/7B4hKK0S9QYnaoqa9OuwgX/albums?offset=50&limit=50&include_groups=album,single,compilation,appears_on&market=US\n",
      "50\n",
      "spotify:album:57q7XUCfH3DU0J9sohwaDJ\n",
      "14 \t Str8 off Tha Streetz of Muthaphukkin Compton\n",
      "10 \t Str8 off Tha Streetz of Muthaphuckin Compton\n",
      "8 \t It's On (Dr. Dre) 187um Killa\n",
      "14 \t Eazy-Duz-It\n",
      "11 \t Eazy-Duz-It\n",
      "5 \t Legends Born Again\n",
      "2 \t Merry Muthafuckin’ X-Mas\n",
      "5 \t 5150 Home 4 Tha Sick\n",
      "17 \t Gangsta Memorial\n",
      "12 \t Starring...Eazy E\n",
      "12 \t Starring...Eazy E\n",
      "17 \t Gangsta Memorial Edition\n",
      "27 \t 80s Hip Hop\n",
      "16 \t TBK\n",
      "27 \t West Coast Hip-Hop\n",
      "35 \t Old School Hip Hop\n",
      "21 \t #FreeSwaggV1\n",
      "25 \t Rap Classics\n",
      "10 \t The 25th Anniversary\n",
      "10 \t West Coast Finest\n",
      "17 \t Straight Outta Compton (Music From The Motion Picture)\n",
      "17 \t Straight Outta Compton (Music From The Motion Picture)\n",
      "16 \t Straight Outta Compton (Music From The Motion Picture)\n",
      "1 \t Hittin Switches (feat. Eazy-e, Estilo Illegal) - Single\n",
      "11 \t Essential New Jack Swing\n",
      "10 \t Pounding # 2\n",
      "13 \t Gangsta Bangaz Vol. 1\n",
      "43 \t Summertime Hip Hop\n",
      "11 \t First Power\n",
      "14 \t West Coast Livin', Volume Three\n",
      "50 \t Summer R&B Hits & Hip-Hop Jams\n",
      "16 \t Big Caz Presents: Turf Bangers 3 by Big Caz\n",
      "16 \t Big Caz Presents Family Scriptures, Vol. 2\n",
      "11 \t Big Caz Presents: Gangsta Bangaz #1\n",
      "45 \t Raised On Hip Hop\n",
      "23 \t Breath Of Fresh Air\n",
      "10 \t Hood Bosses\n",
      "20 \t Best of the Past Hip-Hop\n",
      "8 \t Thuggin To The Grave\n",
      "21 \t Snoop Dogg Presents: The West Coast Blueprint\n",
      "20 \t Snoop Dogg Presents: My #1 Priority\n",
      "10 \t Thumbplay Music Presents: Old School Hip Hop\n",
      "29 \t Hip Hop Soul (Re-Recorded / Remastered Versions)\n",
      "25 \t Hip Hop Of The '80s & '90s (Re-Recorded / Remastered Versions)\n",
      "25 \t Old School Hip Hop Workout (Re-Recorded / Remastered Versions)\n",
      "19 \t Da Streets Paid Me But Da Hustle Got Me Rich\n",
      "23 \t Old School Hip Hop Greats\n",
      "50 \t This Is Hip Hop\n",
      "45 \t Hip Hop Classics\n",
      "24 \t Bone Thugs-N-Family\n",
      "name                                                 First Power\n",
      "duration_ms                                                46186\n",
      "popularity                                                    23\n",
      "num_markets                                                   79\n",
      "album               Str8 off Tha Streetz of Muthaphukkin Compton\n",
      "disc_number                                                    1\n",
      "is_explicit                                                 True\n",
      "track_number                                                   1\n",
      "release_date                                          1996-01-30\n",
      "artist                                                    Eazy-E\n",
      "danceability                                                0.32\n",
      "energy                                                     0.533\n",
      "key                                                            1\n",
      "loudness                                                 -11.454\n",
      "mode                                                           1\n",
      "speechiness                                                0.217\n",
      "acousticness                                             0.00257\n",
      "instrumentalness                                               0\n",
      "liveness                                                    0.59\n",
      "valence                                                    0.603\n",
      "tempo                                                      89.25\n",
      "time_signature                                                 5\n",
      "Name: 0, dtype: object\n"
     ]
    }
   ],
   "source": [
    "\n",
    "#get album details\n",
    "albums = sp.artist_albums('7B4hKK0S9QYnaoqa9OuwgX', country=\"US\", limit=50)\n",
    "print(albums['next'])\n",
    "\n",
    "#collect album details and print\n",
    "album_ids = [album['uri'] for album in albums['items']]\n",
    "print(len(album_ids))\n",
    "print(album_ids[0])\n",
    "\n",
    "all_tracks = []\n",
    "for album_id in album_ids:\n",
    "    tracks = sp.album_tracks(album_id, limit=50)\n",
    "    all_tracks.append(tracks)\n",
    "    \n",
    "for tracks, album in zip(all_tracks, albums.get('items')):\n",
    "    print(\n",
    "        len(tracks.get('items')),\n",
    "        \"\\t\",\n",
    "        album.get('name')\n",
    "    )\n",
    "\n",
    "#create df\n",
    "track_ids = []\n",
    "for tracks in all_tracks:\n",
    "    album_tracks = []\n",
    "    for track in tracks.get('items'):\n",
    "        album_tracks.append(track.get('uri'))\n",
    "    track_ids.append(album_tracks)\n",
    "\n",
    "\n",
    "track_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    tracks = sp.tracks(track_id_list)\n",
    "    track_objects.append(tracks)\n",
    "\n",
    "#collecting other features\n",
    "\n",
    "audio_feature_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    features = sp.audio_features(track_id_list)\n",
    "    audio_feature_objects.append(features)\n",
    "\n",
    "spotify_data = {\n",
    "    \"audio_features\": audio_feature_objects,\n",
    "    \"tracks\": track_objects\n",
    "}\n",
    "\n",
    "df = pd.DataFrame(columns=[\n",
    "    'name',\n",
    "    'duration_ms',\n",
    "    'popularity',\n",
    "    'num_markets',\n",
    "    'album',\n",
    "    'disc_number',\n",
    "    'is_explicit',\n",
    "    'track_number',\n",
    "    'release_date',\n",
    "    'artist',\n",
    "    'danceability',\n",
    "    'energy',\n",
    "    'key',\n",
    "    'loudness',\n",
    "    'mode',\n",
    "    'speechiness',\n",
    "    'acousticness',\n",
    "    'instrumentalness',\n",
    "    'liveness',\n",
    "    'valence',\n",
    "    'tempo',\n",
    "    'time_signature',\n",
    "])\n",
    "for album_info, album_features in zip(\n",
    "        spotify_data.get('tracks'), \n",
    "        spotify_data.get('audio_features')\n",
    "        ):\n",
    "    for track_info, track_features in zip(\n",
    "        album_info.get('tracks'),\n",
    "        album_features\n",
    "        ):\n",
    "        y = {\n",
    "            'name': track_info['name'],\n",
    "            'duration_ms': track_info['duration_ms'],\n",
    "            'popularity': track_info['popularity'],\n",
    "            'num_markets': len(track_info['available_markets']),\n",
    "            'album': track_info['album']['name'],\n",
    "            'disc_number': track_info['disc_number'],\n",
    "            'is_explicit': track_info['explicit'],\n",
    "            'track_number': track_info['track_number'],\n",
    "            'release_date': track_info['album']['release_date'],\n",
    "            'artist': track_info['artists'][0]['name'],\n",
    "            'danceability': track_features['danceability'],\n",
    "            'energy': track_features['energy'],\n",
    "            'key': track_features['key'],\n",
    "            'loudness': track_features['loudness'],\n",
    "            'mode': track_features['mode'],\n",
    "            'speechiness': track_features['speechiness'],\n",
    "            'acousticness': track_features['acousticness'],\n",
    "            'instrumentalness': track_features['instrumentalness'],\n",
    "            'liveness': track_features['liveness'],\n",
    "            'valence': track_features['valence'],\n",
    "            'tempo': track_features['tempo'],\n",
    "            'time_signature': track_features['time_signature'],\n",
    "        }\n",
    "        df = df.append(y, ignore_index=True)\n",
    "print(df.iloc[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 232,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Still Talkin'\" by Eazy-E...\n",
      "Done.\n",
      "Searching for \"Nobody Move\" by Eazy-E...\n",
      "Done.\n",
      "Searching for \"Ruthless Villain\" by Eazy-E...\n",
      "Done.\n",
      "Searching for \"2 Hard Mutha's\" by Eazy-E...\n",
      "Done.\n",
      "Searching for \"Boyz-N-The-Hood - Remix\" by Eazy-E...\n",
      "Done.\n",
      "Searching for \"Eazy-Duz-It\" by Eazy-E...\n",
      "Done.\n",
      "Searching for \"We Want Eazy\" by Eazy-E...\n",
      "Done.\n",
      "Searching for \"Eazy-er Said Than Dunn\" by Eazy-E...\n",
      "Done.\n",
      "Searching for \"Radio\" by Eazy-E...\n",
      "Done.\n",
      "Searching for \"No More ?'s\" by Eazy-E...\n",
      "Done.\n",
      "Searching for \"I'mma Break It Down\" by Eazy-E...\n",
      "Done.\n",
      "Searching for \"Eazy - Chapter 8 Verse 10\" by Eazy-E...\n",
      "Done.\n",
      "Searching for \"We Want Eazy - Remix\" by Eazy-E...\n",
      "Done.\n",
      "Searching for \"Still Talkin' - Remix\" by Eazy-E...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for ezdoes\n",
    "#clean to album level\n",
    "dfezdoes= df[df['album'] == 'Eazy-Duz-It']\n",
    "dfezdoes = dfezdoes[dfezdoes['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "dfezdoes_list=[]\n",
    "for row in dfezdoes['name']:\n",
    "\n",
    "    dfezdoes_list.append(getLyric(row, 'Eazy-E')),\n",
    "\n",
    "dfezdoeslyrics = pd.DataFrame(dfezdoes_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "dfezdoes= dfezdoes.reset_index()\n",
    "#add lyrics\n",
    "dfezdoes['lyrics'] = dfezdoeslyrics['string_values']\n",
    "#clean\n",
    "dfezdoes=dfezdoes.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 233,
   "metadata": {},
   "outputs": [],
   "source": [
    "#joinall dataframes for jayz\n",
    "eaz = pd.concat([dfezdoes])\n",
    "eaz=eaz.reset_index()\n",
    "#add region data\n",
    "region= []\n",
    "for row in eaz['name']:\n",
    "    region.append('westcoast')\n",
    "\n",
    "eaz['region'] = region\n",
    "\n",
    "eaz.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\eazfinal.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Busta Rhymes\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotify:artist:1YfEcTuGvBQ8xSD1f53UnK\n"
     ]
    }
   ],
   "source": [
    "#get next artist data\n",
    "\n",
    "results = sp.search(\"artist:Busta Rhymes\")\n",
    "artist_id = results['tracks']['items'][0]['artists'][0]['uri']\n",
    "print(artist_id)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 235,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://api.spotify.com/v1/artists/1YfEcTuGvBQ8xSD1f53UnK/albums?offset=50&limit=50&include_groups=album,single,compilation,appears_on&market=US\n",
      "50\n",
      "spotify:album:48lDyNIYmK3Dq87A7kKnDE\n",
      "16 \t Back On My B.S.\n",
      "16 \t Back On My B.S.\n",
      "14 \t Back On My B.S.\n",
      "14 \t Back On My B.S.\n",
      "15 \t The Big Bang\n",
      "15 \t The Big Bang (Verizon Exclusive)\n",
      "15 \t The Big Bang\n",
      "19 \t It Ain't Safe No More. . .\n",
      "20 \t Genesis\n",
      "18 \t The Best Of Busta Rhymes\n",
      "22 \t Anarchy (Explicit Version)\n",
      "22 \t Anarchy\n",
      "19 \t Extinction Level Event: The Final World Front\n",
      "18 \t When Disaster Strikes\n",
      "18 \t When Disaster Strikes...\n",
      "13 \t The Coming\n",
      "1 \t Coming Off\n",
      "1 \t Facts Remix (feat. DJ Khaled, Busta Rhymes & Fat Joe)\n",
      "1 \t Drop It\n",
      "1 \t Bubblin (feat. Busta Rhymes) [Remix]\n",
      "1 \t Bubblin (feat. Busta Rhymes) [Remix]\n",
      "1 \t Bottles Up\n",
      "1 \t Get It (feat. Missy Elliott & Kelly Rowland)\n",
      "1 \t Girlfriend\n",
      "1 \t AAAHHHH!!!\n",
      "1 \t AAAHHHH!!!\n",
      "7 \t Calm Down: The Clash EP\n",
      "1 \t Calm Down 2.0 - Single\n",
      "1 \t Calm Down 2.0 - Single\n",
      "1 \t Calm Down (feat. Eminem) - Single\n",
      "1 \t Calm Down (feat. Eminem) - Single\n",
      "1 \t Rum & Redbull Remix - Single\n",
      "1 \t #TWERKIT\n",
      "1 \t #TWERKIT\n",
      "1 \t Shake It (Explicit Version)\n",
      "1 \t Shake It (Edited Version)\n",
      "1 \t Thank You\n",
      "1 \t Thank You\n",
      "1 \t Hustler's Anthem '09\n",
      "1 \t We Made It (feat. Linkin Park)\n",
      "1 \t Don't Touch Me (Throw Da Water On 'Em)\n",
      "1 \t Don't Touch Me (Throw Da Water On 'Em)\n",
      "5 \t Rhino Hi-Five: Busta Rhymes\n",
      "1 \t I Love My Chick (Sprint Music Series)\n",
      "1 \t New York S*** (Sprint Music Series)\n",
      "1 \t Touch It (Sprint Music Series)\n",
      "2 \t Touch It Remixes\n",
      "2 \t Touch It Remixes\n",
      "4 \t Touch It Remixes\n",
      "4 \t Touch It Remixes\n",
      "name                Back On My B.S. Intro\n",
      "duration_ms                         54240\n",
      "popularity                             18\n",
      "num_markets                             2\n",
      "album                     Back On My B.S.\n",
      "disc_number                             1\n",
      "is_explicit                          True\n",
      "track_number                            1\n",
      "release_date                   2009-01-01\n",
      "artist                       Busta Rhymes\n",
      "danceability                        0.355\n",
      "energy                              0.546\n",
      "key                                     0\n",
      "loudness                           -9.273\n",
      "mode                                    0\n",
      "speechiness                         0.104\n",
      "acousticness                        0.818\n",
      "instrumentalness                  0.00571\n",
      "liveness                            0.168\n",
      "valence                             0.401\n",
      "tempo                             135.889\n",
      "time_signature                          4\n",
      "Name: 0, dtype: object\n"
     ]
    }
   ],
   "source": [
    "\n",
    "#get album details\n",
    "albums = sp.artist_albums('1YfEcTuGvBQ8xSD1f53UnK', country=\"US\", limit=50)\n",
    "print(albums['next'])\n",
    "\n",
    "#collect album details and print\n",
    "album_ids = [album['uri'] for album in albums['items']]\n",
    "print(len(album_ids))\n",
    "print(album_ids[0])\n",
    "\n",
    "all_tracks = []\n",
    "for album_id in album_ids:\n",
    "    tracks = sp.album_tracks(album_id, limit=50)\n",
    "    all_tracks.append(tracks)\n",
    "    \n",
    "for tracks, album in zip(all_tracks, albums.get('items')):\n",
    "    print(\n",
    "        len(tracks.get('items')),\n",
    "        \"\\t\",\n",
    "        album.get('name')\n",
    "    )\n",
    "\n",
    "#create df\n",
    "track_ids = []\n",
    "for tracks in all_tracks:\n",
    "    album_tracks = []\n",
    "    for track in tracks.get('items'):\n",
    "        album_tracks.append(track.get('uri'))\n",
    "    track_ids.append(album_tracks)\n",
    "\n",
    "\n",
    "track_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    tracks = sp.tracks(track_id_list)\n",
    "    track_objects.append(tracks)\n",
    "\n",
    "#collecting other features\n",
    "\n",
    "audio_feature_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    features = sp.audio_features(track_id_list)\n",
    "    audio_feature_objects.append(features)\n",
    "\n",
    "spotify_data = {\n",
    "    \"audio_features\": audio_feature_objects,\n",
    "    \"tracks\": track_objects\n",
    "}\n",
    "\n",
    "df = pd.DataFrame(columns=[\n",
    "    'name',\n",
    "    'duration_ms',\n",
    "    'popularity',\n",
    "    'num_markets',\n",
    "    'album',\n",
    "    'disc_number',\n",
    "    'is_explicit',\n",
    "    'track_number',\n",
    "    'release_date',\n",
    "    'artist',\n",
    "    'danceability',\n",
    "    'energy',\n",
    "    'key',\n",
    "    'loudness',\n",
    "    'mode',\n",
    "    'speechiness',\n",
    "    'acousticness',\n",
    "    'instrumentalness',\n",
    "    'liveness',\n",
    "    'valence',\n",
    "    'tempo',\n",
    "    'time_signature',\n",
    "])\n",
    "for album_info, album_features in zip(\n",
    "        spotify_data.get('tracks'), \n",
    "        spotify_data.get('audio_features')\n",
    "        ):\n",
    "    for track_info, track_features in zip(\n",
    "        album_info.get('tracks'),\n",
    "        album_features\n",
    "        ):\n",
    "        y = {\n",
    "            'name': track_info['name'],\n",
    "            'duration_ms': track_info['duration_ms'],\n",
    "            'popularity': track_info['popularity'],\n",
    "            'num_markets': len(track_info['available_markets']),\n",
    "            'album': track_info['album']['name'],\n",
    "            'disc_number': track_info['disc_number'],\n",
    "            'is_explicit': track_info['explicit'],\n",
    "            'track_number': track_info['track_number'],\n",
    "            'release_date': track_info['album']['release_date'],\n",
    "            'artist': track_info['artists'][0]['name'],\n",
    "            'danceability': track_features['danceability'],\n",
    "            'energy': track_features['energy'],\n",
    "            'key': track_features['key'],\n",
    "            'loudness': track_features['loudness'],\n",
    "            'mode': track_features['mode'],\n",
    "            'speechiness': track_features['speechiness'],\n",
    "            'acousticness': track_features['acousticness'],\n",
    "            'instrumentalness': track_features['instrumentalness'],\n",
    "            'liveness': track_features['liveness'],\n",
    "            'valence': track_features['valence'],\n",
    "            'tempo': track_features['tempo'],\n",
    "            'time_signature': track_features['time_signature'],\n",
    "        }\n",
    "        df = df.append(y, ignore_index=True)\n",
    "print(df.iloc[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                           name duration_ms popularity num_markets  \\\n",
      "0                       Ballhog      142877         34           2   \n",
      "1            The Pots & Pan Man      155130         33           2   \n",
      "2                       Winning      162671         36           2   \n",
      "3            Who You Talking To      194445         33           2   \n",
      "4                        Wicked      155768         35           2   \n",
      "5     Ain't Talkin Bout Nothing      194718         40           2   \n",
      "6                     One Night      235096         37           2   \n",
      "7                         Relax      162123         41           2   \n",
      "8               The Pack Attack      254945         30           2   \n",
      "9                        Dennys      148955         28           2   \n",
      "10                   These Days      162780         35           2   \n",
      "11           When Life Shows Up      261720         29           2   \n",
      "12                      Ballhog      142906          3           2   \n",
      "13           The Pots & Pan Man      155160          2           2   \n",
      "14                      Winning      162533          2           2   \n",
      "15           Who You Talking To      194480          2           2   \n",
      "16                       Wicked      155813          2           2   \n",
      "17    Ain't Talkin Bout Nothing      194760          9           2   \n",
      "18                    One Night      235120          2           2   \n",
      "19                        Relax      162160          2           2   \n",
      "20              The Pack Attack      254973          2           2   \n",
      "21                       Dennys      149000          2           2   \n",
      "22                   These Days      162760          4           2   \n",
      "23           When Life Shows Up      240946          9           2   \n",
      "24                 Life Lessons      175240         47           2   \n",
      "25           Straight Like That      200030         43           2   \n",
      "26                          Boy      221287         46           2   \n",
      "27        Guilty By Association      258133         34           2   \n",
      "28                Carpal Tunnel      210847         34           2   \n",
      "29           Stompdown - Skit 1       20748          0           2   \n",
      "..                          ...         ...        ...         ...   \n",
      "914        Outsmart The Po Po's      265598         12          79   \n",
      "915                 Hide-N-Seek      265305          8          79   \n",
      "916                Carlos Rossi      287265         19          79   \n",
      "917                     Tanji 2      223200          9          79   \n",
      "918             Let Him Have It      293691         12          79   \n",
      "919                   Questions       40465          7          79   \n",
      "920               Extra Mannish      243705         12          79   \n",
      "921                   Get Em Up      229665          6          79   \n",
      "922            Nuttin Ass N*gga      256958          9          79   \n",
      "923           Rasta Funky Style      269504          6          79   \n",
      "924                   Shots Out      268518          5          79   \n",
      "925              Drought Season      260493         14          19   \n",
      "926                   Rat Heads      312906         11          19   \n",
      "927                     Federal      284266         15          19   \n",
      "928        Outsmart the Po Po's      266466         14          19   \n",
      "929                Hide 'N Seek      263093          9          19   \n",
      "930             Let Him Have It      293666         12          19   \n",
      "931                   Questions       40440          8          19   \n",
      "932                Extra Manish      249866         13          19   \n",
      "933                Carlos Rossi      285560         20          19   \n",
      "934            Nuttin Ass Nigga      247840         10          19   \n",
      "935                  Shouts Out      269933          6          19   \n",
      "936            Mail Man - Intro      105650          9          79   \n",
      "937                  Neva Broke      300140         14          79   \n",
      "938       Bring The Yellow Tape      267864         14          79   \n",
      "939       Practice Lookin' Hard      276920         22          79   \n",
      "940         Where The Party At?      294892         13          79   \n",
      "941          Captain Save A Hoe      288297         41          79   \n",
      "942                The Mail Man      231315         13          79   \n",
      "943  Captain Save A Hoe - Remix       29812          0          79   \n",
      "\n",
      "                                    album disc_number is_explicit  \\\n",
      "0                         The Gift Of Gab           1        True   \n",
      "1                         The Gift Of Gab           1        True   \n",
      "2                         The Gift Of Gab           1        True   \n",
      "3                         The Gift Of Gab           1        True   \n",
      "4                         The Gift Of Gab           1        True   \n",
      "5                         The Gift Of Gab           1        True   \n",
      "6                         The Gift Of Gab           1        True   \n",
      "7                         The Gift Of Gab           1        True   \n",
      "8                         The Gift Of Gab           1        True   \n",
      "9                         The Gift Of Gab           1        True   \n",
      "10                        The Gift Of Gab           1        True   \n",
      "11                        The Gift Of Gab           1        True   \n",
      "12                        The Gift Of Gab           1       False   \n",
      "13                        The Gift Of Gab           1       False   \n",
      "14                        The Gift Of Gab           1       False   \n",
      "15                        The Gift Of Gab           1       False   \n",
      "16                        The Gift Of Gab           1       False   \n",
      "17                        The Gift Of Gab           1       False   \n",
      "18                        The Gift Of Gab           1       False   \n",
      "19                        The Gift Of Gab           1       False   \n",
      "20                        The Gift Of Gab           1       False   \n",
      "21                        The Gift Of Gab           1       False   \n",
      "22                        The Gift Of Gab           1       False   \n",
      "23                        The Gift Of Gab           1       False   \n",
      "24                Connected And Respected           1        True   \n",
      "25                Connected And Respected           1        True   \n",
      "26                Connected And Respected           1        True   \n",
      "27                Connected And Respected           1        True   \n",
      "28                Connected And Respected           1        True   \n",
      "29                Connected And Respected           1        True   \n",
      "..                                    ...         ...         ...   \n",
      "914        Federal, Original Master Peace           1        True   \n",
      "915        Federal, Original Master Peace           1        True   \n",
      "916        Federal, Original Master Peace           1        True   \n",
      "917        Federal, Original Master Peace           1        True   \n",
      "918        Federal, Original Master Peace           1        True   \n",
      "919        Federal, Original Master Peace           1        True   \n",
      "920        Federal, Original Master Peace           1        True   \n",
      "921        Federal, Original Master Peace           1        True   \n",
      "922        Federal, Original Master Peace           1        True   \n",
      "923        Federal, Original Master Peace           1        True   \n",
      "924        Federal, Original Master Peace           1        True   \n",
      "925                               Federal           1        True   \n",
      "926                               Federal           1        True   \n",
      "927                               Federal           1        True   \n",
      "928                               Federal           1       False   \n",
      "929                               Federal           1        True   \n",
      "930                               Federal           1        True   \n",
      "931                               Federal           1        True   \n",
      "932                               Federal           1        True   \n",
      "933                               Federal           1        True   \n",
      "934                               Federal           1        True   \n",
      "935                               Federal           1        True   \n",
      "936  The Mail Man (Original Master Peace)           1        True   \n",
      "937  The Mail Man (Original Master Peace)           1        True   \n",
      "938  The Mail Man (Original Master Peace)           1        True   \n",
      "939  The Mail Man (Original Master Peace)           1        True   \n",
      "940  The Mail Man (Original Master Peace)           1        True   \n",
      "941  The Mail Man (Original Master Peace)           1        True   \n",
      "942  The Mail Man (Original Master Peace)           1        True   \n",
      "943  The Mail Man (Original Master Peace)           1        True   \n",
      "\n",
      "    track_number release_date artist  ...  key  loudness mode  speechiness  \\\n",
      "0              1   2018-08-24   E-40  ...    2    -4.957    0       0.3780   \n",
      "1              2   2018-08-24   E-40  ...    1    -5.219    1       0.2420   \n",
      "2              3   2018-08-24   E-40  ...    1    -6.440    1       0.2550   \n",
      "3              4   2018-08-24   E-40  ...    2    -4.178    1       0.1930   \n",
      "4              5   2018-08-24   E-40  ...    2    -8.503    1       0.3090   \n",
      "5              6   2018-08-24   E-40  ...    5    -5.144    0       0.3570   \n",
      "6              7   2018-08-24   E-40  ...    1    -4.749    0       0.0758   \n",
      "7              8   2018-08-24   E-40  ...    5    -5.657    0       0.2000   \n",
      "8              9   2018-08-24   E-40  ...   10    -7.355    1       0.2510   \n",
      "9             10   2018-08-24   E-40  ...    1    -6.596    1       0.4490   \n",
      "10            11   2018-08-24   E-40  ...    5    -5.326    0       0.2810   \n",
      "11            12   2018-08-24   E-40  ...    9    -6.042    0       0.6670   \n",
      "12             1   2018-08-23   E-40  ...    2    -5.190    0       0.3540   \n",
      "13             2   2018-08-23   E-40  ...    1    -5.263    1       0.2880   \n",
      "14             3   2018-08-23   E-40  ...    1    -6.668    1       0.2700   \n",
      "15             4   2018-08-23   E-40  ...    7    -4.412    1       0.2910   \n",
      "16             5   2018-08-23   E-40  ...    2    -8.989    1       0.3110   \n",
      "17             6   2018-08-23   E-40  ...    1    -5.464    1       0.3410   \n",
      "18             7   2018-08-23   E-40  ...    1    -4.851    0       0.1180   \n",
      "19             8   2018-08-23   E-40  ...    5    -5.868    0       0.2050   \n",
      "20             9   2018-08-23   E-40  ...   10    -7.556    1       0.2760   \n",
      "21            10   2018-08-23   E-40  ...    1    -6.751    1       0.3610   \n",
      "22            11   2018-08-23   E-40  ...    5    -5.394    0       0.2480   \n",
      "23            12   2018-08-23   E-40  ...    9    -5.875    0       0.8100   \n",
      "24             1   2018-04-06   E-40  ...    2    -6.101    1       0.2860   \n",
      "25             2   2018-04-06   E-40  ...    6    -5.139    1       0.2880   \n",
      "26             3   2018-04-06   E-40  ...    6    -4.157    0       0.3000   \n",
      "27             4   2018-04-06   E-40  ...    5    -3.958    0       0.3890   \n",
      "28             5   2018-04-06   E-40  ...    1    -5.207    0       0.4840   \n",
      "29             6   2018-04-06   E-40  ...    4   -11.991    1       0.9290   \n",
      "..           ...          ...    ...  ...  ...       ...  ...          ...   \n",
      "914            4         1993   E-40  ...    6   -14.692    1       0.2500   \n",
      "915            5         1993   E-40  ...    1   -10.864    1       0.1320   \n",
      "916            6         1993   E-40  ...    9   -11.772    1       0.4200   \n",
      "917            7         1993   E-40  ...    1   -13.183    1       0.2780   \n",
      "918            8         1993   E-40  ...    7   -11.904    1       0.3170   \n",
      "919            9         1993   E-40  ...    4   -18.212    0       0.4270   \n",
      "920           10         1993   E-40  ...    6   -13.117    1       0.3340   \n",
      "921           11         1993   E-40  ...    6   -10.919    0       0.2900   \n",
      "922           12         1993   E-40  ...    7   -12.991    1       0.1630   \n",
      "923           13         1993   E-40  ...    7   -13.054    1       0.3820   \n",
      "924           14         1993   E-40  ...    6   -10.569    1       0.1910   \n",
      "925            1         1993   E-40  ...    9   -12.016    1       0.3370   \n",
      "926            2         1993   E-40  ...    4   -11.654    0       0.2900   \n",
      "927            3         1993   E-40  ...    6   -12.430    0       0.2460   \n",
      "928            4         1993   E-40  ...    6   -11.908    1       0.2270   \n",
      "929            5         1993   E-40  ...    1    -9.483    0       0.1260   \n",
      "930            6         1993   E-40  ...    7   -10.366    1       0.3020   \n",
      "931            7         1993   E-40  ...    1   -16.449    1       0.3860   \n",
      "932            8         1993   E-40  ...    3    -9.136    0       0.2740   \n",
      "933            9         1993   E-40  ...    9   -10.819    1       0.3700   \n",
      "934           10         1993   E-40  ...    1    -7.755    1       0.1610   \n",
      "935           11         1993   E-40  ...    6    -9.643    1       0.1930   \n",
      "936            1         1993   E-40  ...   11   -20.914    0       0.2260   \n",
      "937            2         1993   E-40  ...   11   -20.811    0       0.2730   \n",
      "938            3         1993   E-40  ...    4   -20.467    0       0.3210   \n",
      "939            4         1993   E-40  ...    7   -21.806    1       0.4520   \n",
      "940            5         1993   E-40  ...   11   -17.876    0       0.0949   \n",
      "941            6         1993   E-40  ...    7   -19.552    1       0.2520   \n",
      "942            7         1993   E-40  ...    6   -21.920    0       0.3300   \n",
      "943            8         1993   E-40  ...    8   -23.430    0       0.5160   \n",
      "\n",
      "    acousticness  instrumentalness  liveness  valence    tempo  time_signature  \n",
      "0       0.235000          0.000009    0.0815   0.5510   96.617               4  \n",
      "1       0.067600          0.000000    0.0929   0.2820   95.973               4  \n",
      "2       0.073300          0.000005    0.0895   0.1880  104.060               4  \n",
      "3       0.022000          0.004490    0.1660   0.7150  101.977               4  \n",
      "4       0.103000          0.000580    0.0992   0.4700  100.017               4  \n",
      "5       0.188000          0.000000    0.7700   0.6720  103.014               4  \n",
      "6       0.152000          0.000101    0.1160   0.1860  133.095               5  \n",
      "7       0.250000          0.000000    0.3300   0.4330   96.995               4  \n",
      "8       0.052800          0.000219    0.5900   0.0778   96.963               4  \n",
      "9       0.059800          0.001660    0.0665   0.4500  181.876               4  \n",
      "10      0.052700          0.000001    0.1470   0.6910  108.023               4  \n",
      "11      0.336000          0.000000    0.1360   0.7520   91.963               4  \n",
      "12      0.242000          0.000008    0.0771   0.5640   96.843               4  \n",
      "13      0.071400          0.000000    0.0747   0.2420   95.808               4  \n",
      "14      0.072700          0.000012    0.0877   0.2190  104.010               4  \n",
      "15      0.022600          0.013000    0.1670   0.6960  101.678               4  \n",
      "16      0.117000          0.001930    0.0938   0.4540  100.015               4  \n",
      "17      0.122000          0.000000    0.7860   0.5960  103.042               4  \n",
      "18      0.187000          0.000027    0.1290   0.1600  100.167               4  \n",
      "19      0.218000          0.000004    0.3560   0.4500   96.955               4  \n",
      "20      0.049700          0.000459    0.6080   0.0762   96.794               4  \n",
      "21      0.061800          0.000208    0.0675   0.3910   91.059               4  \n",
      "22      0.042000          0.000004    0.1110   0.7120  108.034               4  \n",
      "23      0.254000          0.000000    0.0844   0.6000   91.024               4  \n",
      "24      0.153000          0.000065    0.0490   0.6460  100.920               4  \n",
      "25      0.234000          0.000083    0.0955   0.7730  101.964               4  \n",
      "26      0.036700          0.000000    0.0912   0.6080   95.990               4  \n",
      "27      0.009270          0.000016    0.0890   0.4140  171.813               4  \n",
      "28      0.200000          0.000064    0.1200   0.3820   98.536               4  \n",
      "29      0.847000          0.000000    0.3470   0.9710  107.387               3  \n",
      "..           ...               ...       ...      ...      ...             ...  \n",
      "914     0.001130          0.000009    0.0914   0.7940   90.068               4  \n",
      "915     0.031100          0.000019    0.0383   0.4790   95.022               4  \n",
      "916     0.014200          0.000137    0.0897   0.6890  143.998               4  \n",
      "917     0.017200          0.000000    0.1420   0.4220  103.038               4  \n",
      "918     0.008360          0.000000    0.2420   0.6100  170.106               4  \n",
      "919     0.004370          0.000000    0.1820   0.3590  170.170               4  \n",
      "920     0.004010          0.000042    0.1100   0.5140  172.215               4  \n",
      "921     0.012400          0.000000    0.0826   0.8080  110.280               4  \n",
      "922     0.008820          0.000034    0.2780   0.4630   93.142               4  \n",
      "923     0.079800          0.000000    0.1680   0.6870   82.982               4  \n",
      "924     0.031900          0.000001    0.1130   0.8620   89.928               4  \n",
      "925     0.003690          0.000000    0.0761   0.4790   92.173               4  \n",
      "926     0.040200          0.000899    0.1120   0.6590   81.972               4  \n",
      "927     0.002890          0.000051    0.0584   0.3250   90.022               4  \n",
      "928     0.000848          0.000139    0.0847   0.7620   90.083               4  \n",
      "929     0.039000          0.001360    0.1010   0.7280   95.035               4  \n",
      "930     0.008770          0.000000    0.2280   0.5940  170.357               4  \n",
      "931     0.008090          0.000000    0.1570   0.3890   85.145               4  \n",
      "932     0.002040          0.029000    0.0774   0.6700  170.152               4  \n",
      "933     0.010100          0.000215    0.0851   0.6740  144.032               4  \n",
      "934     0.007170          0.000342    0.0867   0.3830   93.046               4  \n",
      "935     0.015200          0.000195    0.0619   0.8590   90.101               4  \n",
      "936     0.013100          0.000014    0.1140   0.4130  146.029               3  \n",
      "937     0.049100          0.000000    0.1050   0.4220   95.062               4  \n",
      "938     0.368000          0.000000    0.1420   0.7470   79.993               4  \n",
      "939     0.185000          0.000000    0.1120   0.7120   68.624               3  \n",
      "940     0.232000          0.000652    0.3450   0.7640   95.062               4  \n",
      "941     0.057900          0.000000    0.2230   0.5380   82.996               4  \n",
      "942     0.166000          0.000033    0.1210   0.6150   87.993               4  \n",
      "943     0.737000          0.000000    0.5860   0.6500   90.043               3  \n",
      "\n",
      "[944 rows x 22 columns]\n"
     ]
    }
   ],
   "source": [
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 236,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Intro\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"The Whole World Looking at Me\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Survival Hungry\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"When Disaster Strikes\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"So Hardcore\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Get High Tonight\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Turn It Up\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Put Your Hands Where My Eyes Could See\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"There's Not a Problem My Squad Can't Fix\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"We Could Take It Outside\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Rhymes Galore\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Things We Be Doin' for Money, Pt. 1\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Things We Be Doin' for Money, Pt. 2\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"One\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Dangerous\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Body Rock\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Get off My Block\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Outro\" by Busta Rhymes...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for wds\n",
    "#clean to album level\n",
    "dfwds= df[df['album'] == 'When Disaster Strikes']\n",
    "dfwds = dfwds[dfwds['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "dfwds_list=[]\n",
    "for row in dfwds['name']:\n",
    "\n",
    "    dfwds_list.append(getLyric(row, 'Busta Rhymes')),\n",
    "\n",
    "dfwdslyrics = pd.DataFrame(dfwds_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "dfwds= dfwds.reset_index()\n",
    "#add lyrics\n",
    "dfwds['lyrics'] = dfwdslyrics['string_values']\n",
    "#clean\n",
    "dfwds=dfwds.drop('index', 1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 237,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Do My Thing\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Everything Remains Raw\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Abandon Ship (feat. Rampage the Last Boy Scout)\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Woo Hah!! Got You All in Check\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"It's a Party (feat. Zhane)\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Hot Fudge\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Ill Vibe (feat. Q-Tip)\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Flipmode Squad Meets Def Squad (feat. Jamal, Redman, Keith Murray, Rampage the Last Boy Scout, Lord Have Mercy)\" by Busta Rhymes...\n",
      "No results found for: 'Flipmode Squad Meets Def Squad (feat. Jamal, Redman, Keith Murray, Rampage the Last Boy Scout, Lord Have Mercy) Busta Rhymes'\n",
      "Searching for \"Still Shining\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Keep It Movin' (feat. Rampage the Last Boy Scout, Dinco, Milo and Charlie Brown)\" by Busta Rhymes...\n",
      "No results found for: 'Keep It Movin' (feat. Rampage the Last Boy Scout, Dinco, Milo and Charlie Brown) Busta Rhymes'\n",
      "Searching for \"The Finish Line\" by Busta Rhymes...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for tc\n",
    "#clean to album level\n",
    "dftc= df[df['album'] == 'The Coming']\n",
    "dftc = dftc[dftc['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "dftc_list=[]\n",
    "for row in dftc['name']:\n",
    "\n",
    "    dftc_list.append(getLyric(row, 'Busta Rhymes')),\n",
    "\n",
    "dftclyrics = pd.DataFrame(dftc_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "dftc= dftc.reset_index()\n",
    "#add lyrics\n",
    "dftc['lyrics'] = dftclyrics['string_values']\n",
    "#clean\n",
    "dftc=dftc.drop('index', 1)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 238,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Intro\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Everybody Rise Again\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"As I Come Back\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Shut 'Em Down 2002\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Genesis\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Betta Stay Up In Your House (feat. Rah Digga)\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"We Got What You Want\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Truck Volume\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Pass The Courvoisier (feat. P. Diddy)\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Break Ya Neck\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Bounce\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Holla\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Wife In Law (feat. Jaheim) - Alternate Album Version\" by Busta Rhymes...\n",
      "No results found for: 'Wife In Law (feat. Jaheim) - Alternate Album Version Busta Rhymes'\n",
      "Searching for \"Make It Hurt\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"What It Is (feat. Kelis)\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"There's Only One (feat. Mary J. Blige)\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"You Ain't Fuckin' Wit Me\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Match The Name With The Voice (feat. Flipmode Squad)\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Bad Dreams\" by Busta Rhymes...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for gen\n",
    "#clean to album level\n",
    "dfgen= df[df['album'] == 'Genesis']\n",
    "dfgen = dfgen[dfgen['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "dfgen_list=[]\n",
    "for row in dfgen['name']:\n",
    "\n",
    "    dfgen_list.append(getLyric(row, 'Busta Rhymes')),\n",
    "\n",
    "dfgenlyrics = pd.DataFrame(dfgen_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "dfgen= dfgen.reset_index()\n",
    "#add lyrics\n",
    "dfgen['lyrics'] = dfgenlyrics['string_values']\n",
    "#clean\n",
    "dfgen=dfgen.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 239,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Get You Some\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Touch It\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"How We Do It Over Here\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"New York Shit - Album Version (Explicit w/o Shoutouts)\" by Busta Rhymes...\n",
      "No results found for: 'New York Shit - Album Version (Explicit w/o Shoutouts) Busta Rhymes'\n",
      "Searching for \"Been Through The Storm\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"In The Ghetto\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Cocaina\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"You Can't Hold The Torch\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Goldmine\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"I Love My Bitch\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Don't Get Carried Away\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"They're Out To Get Me\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Get Down\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"I'll Do It All\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Legend Of The Fall Offs\" by Busta Rhymes...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for bb\n",
    "#clean to album level\n",
    "dfbb= df[df['album'] == 'The Big Bang']\n",
    "dfbb = dfbb[dfbb['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "dfbb_list=[]\n",
    "for row in dfbb['name']:\n",
    "\n",
    "    dfbb_list.append(getLyric(row, 'Busta Rhymes')),\n",
    "\n",
    "dfbblyrics = pd.DataFrame(dfbb_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "dfbb= dfbb.reset_index()\n",
    "#add lyrics\n",
    "dfbb['lyrics'] = dfbblyrics['string_values']\n",
    "#clean\n",
    "dfbb=dfbb.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 244,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Intro: The Current State of Anarchy\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Salute da Gods!!\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Enjoy da Ride\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"We Put It Down for Y'all\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Bladow!!\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Street Shit\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Live It Up\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Fire\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"All Night\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Show Me What You Got\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Get Out!!\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"The Heist (feat. Raekwon the Chef, Ghostface Killa, Roc-Marciano)\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"A Trip out of Town\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"How Much We Grew\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Here We Go Again (feat. The Flipmode Squad)\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"We Comin' Through\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"C'mon All My Niggaz, C'mon All My Bitches\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Make Noise (feat. Lenny Kravitz)\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Ready for War (feat. M.O.P.)\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Why We Die (feat. DMX & Jay-Z)\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Anarchy\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Outro\" by Busta Rhymes...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for anarchy\n",
    "#clean to album level\n",
    "dfanarchy= df[df['album'] == 'Anarchy (Explicit Version)']\n",
    "dfanarchy = dfanarchy[dfanarchy['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "dfanarchy_list=[]\n",
    "for row in dfanarchy['name']:\n",
    "\n",
    "    dfanarchy_list.append(getLyric(row, 'Busta Rhymes')),\n",
    "\n",
    "dfanarchylyrics = pd.DataFrame(dfanarchy_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "dfanarchy= dfanarchy.reset_index()\n",
    "#add lyrics\n",
    "dfanarchy['lyrics'] = dfanarchylyrics['string_values']\n",
    "#clean\n",
    "dfanarchy=dfanarchy.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 243,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Intro - There Is Only One Year Left\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Everybody Rise\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Where We Are About to Take It\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Extinction Level Event (The Song of Salvation)\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Tear da Roof Off\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Against All Odds (feat. Flipmode Squad)\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Just Give It to Me Raw\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Do It to Death\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Keepin' It Tight\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Gimme Some More\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Iz They Wildin wit Us & Gettin Rowdy wit Us? (feat. Mystikal)\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Party Is Goin' on over Here\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Do the Bus a Bus\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Take It Off\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"What's It Gonna Be?! (feat. Janet Jackson)\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Hot Sh** Makin' Ya Bounce\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"What the F*** You Want!!\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"This Means War!! (feat. Ozzy Osbourne)\" by Busta Rhymes...\n",
      "Done.\n",
      "Searching for \"Outro - The Burial Song\" by Busta Rhymes...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for ele\n",
    "#clean to album level\n",
    "dfele= df[df['album'] == 'Extinction Level Event: The Final World Front']\n",
    "dfele = dfele[dfele['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "dfele_list=[]\n",
    "for row in dfele['name']:\n",
    "\n",
    "    dfele_list.append(getLyric(row, 'Busta Rhymes')),\n",
    "\n",
    "dfelelyrics = pd.DataFrame(dfele_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "dfele= dfele.reset_index()\n",
    "#add lyrics\n",
    "dfele['lyrics'] = dfelelyrics['string_values']\n",
    "#clean\n",
    "dfele=dfele.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 246,
   "metadata": {},
   "outputs": [],
   "source": [
    "#get lyric data for aintsafe\n",
    "#clean to album level\n",
    "dfaintsafe= df[df['album'] == 'It Ain\\'t Safe No More']\n",
    "dfaintsafe = dfaintsafe[dfaintsafe['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "dfaintsafe_list=[]\n",
    "for row in dfaintsafe['name']:\n",
    "\n",
    "    dfaintsafe_list.append(getLyric(row, 'Busta Rhymes')),\n",
    "\n",
    "dfaintsafelyrics = pd.DataFrame(dfaintsafe_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "dfaintsafe= dfaintsafe.reset_index()\n",
    "#add lyrics\n",
    "dfaintsafe['lyrics'] = dfaintsafelyrics['string_values']\n",
    "#clean\n",
    "dfaintsafe=dfaintsafe.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 269,
   "metadata": {},
   "outputs": [],
   "source": [
    "#joinall dataframes for busta\n",
    "busta = pd.concat([dfwds,dftc, dfgen,dfbb, dfele,dfanarchy])\n",
    "busta=busta.reset_index()\n",
    "#add region data\n",
    "region= []\n",
    "for row in busta['name']:\n",
    "    region.append('eastcoast')\n",
    "\n",
    "busta['region'] = region\n",
    "\n",
    "busta.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\bustafinal.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 270,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    index                                               name duration_ms  \\\n",
      "0       0                                              Intro      284773   \n",
      "1       1                      The Whole World Looking at Me      206333   \n",
      "2       2                                    Survival Hungry      206293   \n",
      "3       3                              When Disaster Strikes      205000   \n",
      "4       4                                        So Hardcore      214640   \n",
      "5       5                                   Get High Tonight      231333   \n",
      "6       6                                         Turn It Up      251906   \n",
      "7       7             Put Your Hands Where My Eyes Could See      194293   \n",
      "8       8           There's Not a Problem My Squad Can't Fix      199973   \n",
      "9       9                           We Could Take It Outside      288426   \n",
      "10     10                                      Rhymes Galore      153373   \n",
      "11     11                Things We Be Doin' for Money, Pt. 1      155000   \n",
      "12     12                Things We Be Doin' for Money, Pt. 2      203000   \n",
      "13     13                                                One      263533   \n",
      "14     14                                          Dangerous      217640   \n",
      "15     15                                          Body Rock      245533   \n",
      "16     16                                   Get off My Block      238706   \n",
      "17     17                                              Outro      151026   \n",
      "18      0                                        Do My Thing      220106   \n",
      "19      1                             Everything Remains Raw      220826   \n",
      "20      2    Abandon Ship (feat. Rampage the Last Boy Scout)      362306   \n",
      "21      3                     Woo Hah!! Got You All in Check      272813   \n",
      "22      4                         It's a Party (feat. Zhane)      277440   \n",
      "23      5                                          Hot Fudge      309306   \n",
      "24      6                             Ill Vibe (feat. Q-Tip)      209760   \n",
      "25      8                                      Still Shining      177760   \n",
      "26      0                                              Intro      168360   \n",
      "27      1                               Everybody Rise Again      253773   \n",
      "28      2                                     As I Come Back      199893   \n",
      "29      3                                 Shut 'Em Down 2002      175800   \n",
      "..    ...                                                ...         ...   \n",
      "69     11                        Party Is Goin' on over Here      152066   \n",
      "70     12                                   Do the Bus a Bus      207733   \n",
      "71     13                                        Take It Off      187600   \n",
      "72     14         What's It Gonna Be?! (feat. Janet Jackson)      324400   \n",
      "73     15                          Hot Sh** Makin' Ya Bounce      209560   \n",
      "74     16                           What the F*** You Want!!      195200   \n",
      "75     17             This Means War!! (feat. Ozzy Osbourne)      275973   \n",
      "76     18                            Outro - The Burial Song      304493   \n",
      "77      0                Intro: The Current State of Anarchy      147373   \n",
      "78      1                                   Salute da Gods!!      226826   \n",
      "79      2                                      Enjoy da Ride      216600   \n",
      "80      3                           We Put It Down for Y'all      209600   \n",
      "81      4                                           Bladow!!      220373   \n",
      "82      5                                        Street Shit      234306   \n",
      "83      6                                         Live It Up      221960   \n",
      "84      7                                               Fire      169466   \n",
      "85      8                                          All Night      224133   \n",
      "86      9                               Show Me What You Got      223240   \n",
      "87     10                                          Get Out!!      183226   \n",
      "88     11  The Heist (feat. Raekwon the Chef, Ghostface K...      256866   \n",
      "89     12                                 A Trip out of Town      325626   \n",
      "90     13                                   How Much We Grew      294733   \n",
      "91     14        Here We Go Again (feat. The Flipmode Squad)      208600   \n",
      "92     15                                  We Comin' Through      179973   \n",
      "93     16          C'mon All My Niggaz, C'mon All My Bitches      174866   \n",
      "94     17                   Make Noise (feat. Lenny Kravitz)      197960   \n",
      "95     18                       Ready for War (feat. M.O.P.)      258373   \n",
      "96     19                     Why We Die (feat. DMX & Jay-Z)      239093   \n",
      "97     20                                            Anarchy      252666   \n",
      "98     21                                              Outro       45800   \n",
      "\n",
      "   popularity num_markets                                          album  \\\n",
      "0          21          78                          When Disaster Strikes   \n",
      "1          29          78                          When Disaster Strikes   \n",
      "2          27          78                          When Disaster Strikes   \n",
      "3          29          78                          When Disaster Strikes   \n",
      "4          29          78                          When Disaster Strikes   \n",
      "5          37          78                          When Disaster Strikes   \n",
      "6          32          78                          When Disaster Strikes   \n",
      "7          62          78                          When Disaster Strikes   \n",
      "8          28          78                          When Disaster Strikes   \n",
      "9          30          78                          When Disaster Strikes   \n",
      "10         31          78                          When Disaster Strikes   \n",
      "11         25          78                          When Disaster Strikes   \n",
      "12         24          78                          When Disaster Strikes   \n",
      "13         27          78                          When Disaster Strikes   \n",
      "14         41          78                          When Disaster Strikes   \n",
      "15         26          78                          When Disaster Strikes   \n",
      "16         27          78                          When Disaster Strikes   \n",
      "17         19          78                          When Disaster Strikes   \n",
      "18         31          77                                     The Coming   \n",
      "19         38          77                                     The Coming   \n",
      "20         32          77                                     The Coming   \n",
      "21         55          77                                     The Coming   \n",
      "22         41          77                                     The Coming   \n",
      "23         26          77                                     The Coming   \n",
      "24         39          77                                     The Coming   \n",
      "25         29          77                                     The Coming   \n",
      "26         23          78                                        Genesis   \n",
      "27         32          78                                        Genesis   \n",
      "28         39          78                                        Genesis   \n",
      "29         29          78                                        Genesis   \n",
      "..        ...         ...                                            ...   \n",
      "69         32          77  Extinction Level Event: The Final World Front   \n",
      "70         25          77  Extinction Level Event: The Final World Front   \n",
      "71         24          77  Extinction Level Event: The Final World Front   \n",
      "72         47          77  Extinction Level Event: The Final World Front   \n",
      "73         26          77  Extinction Level Event: The Final World Front   \n",
      "74         24          77  Extinction Level Event: The Final World Front   \n",
      "75         43          77  Extinction Level Event: The Final World Front   \n",
      "76         19          77  Extinction Level Event: The Final World Front   \n",
      "77         14          78                     Anarchy (Explicit Version)   \n",
      "78         25          78                     Anarchy (Explicit Version)   \n",
      "79         25          78                     Anarchy (Explicit Version)   \n",
      "80         20          78                     Anarchy (Explicit Version)   \n",
      "81         25          78                     Anarchy (Explicit Version)   \n",
      "82         22          78                     Anarchy (Explicit Version)   \n",
      "83         21          78                     Anarchy (Explicit Version)   \n",
      "84         26          78                     Anarchy (Explicit Version)   \n",
      "85         19          78                     Anarchy (Explicit Version)   \n",
      "86         36          78                     Anarchy (Explicit Version)   \n",
      "87         27          78                     Anarchy (Explicit Version)   \n",
      "88         25          78                     Anarchy (Explicit Version)   \n",
      "89         19          78                     Anarchy (Explicit Version)   \n",
      "90         17          78                     Anarchy (Explicit Version)   \n",
      "91         18          78                     Anarchy (Explicit Version)   \n",
      "92         17          78                     Anarchy (Explicit Version)   \n",
      "93         24          78                     Anarchy (Explicit Version)   \n",
      "94         23          78                     Anarchy (Explicit Version)   \n",
      "95         26          78                     Anarchy (Explicit Version)   \n",
      "96         27          78                     Anarchy (Explicit Version)   \n",
      "97         20          78                     Anarchy (Explicit Version)   \n",
      "98         12          78                     Anarchy (Explicit Version)   \n",
      "\n",
      "   disc_number is_explicit track_number release_date  ... mode  speechiness  \\\n",
      "0            1        True            1         1997  ...    1       0.4460   \n",
      "1            1        True            2         1997  ...    1       0.3030   \n",
      "2            1        True            3         1997  ...    0       0.3830   \n",
      "3            1        True            4         1997  ...    0       0.3450   \n",
      "4            1        True            5         1997  ...    0       0.5440   \n",
      "5            1        True            6         1997  ...    0       0.3940   \n",
      "6            1        True            7         1997  ...    1       0.2350   \n",
      "7            1        True            8         1997  ...    0       0.3030   \n",
      "8            1        True            9         1997  ...    0       0.3070   \n",
      "9            1        True           10         1997  ...    0       0.3860   \n",
      "10           1        True           11         1997  ...    1       0.4430   \n",
      "11           1        True           12         1997  ...    0       0.3570   \n",
      "12           1        True           13         1997  ...    1       0.4020   \n",
      "13           1        True           14         1997  ...    1       0.4780   \n",
      "14           1        True           15         1997  ...    0       0.2020   \n",
      "15           1        True           16         1997  ...    1       0.5050   \n",
      "16           1        True           17         1997  ...    0       0.4180   \n",
      "17           1        True           18         1997  ...    1       0.0763   \n",
      "18           1        True            2         1996  ...    1       0.4040   \n",
      "19           1        True            3         1996  ...    0       0.2810   \n",
      "20           1        True            4         1996  ...    0       0.2800   \n",
      "21           1        True            5         1996  ...    1       0.3240   \n",
      "22           1        True            6         1996  ...    0       0.2740   \n",
      "23           1        True            7         1996  ...    1       0.4260   \n",
      "24           1        True            8         1996  ...    1       0.4230   \n",
      "25           1        True           10         1996  ...    0       0.4750   \n",
      "26           1        True            1   2001-11-13  ...    0       0.7320   \n",
      "27           1        True            2   2001-11-13  ...    0       0.3170   \n",
      "28           1        True            3   2001-11-13  ...    1       0.2930   \n",
      "29           1        True            4   2001-11-13  ...    0       0.4120   \n",
      "..         ...         ...          ...          ...  ...  ...          ...   \n",
      "69           1        True           12         1998  ...    0       0.3680   \n",
      "70           1        True           13         1998  ...    0       0.2990   \n",
      "71           1        True           14         1998  ...    1       0.3250   \n",
      "72           1        True           15         1998  ...    1       0.0926   \n",
      "73           1        True           16         1998  ...    0       0.3570   \n",
      "74           1        True           17         1998  ...    1       0.3810   \n",
      "75           1        True           18         1998  ...    1       0.0839   \n",
      "76           1        True           19         1998  ...    1       0.3360   \n",
      "77           1        True            1   2000-06-09  ...    0       0.8930   \n",
      "78           1        True            2   2000-06-09  ...    0       0.2160   \n",
      "79           1        True            3   2000-06-09  ...    0       0.2600   \n",
      "80           1        True            4   2000-06-09  ...    1       0.3860   \n",
      "81           1        True            5   2000-06-09  ...    0       0.2790   \n",
      "82           1        True            6   2000-06-09  ...    0       0.3100   \n",
      "83           1        True            7   2000-06-09  ...    0       0.3450   \n",
      "84           1        True            8   2000-06-09  ...    1       0.2380   \n",
      "85           1        True            9   2000-06-09  ...    0       0.4350   \n",
      "86           1        True           10   2000-06-09  ...    1       0.1950   \n",
      "87           1        True           11   2000-06-09  ...    0       0.3760   \n",
      "88           1        True           12   2000-06-09  ...    1       0.3610   \n",
      "89           1        True           13   2000-06-09  ...    1       0.4940   \n",
      "90           1        True           14   2000-06-09  ...    0       0.5870   \n",
      "91           1        True           15   2000-06-09  ...    0       0.3430   \n",
      "92           1        True           16   2000-06-09  ...    1       0.3180   \n",
      "93           1        True           17   2000-06-09  ...    1       0.4470   \n",
      "94           1        True           18   2000-06-09  ...    0       0.3980   \n",
      "95           1        True           19   2000-06-09  ...    1       0.0764   \n",
      "96           1        True           20   2000-06-09  ...    1       0.3450   \n",
      "97           1        True           21   2000-06-09  ...    0       0.2430   \n",
      "98           1        True           22   2000-06-09  ...    1       0.6090   \n",
      "\n",
      "    acousticness instrumentalness  liveness valence    tempo  time_signature  \\\n",
      "0       0.046400         0.000000    0.1070  0.2810   76.878               4   \n",
      "1       0.021100         0.000002    0.1650  0.7230   84.910               4   \n",
      "2       0.152000         0.000000    0.0823  0.7780   84.909               4   \n",
      "3       0.364000         0.000006    0.1180  0.8050   81.766               4   \n",
      "4       0.013300         0.000000    0.0897  0.5950   88.727               4   \n",
      "5       0.098500         0.000000    0.2880  0.8780   87.962               4   \n",
      "6       0.018100         0.000000    0.2700  0.8330   90.729               4   \n",
      "7       0.008640         0.000004    0.0753  0.7150   99.498               4   \n",
      "8       0.007670         0.000000    0.1900  0.8320  102.520               4   \n",
      "9       0.109000         0.000000    0.2520  0.8320  176.233               4   \n",
      "10      0.000726         0.000229    0.2340  0.5370   86.260               4   \n",
      "11      0.040300         0.000001    0.2550  0.7360   85.461               4   \n",
      "12      0.241000         0.000000    0.5430  0.6160   85.944               4   \n",
      "13      0.572000         0.000003    0.1250  0.6720   88.090               4   \n",
      "14      0.009600         0.000000    0.1170  0.7640  103.268               4   \n",
      "15      0.041600         0.000002    0.1610  0.8030   86.257               4   \n",
      "16      0.064800         0.000001    0.1420  0.6470  171.928               4   \n",
      "17      0.035000         0.000000    0.1510  0.3910   76.877               4   \n",
      "18      0.009420         0.000000    0.2580  0.6730   81.852               4   \n",
      "19      0.091100         0.000000    0.3540  0.5170   86.908               4   \n",
      "20      0.139000         0.003640    0.0875  0.5830   95.266               4   \n",
      "21      0.098500         0.000000    0.3060  0.7860   92.022               4   \n",
      "22      0.082300         0.000000    0.1760  0.7860  178.033               4   \n",
      "23      0.035500         0.000004    0.5090  0.4660   82.231               4   \n",
      "24      0.147000         0.000003    0.1260  0.5220   93.059               4   \n",
      "25      0.025800         0.000336    0.2730  0.7920   92.549               4   \n",
      "26      0.187000         0.000000    0.2740  0.4940   87.141               4   \n",
      "27      0.096200         0.000000    0.2960  0.7020   92.214               4   \n",
      "28      0.226000         0.005200    0.1500  0.6730  109.134               5   \n",
      "29      0.055300         0.000002    0.2230  0.5200   92.178               4   \n",
      "..           ...              ...       ...     ...      ...             ...   \n",
      "69      0.018600         0.000067    0.0580  0.8990   67.617               3   \n",
      "70      0.001550         0.000180    0.1570  0.8480  103.336               4   \n",
      "71      0.055800         0.000000    0.3230  0.5380  104.958               4   \n",
      "72      0.204000         0.000000    0.1190  0.5190  116.438               4   \n",
      "73      0.012800         0.000000    0.1830  0.6620   95.115               4   \n",
      "74      0.109000         0.000000    0.1290  0.4230   82.176               1   \n",
      "75      0.003620         0.000000    0.3420  0.3290   80.339               4   \n",
      "76      0.040900         0.000011    0.1990  0.7140  164.484               4   \n",
      "77      0.492000         0.000000    0.1530  0.3010  129.302               4   \n",
      "78      0.018100         0.000413    0.0566  0.7450   91.030               4   \n",
      "79      0.045600         0.000000    0.1350  0.8240   90.837               4   \n",
      "80      0.048500         0.000000    0.0672  0.3700   86.932               4   \n",
      "81      0.039800         0.000500    0.0392  0.6480   88.357               4   \n",
      "82      0.003450         0.000000    0.2410  0.8490   82.195               4   \n",
      "83      0.003850         0.000001    0.1130  0.6200  105.930               4   \n",
      "84      0.131000         0.000101    0.3160  0.6490   93.146               4   \n",
      "85      0.006750         0.000000    0.0399  0.8860   90.196               4   \n",
      "86      0.000219         0.000000    0.0537  0.6760   72.126               1   \n",
      "87      0.002880         0.000042    0.0759  0.8250   90.771               4   \n",
      "88      0.000160         0.002950    0.3780  0.4190   91.990               4   \n",
      "89      0.026900         0.000000    0.7170  0.7650   90.175               4   \n",
      "90      0.054500         0.000000    0.0609  0.8220   78.126               4   \n",
      "91      0.027300         0.000000    0.3360  0.7200  100.106               4   \n",
      "92      0.013700         0.000149    0.0623  0.4940  168.165               4   \n",
      "93      0.026600         0.000000    0.0574  0.6340   71.630               4   \n",
      "94      0.159000         0.000000    0.6310  0.8180   99.236               4   \n",
      "95      0.047300         0.000000    0.1680  0.3860   84.456               4   \n",
      "96      0.000985         0.000000    0.1070  0.6530   80.636               4   \n",
      "97      0.017800         0.000000    0.2440  0.5560   89.196               4   \n",
      "98      0.350000         0.000000    0.2860  0.0388   93.226               3   \n",
      "\n",
      "                                               lyrics     region  \n",
      "0   [Skit: Girl & Man]\\nDaddy, what's it gonna be ...  eastcoast  \n",
      "1   [Chorus]\\nThe whole world lookin' at me\\nWatch...  eastcoast  \n",
      "2   [Chorus]\\nAll my niggas dirty\\nHungry and thir...  eastcoast  \n",
      "3   [Intro]\\nYeah, good god\\n\\n[Chorus]\\n(Tra-la-l...  eastcoast  \n",
      "4   [Intro]\\nZiggy, ziggy, ziggy, ziggy, ziggy, zi...  eastcoast  \n",
      "5   [Verse 1: Busta Rhymes]\\nBefore I set it off a...  eastcoast  \n",
      "6   [Verse 1]\\nWe grind ya'll\\nBounce back, open y...  eastcoast  \n",
      "7   [Intro]\\nAhh yeah, Flipmode\\nHere we come bout...  eastcoast  \n",
      "8   [Intro: Jamal]\\nC'mon, yeah.. villain\\nC'mon, ...  eastcoast  \n",
      "9   [Intro: Rampage (Baby Sham)]\\nThat's that join...  eastcoast  \n",
      "10  [Intro]\\nRhymes galore, rhymes galore\\nRhymes ...  eastcoast  \n",
      "11  Huh, yeah, fuck that\\nNiggas go out to get it\\...  eastcoast  \n",
      "12  [Rampage]:\\n\\nYo, it's 3:25 in the morning\\nMy...  eastcoast  \n",
      "13  [Intro: Busta Rhymes & Erykah Badu]\\nWhat I'm ...  eastcoast  \n",
      "14  [Intro]\\nHey, another one of them Flipmode joi...  eastcoast  \n",
      "15  [Intro: Puff Daddy]\\nSee when we get on shit w...  eastcoast  \n",
      "16  [Intro: Busta Rhymes]\\nJust get off my block\\n...  eastcoast  \n",
      "17  [Intro]\\nThe burial song\\nThe burial song\\nThe...  eastcoast  \n",
      "18  [Chorus]\\nWatch me get down and just do my thi...  eastcoast  \n",
      "19  [Intro]\\nWord up, let me just fuck with your m...  eastcoast  \n",
      "20  [Intro: Busta Rhymes]\\nUhhhh!! You don't know ...  eastcoast  \n",
      "21  [Chorus: Busta Rhymes]\\nWhen I step up in the ...  eastcoast  \n",
      "22  Right right right right\\nRight, Busta Rhymes e...  eastcoast  \n",
      "23  [Verse 1]\\nYo, I rearrange your whole chump ch...  eastcoast  \n",
      "24  [Verse 1: Busta Rhymes]\\nMy rhymes create life...  eastcoast  \n",
      "25  RRRRRROAW RRRR.. RRRRRROAW RRRRRRROAW\\nTil my ...  eastcoast  \n",
      "26  [Skit: Girl & Man]\\nDaddy, what's it gonna be ...  eastcoast  \n",
      "27  [Busta Rhymes]\\nLet's get it goin\\nYeah... yea...  eastcoast  \n",
      "28  Here we come yo, here we go (Its goin on now) ...  eastcoast  \n",
      "29  Yeah.. back by popular demand, it's about to g...  eastcoast  \n",
      "..                                                ...        ...  \n",
      "69  [Verse 1]\\nYo, ever since Jimmy Crack Corn\\nCr...  eastcoast  \n",
      "70  [Intro]\\nUh\\n\\n[Chorus]\\nThe Bus-a-Bus (Yeah)\\...  eastcoast  \n",
      "71  [Verse 1]\\nTake off your shoes\\nMake you dance...  eastcoast  \n",
      "72  [Intro: Busta Rhymes]\\nBusta Rhymes, Janet Jac...  eastcoast  \n",
      "73  Yeah yeah yeah yeah yeah\\nJust bounce around\\n...  eastcoast  \n",
      "74  Flipmode motherfuckas\\nFlipmode motherfuckas\\n...  eastcoast  \n",
      "75  [Intro: Busta Rhymes]\\nJust make sure them, th...  eastcoast  \n",
      "76  [Intro]\\nThe burial song\\nThe burial song\\nThe...  eastcoast  \n",
      "77  [Verse]\\nAnd so the third celestial sphere in ...  eastcoast  \n",
      "78  [Intro]\\nYeah, yeah, yeah\\nThe Anarchy, Busta ...  eastcoast  \n",
      "79  [Intro]\\nWe just sparkle now\\nYeah, we just sp...  eastcoast  \n",
      "80  [Intro]\\nShit is about to get real serious\\nBu...  eastcoast  \n",
      "81  [Intro]\\nHuh, yeah yeah yeah yeah yeah yeah ye...  eastcoast  \n",
      "82  [Intro]\\nYeah, this one appears to be very for...  eastcoast  \n",
      "83  [Intro]\\nYeah\\nPick up the pace now\\nC'mon\\nYe...  eastcoast  \n",
      "84  [Intro: Pharrell Williams]\\nWhat you say your ...  eastcoast  \n",
      "85  [Intro]\\nTurn it up (ha ha ha)\\nFlipmode (ha h...  eastcoast  \n",
      "86  [Intro]\\nHoo, yeah, it's another one of them m...  eastcoast  \n",
      "87  [Intro]\\nYeah, yeah, yeah (Get out)\\nSuch a re...  eastcoast  \n",
      "88  [Intro: Raekwon]\\nStraight up, nigga, I'm a mo...  eastcoast  \n",
      "89  [Skit]\\nI can't wait to make my trip outta tow...  eastcoast  \n",
      "90  [Intro]\\nYeah, this next joint right here\\nIs ...  eastcoast  \n",
      "91  [Round 1: Murda Mook]\\nAy look, the cowboy ain...  eastcoast  \n",
      "92  [Intro]\\nYeah\\nSerious now\\nSerious\\n\\n[Verse ...  eastcoast  \n",
      "93  Yo\\nAll my niggas in the place\\nWhat now\\nTalk...  eastcoast  \n",
      "94  [Intro]\\nHoo, hah, hoo, hah\\nYeah, yeah, yeah,...  eastcoast  \n",
      "95  [Intro: Busta Rhymes]\\nTri-lateral commission\\...  eastcoast  \n",
      "96  [Intro: DMX]\\nUhh\\nThat's some shit that that ...  eastcoast  \n",
      "97  [Chorus]\\nWhat this world is comin' to, to, to...  eastcoast  \n",
      "98  [Intro]\\nThe burial song\\nThe burial song\\nThe...  eastcoast  \n",
      "\n",
      "[99 rows x 25 columns]\n"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# E-40\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 261,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotify:artist:3crnzLy8R4lVwaigKEOz7V\n"
     ]
    }
   ],
   "source": [
    "#get next artist data\n",
    "\n",
    "results = sp.search(\"artist:E-40\")\n",
    "artist_id = results['tracks']['items'][0]['artists'][0]['uri']\n",
    "print(artist_id)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                           name duration_ms popularity num_markets  \\\n",
      "0                       Ballhog      142877         34           2   \n",
      "1            The Pots & Pan Man      155130         33           2   \n",
      "2                       Winning      162671         36           2   \n",
      "3            Who You Talking To      194445         33           2   \n",
      "4                        Wicked      155768         35           2   \n",
      "5     Ain't Talkin Bout Nothing      194718         40           2   \n",
      "6                     One Night      235096         37           2   \n",
      "7                         Relax      162123         41           2   \n",
      "8               The Pack Attack      254945         30           2   \n",
      "9                        Dennys      148955         28           2   \n",
      "10                   These Days      162780         35           2   \n",
      "11           When Life Shows Up      261720         29           2   \n",
      "12                      Ballhog      142906          3           2   \n",
      "13           The Pots & Pan Man      155160          2           2   \n",
      "14                      Winning      162533          2           2   \n",
      "15           Who You Talking To      194480          2           2   \n",
      "16                       Wicked      155813          2           2   \n",
      "17    Ain't Talkin Bout Nothing      194760          9           2   \n",
      "18                    One Night      235120          2           2   \n",
      "19                        Relax      162160          2           2   \n",
      "20              The Pack Attack      254973          2           2   \n",
      "21                       Dennys      149000          2           2   \n",
      "22                   These Days      162760          4           2   \n",
      "23           When Life Shows Up      240946          9           2   \n",
      "24                 Life Lessons      175240         47           2   \n",
      "25           Straight Like That      200030         43           2   \n",
      "26                          Boy      221287         46           2   \n",
      "27        Guilty By Association      258133         34           2   \n",
      "28                Carpal Tunnel      210847         34           2   \n",
      "29           Stompdown - Skit 1       20748          0           2   \n",
      "..                          ...         ...        ...         ...   \n",
      "914        Outsmart The Po Po's      265598         12          79   \n",
      "915                 Hide-N-Seek      265305          8          79   \n",
      "916                Carlos Rossi      287265         19          79   \n",
      "917                     Tanji 2      223200          9          79   \n",
      "918             Let Him Have It      293691         12          79   \n",
      "919                   Questions       40465          7          79   \n",
      "920               Extra Mannish      243705         12          79   \n",
      "921                   Get Em Up      229665          6          79   \n",
      "922            Nuttin Ass N*gga      256958          9          79   \n",
      "923           Rasta Funky Style      269504          6          79   \n",
      "924                   Shots Out      268518          5          79   \n",
      "925              Drought Season      260493         14          19   \n",
      "926                   Rat Heads      312906         11          19   \n",
      "927                     Federal      284266         15          19   \n",
      "928        Outsmart the Po Po's      266466         14          19   \n",
      "929                Hide 'N Seek      263093          9          19   \n",
      "930             Let Him Have It      293666         12          19   \n",
      "931                   Questions       40440          8          19   \n",
      "932                Extra Manish      249866         13          19   \n",
      "933                Carlos Rossi      285560         20          19   \n",
      "934            Nuttin Ass Nigga      247840         10          19   \n",
      "935                  Shouts Out      269933          6          19   \n",
      "936            Mail Man - Intro      105650          9          79   \n",
      "937                  Neva Broke      300140         14          79   \n",
      "938       Bring The Yellow Tape      267864         14          79   \n",
      "939       Practice Lookin' Hard      276920         22          79   \n",
      "940         Where The Party At?      294892         13          79   \n",
      "941          Captain Save A Hoe      288297         41          79   \n",
      "942                The Mail Man      231315         13          79   \n",
      "943  Captain Save A Hoe - Remix       29812          0          79   \n",
      "\n",
      "                                    album disc_number is_explicit  \\\n",
      "0                         The Gift Of Gab           1        True   \n",
      "1                         The Gift Of Gab           1        True   \n",
      "2                         The Gift Of Gab           1        True   \n",
      "3                         The Gift Of Gab           1        True   \n",
      "4                         The Gift Of Gab           1        True   \n",
      "5                         The Gift Of Gab           1        True   \n",
      "6                         The Gift Of Gab           1        True   \n",
      "7                         The Gift Of Gab           1        True   \n",
      "8                         The Gift Of Gab           1        True   \n",
      "9                         The Gift Of Gab           1        True   \n",
      "10                        The Gift Of Gab           1        True   \n",
      "11                        The Gift Of Gab           1        True   \n",
      "12                        The Gift Of Gab           1       False   \n",
      "13                        The Gift Of Gab           1       False   \n",
      "14                        The Gift Of Gab           1       False   \n",
      "15                        The Gift Of Gab           1       False   \n",
      "16                        The Gift Of Gab           1       False   \n",
      "17                        The Gift Of Gab           1       False   \n",
      "18                        The Gift Of Gab           1       False   \n",
      "19                        The Gift Of Gab           1       False   \n",
      "20                        The Gift Of Gab           1       False   \n",
      "21                        The Gift Of Gab           1       False   \n",
      "22                        The Gift Of Gab           1       False   \n",
      "23                        The Gift Of Gab           1       False   \n",
      "24                Connected And Respected           1        True   \n",
      "25                Connected And Respected           1        True   \n",
      "26                Connected And Respected           1        True   \n",
      "27                Connected And Respected           1        True   \n",
      "28                Connected And Respected           1        True   \n",
      "29                Connected And Respected           1        True   \n",
      "..                                    ...         ...         ...   \n",
      "914        Federal, Original Master Peace           1        True   \n",
      "915        Federal, Original Master Peace           1        True   \n",
      "916        Federal, Original Master Peace           1        True   \n",
      "917        Federal, Original Master Peace           1        True   \n",
      "918        Federal, Original Master Peace           1        True   \n",
      "919        Federal, Original Master Peace           1        True   \n",
      "920        Federal, Original Master Peace           1        True   \n",
      "921        Federal, Original Master Peace           1        True   \n",
      "922        Federal, Original Master Peace           1        True   \n",
      "923        Federal, Original Master Peace           1        True   \n",
      "924        Federal, Original Master Peace           1        True   \n",
      "925                               Federal           1        True   \n",
      "926                               Federal           1        True   \n",
      "927                               Federal           1        True   \n",
      "928                               Federal           1       False   \n",
      "929                               Federal           1        True   \n",
      "930                               Federal           1        True   \n",
      "931                               Federal           1        True   \n",
      "932                               Federal           1        True   \n",
      "933                               Federal           1        True   \n",
      "934                               Federal           1        True   \n",
      "935                               Federal           1        True   \n",
      "936  The Mail Man (Original Master Peace)           1        True   \n",
      "937  The Mail Man (Original Master Peace)           1        True   \n",
      "938  The Mail Man (Original Master Peace)           1        True   \n",
      "939  The Mail Man (Original Master Peace)           1        True   \n",
      "940  The Mail Man (Original Master Peace)           1        True   \n",
      "941  The Mail Man (Original Master Peace)           1        True   \n",
      "942  The Mail Man (Original Master Peace)           1        True   \n",
      "943  The Mail Man (Original Master Peace)           1        True   \n",
      "\n",
      "    track_number release_date artist  ...  key  loudness mode  speechiness  \\\n",
      "0              1   2018-08-24   E-40  ...    2    -4.957    0       0.3780   \n",
      "1              2   2018-08-24   E-40  ...    1    -5.219    1       0.2420   \n",
      "2              3   2018-08-24   E-40  ...    1    -6.440    1       0.2550   \n",
      "3              4   2018-08-24   E-40  ...    2    -4.178    1       0.1930   \n",
      "4              5   2018-08-24   E-40  ...    2    -8.503    1       0.3090   \n",
      "5              6   2018-08-24   E-40  ...    5    -5.144    0       0.3570   \n",
      "6              7   2018-08-24   E-40  ...    1    -4.749    0       0.0758   \n",
      "7              8   2018-08-24   E-40  ...    5    -5.657    0       0.2000   \n",
      "8              9   2018-08-24   E-40  ...   10    -7.355    1       0.2510   \n",
      "9             10   2018-08-24   E-40  ...    1    -6.596    1       0.4490   \n",
      "10            11   2018-08-24   E-40  ...    5    -5.326    0       0.2810   \n",
      "11            12   2018-08-24   E-40  ...    9    -6.042    0       0.6670   \n",
      "12             1   2018-08-23   E-40  ...    2    -5.190    0       0.3540   \n",
      "13             2   2018-08-23   E-40  ...    1    -5.263    1       0.2880   \n",
      "14             3   2018-08-23   E-40  ...    1    -6.668    1       0.2700   \n",
      "15             4   2018-08-23   E-40  ...    7    -4.412    1       0.2910   \n",
      "16             5   2018-08-23   E-40  ...    2    -8.989    1       0.3110   \n",
      "17             6   2018-08-23   E-40  ...    1    -5.464    1       0.3410   \n",
      "18             7   2018-08-23   E-40  ...    1    -4.851    0       0.1180   \n",
      "19             8   2018-08-23   E-40  ...    5    -5.868    0       0.2050   \n",
      "20             9   2018-08-23   E-40  ...   10    -7.556    1       0.2760   \n",
      "21            10   2018-08-23   E-40  ...    1    -6.751    1       0.3610   \n",
      "22            11   2018-08-23   E-40  ...    5    -5.394    0       0.2480   \n",
      "23            12   2018-08-23   E-40  ...    9    -5.875    0       0.8100   \n",
      "24             1   2018-04-06   E-40  ...    2    -6.101    1       0.2860   \n",
      "25             2   2018-04-06   E-40  ...    6    -5.139    1       0.2880   \n",
      "26             3   2018-04-06   E-40  ...    6    -4.157    0       0.3000   \n",
      "27             4   2018-04-06   E-40  ...    5    -3.958    0       0.3890   \n",
      "28             5   2018-04-06   E-40  ...    1    -5.207    0       0.4840   \n",
      "29             6   2018-04-06   E-40  ...    4   -11.991    1       0.9290   \n",
      "..           ...          ...    ...  ...  ...       ...  ...          ...   \n",
      "914            4         1993   E-40  ...    6   -14.692    1       0.2500   \n",
      "915            5         1993   E-40  ...    1   -10.864    1       0.1320   \n",
      "916            6         1993   E-40  ...    9   -11.772    1       0.4200   \n",
      "917            7         1993   E-40  ...    1   -13.183    1       0.2780   \n",
      "918            8         1993   E-40  ...    7   -11.904    1       0.3170   \n",
      "919            9         1993   E-40  ...    4   -18.212    0       0.4270   \n",
      "920           10         1993   E-40  ...    6   -13.117    1       0.3340   \n",
      "921           11         1993   E-40  ...    6   -10.919    0       0.2900   \n",
      "922           12         1993   E-40  ...    7   -12.991    1       0.1630   \n",
      "923           13         1993   E-40  ...    7   -13.054    1       0.3820   \n",
      "924           14         1993   E-40  ...    6   -10.569    1       0.1910   \n",
      "925            1         1993   E-40  ...    9   -12.016    1       0.3370   \n",
      "926            2         1993   E-40  ...    4   -11.654    0       0.2900   \n",
      "927            3         1993   E-40  ...    6   -12.430    0       0.2460   \n",
      "928            4         1993   E-40  ...    6   -11.908    1       0.2270   \n",
      "929            5         1993   E-40  ...    1    -9.483    0       0.1260   \n",
      "930            6         1993   E-40  ...    7   -10.366    1       0.3020   \n",
      "931            7         1993   E-40  ...    1   -16.449    1       0.3860   \n",
      "932            8         1993   E-40  ...    3    -9.136    0       0.2740   \n",
      "933            9         1993   E-40  ...    9   -10.819    1       0.3700   \n",
      "934           10         1993   E-40  ...    1    -7.755    1       0.1610   \n",
      "935           11         1993   E-40  ...    6    -9.643    1       0.1930   \n",
      "936            1         1993   E-40  ...   11   -20.914    0       0.2260   \n",
      "937            2         1993   E-40  ...   11   -20.811    0       0.2730   \n",
      "938            3         1993   E-40  ...    4   -20.467    0       0.3210   \n",
      "939            4         1993   E-40  ...    7   -21.806    1       0.4520   \n",
      "940            5         1993   E-40  ...   11   -17.876    0       0.0949   \n",
      "941            6         1993   E-40  ...    7   -19.552    1       0.2520   \n",
      "942            7         1993   E-40  ...    6   -21.920    0       0.3300   \n",
      "943            8         1993   E-40  ...    8   -23.430    0       0.5160   \n",
      "\n",
      "    acousticness  instrumentalness  liveness  valence    tempo  time_signature  \n",
      "0       0.235000          0.000009    0.0815   0.5510   96.617               4  \n",
      "1       0.067600          0.000000    0.0929   0.2820   95.973               4  \n",
      "2       0.073300          0.000005    0.0895   0.1880  104.060               4  \n",
      "3       0.022000          0.004490    0.1660   0.7150  101.977               4  \n",
      "4       0.103000          0.000580    0.0992   0.4700  100.017               4  \n",
      "5       0.188000          0.000000    0.7700   0.6720  103.014               4  \n",
      "6       0.152000          0.000101    0.1160   0.1860  133.095               5  \n",
      "7       0.250000          0.000000    0.3300   0.4330   96.995               4  \n",
      "8       0.052800          0.000219    0.5900   0.0778   96.963               4  \n",
      "9       0.059800          0.001660    0.0665   0.4500  181.876               4  \n",
      "10      0.052700          0.000001    0.1470   0.6910  108.023               4  \n",
      "11      0.336000          0.000000    0.1360   0.7520   91.963               4  \n",
      "12      0.242000          0.000008    0.0771   0.5640   96.843               4  \n",
      "13      0.071400          0.000000    0.0747   0.2420   95.808               4  \n",
      "14      0.072700          0.000012    0.0877   0.2190  104.010               4  \n",
      "15      0.022600          0.013000    0.1670   0.6960  101.678               4  \n",
      "16      0.117000          0.001930    0.0938   0.4540  100.015               4  \n",
      "17      0.122000          0.000000    0.7860   0.5960  103.042               4  \n",
      "18      0.187000          0.000027    0.1290   0.1600  100.167               4  \n",
      "19      0.218000          0.000004    0.3560   0.4500   96.955               4  \n",
      "20      0.049700          0.000459    0.6080   0.0762   96.794               4  \n",
      "21      0.061800          0.000208    0.0675   0.3910   91.059               4  \n",
      "22      0.042000          0.000004    0.1110   0.7120  108.034               4  \n",
      "23      0.254000          0.000000    0.0844   0.6000   91.024               4  \n",
      "24      0.153000          0.000065    0.0490   0.6460  100.920               4  \n",
      "25      0.234000          0.000083    0.0955   0.7730  101.964               4  \n",
      "26      0.036700          0.000000    0.0912   0.6080   95.990               4  \n",
      "27      0.009270          0.000016    0.0890   0.4140  171.813               4  \n",
      "28      0.200000          0.000064    0.1200   0.3820   98.536               4  \n",
      "29      0.847000          0.000000    0.3470   0.9710  107.387               3  \n",
      "..           ...               ...       ...      ...      ...             ...  \n",
      "914     0.001130          0.000009    0.0914   0.7940   90.068               4  \n",
      "915     0.031100          0.000019    0.0383   0.4790   95.022               4  \n",
      "916     0.014200          0.000137    0.0897   0.6890  143.998               4  \n",
      "917     0.017200          0.000000    0.1420   0.4220  103.038               4  \n",
      "918     0.008360          0.000000    0.2420   0.6100  170.106               4  \n",
      "919     0.004370          0.000000    0.1820   0.3590  170.170               4  \n",
      "920     0.004010          0.000042    0.1100   0.5140  172.215               4  \n",
      "921     0.012400          0.000000    0.0826   0.8080  110.280               4  \n",
      "922     0.008820          0.000034    0.2780   0.4630   93.142               4  \n",
      "923     0.079800          0.000000    0.1680   0.6870   82.982               4  \n",
      "924     0.031900          0.000001    0.1130   0.8620   89.928               4  \n",
      "925     0.003690          0.000000    0.0761   0.4790   92.173               4  \n",
      "926     0.040200          0.000899    0.1120   0.6590   81.972               4  \n",
      "927     0.002890          0.000051    0.0584   0.3250   90.022               4  \n",
      "928     0.000848          0.000139    0.0847   0.7620   90.083               4  \n",
      "929     0.039000          0.001360    0.1010   0.7280   95.035               4  \n",
      "930     0.008770          0.000000    0.2280   0.5940  170.357               4  \n",
      "931     0.008090          0.000000    0.1570   0.3890   85.145               4  \n",
      "932     0.002040          0.029000    0.0774   0.6700  170.152               4  \n",
      "933     0.010100          0.000215    0.0851   0.6740  144.032               4  \n",
      "934     0.007170          0.000342    0.0867   0.3830   93.046               4  \n",
      "935     0.015200          0.000195    0.0619   0.8590   90.101               4  \n",
      "936     0.013100          0.000014    0.1140   0.4130  146.029               3  \n",
      "937     0.049100          0.000000    0.1050   0.4220   95.062               4  \n",
      "938     0.368000          0.000000    0.1420   0.7470   79.993               4  \n",
      "939     0.185000          0.000000    0.1120   0.7120   68.624               3  \n",
      "940     0.232000          0.000652    0.3450   0.7640   95.062               4  \n",
      "941     0.057900          0.000000    0.2230   0.5380   82.996               4  \n",
      "942     0.166000          0.000033    0.1210   0.6150   87.993               4  \n",
      "943     0.737000          0.000000    0.5860   0.6500   90.043               3  \n",
      "\n",
      "[944 rows x 22 columns]\n"
     ]
    }
   ],
   "source": [
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://api.spotify.com/v1/artists/3crnzLy8R4lVwaigKEOz7V/albums?offset=50&limit=50&include_groups=album,single,compilation,appears_on&market=US\n",
      "50\n",
      "spotify:album:4LcMr2mgEsdNSNSkubkvvG\n",
      "12 \t The Gift Of Gab\n",
      "12 \t The Gift Of Gab\n",
      "19 \t Connected And Respected\n",
      "19 \t Connected and Respected\n",
      "21 \t E-40 - The D-Boy Diary: Book 1\n",
      "44 \t The D-Boy Diary (Deluxe Edition)\n",
      "21 \t The D-Boy Diary: Book 1\n",
      "21 \t The D-Boy Diary: Book 1\n",
      "21 \t The D-Boy Diary: Book 2\n",
      "21 \t The D-Boy Diary: Book 2\n",
      "7 \t Poverty And Prosperity\n",
      "38 \t Bosses in the Booth & Ghetto Famous (Deluxe Edition)\n",
      "28 \t Sharp On All 4 Corners (Deluxe Edition)\n",
      "14 \t Sharp On All 4 Corners: Corner 1\n",
      "14 \t Sharp On All 4 Corners: Corner 2\n",
      "15 \t The Block Brochure: Welcome To The Soil (Parts 4)\n",
      "15 \t The Block Brochure: Welcome To The Soil (Parts 5)\n",
      "15 \t The Block Brochure: Welcome To The Soil (Parts 6)\n",
      "18 \t The Block Brochure: Welcome To The Soil 3\n",
      "18 \t The Block Brochure: Welcome To The Soil 1\n",
      "34 \t History: Function & Mob Music (Deluxe Version)\n",
      "18 \t The Block Brochure: Welcome To The Soil 2\n",
      "17 \t History: Function Music\n",
      "17 \t History: Mob Music\n",
      "20 \t Revenue Retrievin': Graveyard Shift\n",
      "20 \t Revenue Retrievin': Overtime Shift\n",
      "14 \t Bad Influence (Collector's Edition)\n",
      "42 \t Revenue Retrievin': Day Shift & Night Shift (Deluxe)\n",
      "19 \t Revenue Retrievin': Night Shift\n",
      "19 \t Revenue Retrievin': Day Shift\n",
      "19 \t The Ball Street Journal (Explicit Version)\n",
      "19 \t The Ball Street Journal\n",
      "15 \t Sick Wid It Umbrella (The Complete Second Season): The Machine\n",
      "20 \t My Ghetto Report Card\n",
      "20 \t My Ghetto Report Card\n",
      "16 \t E-40 Presents: The Bay Bridges Compilation\n",
      "15 \t The Best of E-40: Yesterday, Today and Tomorrow\n",
      "18 \t Breakin News\n",
      "16 \t \"Obstacles\" Soundtrack\n",
      "18 \t The Ballatician - Grit & Grind\n",
      "16 \t Loyalty & Betrayal\n",
      "17 \t Charlie Hustle: Blueprint Of A Self-Made Millionaire\n",
      "17 \t Charlie Hustle: The Blueprint of a Self-Made Millionaire\n",
      "16 \t Tha Hall Of Game\n",
      "16 \t In A Major Way\n",
      "24 \t The Element Of Surprise\n",
      "16 \t Down And Dirty\n",
      "14 \t Federal, Original Master Peace\n",
      "11 \t Federal\n",
      "8 \t The Mail Man (Original Master Peace)\n",
      "name                        Ballhog\n",
      "duration_ms                  142877\n",
      "popularity                       34\n",
      "num_markets                       2\n",
      "album               The Gift Of Gab\n",
      "disc_number                       1\n",
      "is_explicit                    True\n",
      "track_number                      1\n",
      "release_date             2018-08-24\n",
      "artist                         E-40\n",
      "danceability                  0.829\n",
      "energy                        0.818\n",
      "key                               2\n",
      "loudness                     -4.957\n",
      "mode                              0\n",
      "speechiness                   0.378\n",
      "acousticness                  0.235\n",
      "instrumentalness           9.25e-06\n",
      "liveness                     0.0815\n",
      "valence                       0.551\n",
      "tempo                        96.617\n",
      "time_signature                    4\n",
      "Name: 0, dtype: object\n"
     ]
    }
   ],
   "source": [
    "#get album details\n",
    "albums = sp.artist_albums('3crnzLy8R4lVwaigKEOz7V', country=\"US\", limit=50)\n",
    "print(albums['next'])\n",
    "\n",
    "#collect album details and print\n",
    "album_ids = [album['uri'] for album in albums['items']]\n",
    "print(len(album_ids))\n",
    "print(album_ids[0])\n",
    "\n",
    "all_tracks = []\n",
    "for album_id in album_ids:\n",
    "    tracks = sp.album_tracks(album_id, limit=50)\n",
    "    all_tracks.append(tracks)\n",
    "    \n",
    "for tracks, album in zip(all_tracks, albums.get('items')):\n",
    "    print(\n",
    "        len(tracks.get('items')),\n",
    "        \"\\t\",\n",
    "        album.get('name')\n",
    "    )\n",
    "\n",
    "#create df\n",
    "track_ids = []\n",
    "for tracks in all_tracks:\n",
    "    album_tracks = []\n",
    "    for track in tracks.get('items'):\n",
    "        album_tracks.append(track.get('uri'))\n",
    "    track_ids.append(album_tracks)\n",
    "\n",
    "\n",
    "track_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    tracks = sp.tracks(track_id_list)\n",
    "    track_objects.append(tracks)\n",
    "\n",
    "#collecting other features\n",
    "\n",
    "audio_feature_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    features = sp.audio_features(track_id_list)\n",
    "    audio_feature_objects.append(features)\n",
    "\n",
    "spotify_data = {\n",
    "    \"audio_features\": audio_feature_objects,\n",
    "    \"tracks\": track_objects\n",
    "}\n",
    "\n",
    "df = pd.DataFrame(columns=[\n",
    "    'name',\n",
    "    'duration_ms',\n",
    "    'popularity',\n",
    "    'num_markets',\n",
    "    'album',\n",
    "    'disc_number',\n",
    "    'is_explicit',\n",
    "    'track_number',\n",
    "    'release_date',\n",
    "    'artist',\n",
    "    'danceability',\n",
    "    'energy',\n",
    "    'key',\n",
    "    'loudness',\n",
    "    'mode',\n",
    "    'speechiness',\n",
    "    'acousticness',\n",
    "    'instrumentalness',\n",
    "    'liveness',\n",
    "    'valence',\n",
    "    'tempo',\n",
    "    'time_signature',\n",
    "])\n",
    "for album_info, album_features in zip(\n",
    "        spotify_data.get('tracks'), \n",
    "        spotify_data.get('audio_features')\n",
    "        ):\n",
    "    for track_info, track_features in zip(\n",
    "        album_info.get('tracks'),\n",
    "        album_features\n",
    "        ):\n",
    "        y = {\n",
    "            'name': track_info['name'],\n",
    "            'duration_ms': track_info['duration_ms'],\n",
    "            'popularity': track_info['popularity'],\n",
    "            'num_markets': len(track_info['available_markets']),\n",
    "            'album': track_info['album']['name'],\n",
    "            'disc_number': track_info['disc_number'],\n",
    "            'is_explicit': track_info['explicit'],\n",
    "            'track_number': track_info['track_number'],\n",
    "            'release_date': track_info['album']['release_date'],\n",
    "            'artist': track_info['artists'][0]['name'],\n",
    "            'danceability': track_features['danceability'],\n",
    "            'energy': track_features['energy'],\n",
    "            'key': track_features['key'],\n",
    "            'loudness': track_features['loudness'],\n",
    "            'mode': track_features['mode'],\n",
    "            'speechiness': track_features['speechiness'],\n",
    "            'acousticness': track_features['acousticness'],\n",
    "            'instrumentalness': track_features['instrumentalness'],\n",
    "            'liveness': track_features['liveness'],\n",
    "            'valence': track_features['valence'],\n",
    "            'tempo': track_features['tempo'],\n",
    "            'time_signature': track_features['time_signature'],\n",
    "        }\n",
    "        df = df.append(y, ignore_index=True)\n",
    "print(df.iloc[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Yay Area\" by E-40...\n",
      "Done.\n",
      "Searching for \"Tell Me When to Go (feat. Keak da Sneak)\" by E-40...\n",
      "Done.\n",
      "Searching for \"Muscle Cars (feat. Keak da Sneak & Turf Talk)\" by E-40...\n",
      "Done.\n",
      "Searching for \"Go Hard or Go Home (feat. The Federation)\" by E-40...\n",
      "No results found for: 'Go Hard or Go Home (feat. The Federation) E-40'\n",
      "Searching for \"Sick Wid It II (feat. Turf Talk)\" by E-40...\n",
      "Done.\n",
      "Searching for \"They Might Be Taping\" by E-40...\n",
      "Done.\n",
      "Searching for \"White Gurl (feat. Bun B, Pimp C of UGK & Juelz Santana)\" by E-40...\n",
      "No results found for: 'White Gurl (feat. Bun B, Pimp C of UGK & Juelz Santana) E-40'\n",
      "Searching for \"U and Dat (feat. T. Pain & Kandi Girl)\" by E-40...\n",
      "Done.\n",
      "Searching for \"Yee (feat. Too $hort & Budda)\" by E-40...\n",
      "Done.\n",
      "Searching for \"Gimme Head (feat. Al Kapone & Bosko)\" by E-40...\n",
      "Done.\n",
      "Searching for \"She Say She Loves Me (feat. 8 Ball & Bun B)\" by E-40...\n",
      "No results found for: 'She Say She Loves Me (feat. 8 Ball & Bun B) E-40'\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for ghettorep\n",
    "#clean to album level\n",
    "dfghettorep= df[df['album'] == 'My Ghetto Report Card']\n",
    "dfghettorep = dfghettorep[dfghettorep['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "dfghettorep_list=[]\n",
    "for row in dfghettorep['name']:\n",
    "\n",
    "    dfghettorep_list.append(getLyric(row, 'E-40')),\n",
    "\n",
    "dfghettoreplyrics = pd.DataFrame(dfghettorep_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "dfghettorep= dfghettorep.reset_index()\n",
    "#add lyrics\n",
    "dfghettorep['lyrics'] = dfghettoreplyrics['string_values']\n",
    "#clean\n",
    "dfghettorep=dfghettorep.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 274,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "dfghettorep = dfghettorep.drop([3,6,10])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 276,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Intro\" by E-40...\n",
      "Done.\n",
      "Searching for \"Chip In Da Phone\" by E-40...\n",
      "Done.\n",
      "Searching for \"Da Bumble\" by E-40...\n",
      "Done.\n",
      "Searching for \"Sideways (feat. B-Legit & Mac Shon)\" by E-40...\n",
      "No results found for: 'Sideways (feat. B-Legit & Mac Shon) E-40'\n",
      "Searching for \"Spittin'\" by E-40...\n",
      "Done.\n",
      "Searching for \"Sprinkle Me (feat. Suga-T)\" by E-40...\n",
      "Done.\n",
      "Searching for \"Outta Bounds\" by E-40...\n",
      "Done.\n",
      "Searching for \"Dusted 'N' Disgusted (feat. 2Pac, Mac Mall & Spice 1)\" by E-40...\n",
      "Done.\n",
      "Searching for \"1-Luv (feat. Leviti)\" by E-40...\n",
      "Done.\n",
      "Searching for \"Smoke 'N' Drank\" by E-40...\n",
      "Done.\n",
      "Searching for \"Dey Ain't No\" by E-40...\n",
      "Done.\n",
      "Searching for \"Fed\" by E-40...\n",
      "Done.\n",
      "Searching for \"H.I. Double L.\" by E-40...\n",
      "Done.\n",
      "Searching for \"Bootsee\" by E-40...\n",
      "Done.\n",
      "Searching for \"It's All Bad\" by E-40...\n",
      "Done.\n",
      "Searching for \"Outro\" by E-40...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for mway\n",
    "#clean to album level\n",
    "dfmway= df[df['album'] == 'In A Major Way']\n",
    "dfmway = dfmway[dfmway['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "dfmway_list=[]\n",
    "for row in dfmway['name']:\n",
    "\n",
    "    dfmway_list.append(getLyric(row, 'E-40')),\n",
    "\n",
    "dfmwaylyrics = pd.DataFrame(dfmway_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "dfmway= dfmway.reset_index()\n",
    "#add lyrics\n",
    "dfmway['lyrics'] = dfmwaylyrics['string_values']\n",
    "#clean\n",
    "dfmway=dfmway.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 278,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"The Ambassador\" by E-40...\n",
      "Done.\n",
      "Searching for \"I'm on One\" by E-40...\n",
      "Done.\n",
      "Searching for \"Break Ya Ankles (feat. Shawty Lo)\" by E-40...\n",
      "Done.\n",
      "Searching for \"Got Rich Twice (feat. Turf Talk)\" by E-40...\n",
      "Done.\n",
      "Searching for \"Pain No More (feat. The Game & Snoop Dogg)\" by E-40...\n",
      "Done.\n",
      "Searching for \"Tell It Like It Is\" by E-40...\n",
      "Done.\n",
      "Searching for \"Give Her the Keys (feat. T-Pain)\" by E-40...\n",
      "Done.\n",
      "Searching for \"Wake It Up (feat. Akon)\" by E-40...\n",
      "Done.\n",
      "Searching for \"40 Water\" by E-40...\n",
      "Done.\n",
      "Searching for \"Poor Man's Hydraulics\" by E-40...\n",
      "Done.\n",
      "Searching for \"The Recipe (feat. Bun B & Gucci Mane)\" by E-40...\n",
      "Done.\n",
      "Searching for \"Hood Boy\" by E-40...\n",
      "Done.\n",
      "Searching for \"Earl (feat. Ice T)\" by E-40...\n",
      "Done.\n",
      "Searching for \"Sliding Down the Pole (feat. Too Short)\" by E-40...\n",
      "Done.\n",
      "Searching for \"I Can Sell It (feat. Cousin Fik)\" by E-40...\n",
      "Done.\n",
      "Searching for \"Big Time (feat. Kevin Cossom)\" by E-40...\n",
      "Done.\n",
      "Searching for \"Alcoholism (feat. B-Legit)\" by E-40...\n",
      "Done.\n",
      "Searching for \"Pray for Me (feat. Bosko, Suga-T & B-Legit)\" by E-40...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for ballstr\n",
    "#clean to album level\n",
    "dfballstr= df[df['album'] == 'The Ball Street Journal (Explicit Version)']\n",
    "dfballstr = dfballstr[dfballstr['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "dfballstr_list=[]\n",
    "for row in dfballstr['name']:\n",
    "\n",
    "    dfballstr_list.append(getLyric(row, 'E-40')),\n",
    "\n",
    "dfballstrlyrics = pd.DataFrame(dfballstr_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "dfballstr= dfballstr.reset_index()\n",
    "#add lyrics\n",
    "dfballstr['lyrics'] = dfballstrlyrics['string_values']\n",
    "#clean\n",
    "dfballstr=dfballstr.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 279,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Ballhog\" by E-40...\n",
      "Done.\n",
      "Searching for \"The Pots & Pan Man\" by E-40...\n",
      "Done.\n",
      "Searching for \"Winning\" by E-40...\n",
      "Done.\n",
      "Searching for \"Who You Talking To\" by E-40...\n",
      "Done.\n",
      "Searching for \"Wicked\" by E-40...\n",
      "Done.\n",
      "Searching for \"Ain't Talkin Bout Nothing\" by E-40...\n",
      "Done.\n",
      "Searching for \"One Night\" by E-40...\n",
      "Done.\n",
      "Searching for \"Relax\" by E-40...\n",
      "Done.\n",
      "Searching for \"The Pack Attack\" by E-40...\n",
      "Done.\n",
      "Searching for \"Dennys\" by E-40...\n",
      "Done.\n",
      "Searching for \"These Days\" by E-40...\n",
      "Done.\n",
      "Searching for \"When Life Shows Up\" by E-40...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for gog\n",
    "#clean to album level\n",
    "dfgog= df[df['album'] == 'The Gift Of Gab']\n",
    "dfgog = dfgog[dfgog['is_explicit'] == 1]\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "dfgog_list=[]\n",
    "for row in dfgog['name']:\n",
    "\n",
    "    dfgog_list.append(getLyric(row, 'E-40')),\n",
    "\n",
    "dfgoglyrics = pd.DataFrame(dfgog_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "dfgog= dfgog.reset_index()\n",
    "#add lyrics\n",
    "dfgog['lyrics'] = dfgoglyrics['string_values']\n",
    "#clean\n",
    "dfgog=dfgog.drop('index', 1)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 280,
   "metadata": {},
   "outputs": [],
   "source": [
    "#joinall dataframes for e40\n",
    "e40 = pd.concat([dfghettorep, dfmway, dfballstr, dfgog])\n",
    "e40=e40.reset_index()\n",
    "#add region data\n",
    "region= []\n",
    "for row in e40['name']:\n",
    "    region.append('westcoast')\n",
    "\n",
    "e40['region'] = region\n",
    "\n",
    "e40.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\e40final.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Big Pun \n",
    "\n",
    "Go to <a href=#bookmark>my bookmark</a>\n",
    "\n",
    "Bottom <a name='bottom' />"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 281,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "spotify:artist:6futYSDVulYR2PktBjTB5W\n"
     ]
    }
   ],
   "source": [
    "#get next artist data\n",
    "\n",
    "results = sp.search(\"artist:Big Daddy Kane\")\n",
    "artist_id = results['tracks']['items'][0]['artists'][0]['uri']\n",
    "print(artist_id)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 282,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://api.spotify.com/v1/artists/6futYSDVulYR2PktBjTB5W/albums?offset=50&limit=50&include_groups=album,single,compilation,appears_on&market=US\n",
      "50\n",
      "spotify:album:25VaqNOXtA8pSbynsgfRfc\n",
      "47 \t Ain't No Half-Steppin'\n",
      "18 \t The Power of Music\n",
      "13 \t Daddy's Home\n",
      "14 \t Looks Like A Job For...\n",
      "13 \t Taste Of Chocolate\n",
      "17 \t It's A Big Daddy Thing\n",
      "10 \t Long Live The Kane\n",
      "3 \t Nite & Day\n",
      "2 \t Raw [Edit] / Word To The Mother[land] [Digital 45]\n",
      "29 \t This Is Hip Hop\n",
      "25 \t Hip Hop Rewind 80s\n",
      "28 \t Rap Classics\n",
      "26 \t American Hip Hop & Rap Classics\n",
      "30 \t Hip Hop Morning Mode\n",
      "25 \t Real Hip Hop\n",
      "26 \t Urban Groove\n",
      "25 \t Rap & Hip Hop\n",
      "30 \t Urban Party - Hip Hop/R&B\n",
      "27 \t Hip Hop Record Box\n",
      "25 \t The Face of the 80's\n",
      "21 \t Original Gangster - Hip Hop Classics\n",
      "28 \t Early Hip Hop\n",
      "30 \t Rap Hits\n",
      "30 \t Urban 90s\n",
      "25 \t Beyond the Charts: Hip Hop\n",
      "32 \t Hip Hop Party\n",
      "27 \t Hip Hop Hooray!\n",
      "50 \t Hip Hop 100\n",
      "30 \t The Essential Remix Selection\n",
      "42 \t Rap\n",
      "13 \t The Lost Tapes\n",
      "25 \t Underground Hip Hop\n",
      "1 \t Done It Again\n",
      "1 \t 99 Cent Dreams (feat. Big Daddy Kane)\n",
      "1 \t 99 Cent Dreams (feat. Big Daddy Kane)\n",
      "32 \t Hip Hop Remixes\n",
      "24 \t Dawn of Hip Hop\n",
      "30 \t Laidback Hip Hop\n",
      "25 \t Real Hip Hop: Old School Classics\n",
      "30 \t Best of DJ Ostkurve\n",
      "20 \t Hip Hop Replay\n",
      "29 \t Rap Life\n",
      "30 \t Battle Scars: Hip Hop Hits\n",
      "23 \t Old School Hip Hop\n",
      "20 \t 80s Hip Hop\n",
      "24 \t 90s Hip Hop\n",
      "25 \t Epic Hip Hop\n",
      "30 \t Old Skool Jams\n",
      "29 \t Rimas y beats: El mejor Hip-Hop\n",
      "22 \t Feel So Good: Old School Hip Hop\n",
      "name                Ain't No Half-Steppin'\n",
      "duration_ms                         319906\n",
      "popularity                              21\n",
      "num_markets                             78\n",
      "album               Ain't No Half-Steppin'\n",
      "disc_number                              1\n",
      "is_explicit                          False\n",
      "track_number                             1\n",
      "release_date                    2018-05-12\n",
      "artist                      Big Daddy Kane\n",
      "danceability                         0.836\n",
      "energy                               0.728\n",
      "key                                     10\n",
      "loudness                           -12.058\n",
      "mode                                     0\n",
      "speechiness                          0.234\n",
      "acousticness                       0.00569\n",
      "instrumentalness                  0.000819\n",
      "liveness                            0.0649\n",
      "valence                              0.599\n",
      "tempo                              100.842\n",
      "time_signature                           4\n",
      "Name: 0, dtype: object\n"
     ]
    }
   ],
   "source": [
    "\n",
    "#get album details\n",
    "albums = sp.artist_albums('6futYSDVulYR2PktBjTB5W', country=\"US\", limit=50)\n",
    "print(albums['next'])\n",
    "\n",
    "#collect album details and print\n",
    "album_ids = [album['uri'] for album in albums['items']]\n",
    "print(len(album_ids))\n",
    "print(album_ids[0])\n",
    "\n",
    "all_tracks = []\n",
    "for album_id in album_ids:\n",
    "    tracks = sp.album_tracks(album_id, limit=50)\n",
    "    all_tracks.append(tracks)\n",
    "    \n",
    "for tracks, album in zip(all_tracks, albums.get('items')):\n",
    "    print(\n",
    "        len(tracks.get('items')),\n",
    "        \"\\t\",\n",
    "        album.get('name')\n",
    "    )\n",
    "\n",
    "#create df\n",
    "track_ids = []\n",
    "for tracks in all_tracks:\n",
    "    album_tracks = []\n",
    "    for track in tracks.get('items'):\n",
    "        album_tracks.append(track.get('uri'))\n",
    "    track_ids.append(album_tracks)\n",
    "\n",
    "\n",
    "track_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    tracks = sp.tracks(track_id_list)\n",
    "    track_objects.append(tracks)\n",
    "\n",
    "#collecting other features\n",
    "\n",
    "audio_feature_objects = []\n",
    "for track_id_list in track_ids:\n",
    "    features = sp.audio_features(track_id_list)\n",
    "    audio_feature_objects.append(features)\n",
    "\n",
    "spotify_data = {\n",
    "    \"audio_features\": audio_feature_objects,\n",
    "    \"tracks\": track_objects\n",
    "}\n",
    "\n",
    "df = pd.DataFrame(columns=[\n",
    "    'name',\n",
    "    'duration_ms',\n",
    "    'popularity',\n",
    "    'num_markets',\n",
    "    'album',\n",
    "    'disc_number',\n",
    "    'is_explicit',\n",
    "    'track_number',\n",
    "    'release_date',\n",
    "    'artist',\n",
    "    'danceability',\n",
    "    'energy',\n",
    "    'key',\n",
    "    'loudness',\n",
    "    'mode',\n",
    "    'speechiness',\n",
    "    'acousticness',\n",
    "    'instrumentalness',\n",
    "    'liveness',\n",
    "    'valence',\n",
    "    'tempo',\n",
    "    'time_signature',\n",
    "])\n",
    "for album_info, album_features in zip(\n",
    "        spotify_data.get('tracks'), \n",
    "        spotify_data.get('audio_features')\n",
    "        ):\n",
    "    for track_info, track_features in zip(\n",
    "        album_info.get('tracks'),\n",
    "        album_features\n",
    "        ):\n",
    "        y = {\n",
    "            'name': track_info['name'],\n",
    "            'duration_ms': track_info['duration_ms'],\n",
    "            'popularity': track_info['popularity'],\n",
    "            'num_markets': len(track_info['available_markets']),\n",
    "            'album': track_info['album']['name'],\n",
    "            'disc_number': track_info['disc_number'],\n",
    "            'is_explicit': track_info['explicit'],\n",
    "            'track_number': track_info['track_number'],\n",
    "            'release_date': track_info['album']['release_date'],\n",
    "            'artist': track_info['artists'][0]['name'],\n",
    "            'danceability': track_features['danceability'],\n",
    "            'energy': track_features['energy'],\n",
    "            'key': track_features['key'],\n",
    "            'loudness': track_features['loudness'],\n",
    "            'mode': track_features['mode'],\n",
    "            'speechiness': track_features['speechiness'],\n",
    "            'acousticness': track_features['acousticness'],\n",
    "            'instrumentalness': track_features['instrumentalness'],\n",
    "            'liveness': track_features['liveness'],\n",
    "            'valence': track_features['valence'],\n",
    "            'tempo': track_features['tempo'],\n",
    "            'time_signature': track_features['time_signature'],\n",
    "        }\n",
    "        df = df.append(y, ignore_index=True)\n",
    "print(df.iloc[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 284,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Long Live the Kane\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Raw - Remix\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Set It Off\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"The Day You're Mine\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"On the Bugged Tip\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Ain't No Half-Steppin'\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"I'll Take You There\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Just Rhymin' with Biz\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Mister Cee's Master Plan\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Word to the Mother (Land)\" by Big Daddy Kane...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for lltk\n",
    "#clean to album level\n",
    "dflltk= df[df['album'] == 'Long Live The Kane']\n",
    "\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "dflltk_list=[]\n",
    "for row in dflltk['name']:\n",
    "\n",
    "    dflltk_list.append(getLyric(row, 'Big Daddy Kane')),\n",
    "\n",
    "dflltklyrics = pd.DataFrame(dflltk_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "dflltk= dflltk.reset_index()\n",
    "#add lyrics\n",
    "dflltk['lyrics'] = dflltklyrics['string_values']\n",
    "#clean\n",
    "dflltk=dflltk.drop('index', 1)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 286,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"It's a Big Daddy Thing\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Another Victory\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Mortal Combat\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Children R the Future\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Young, Gifted and Black\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Smooth Operator\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Calling Mr. Welfare\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Wrath of Kane - Live\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"I Get the Job Done\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Ain't No Stoppin' Us Now\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Pimpin' Ain't Easy\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Big Daddy's Theme\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"To Be Your Man\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"The House That Cee Built\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"On the Move\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Warm It Up, Kane\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Rap Summary (Lean on Me) - Remix\" by Big Daddy Kane...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for itsabig\n",
    "#clean to album level\n",
    "dfitsabig= df[df['album'] == 'It\\'s A Big Daddy Thing']\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "dfitsabig_list=[]\n",
    "for row in dfitsabig['name']:\n",
    "\n",
    "    dfitsabig_list.append(getLyric(row, 'Big Daddy Kane')),\n",
    "\n",
    "dfitsabiglyrics = pd.DataFrame(dfitsabig_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "dfitsabig= dfitsabig.reset_index()\n",
    "#add lyrics\n",
    "dfitsabig['lyrics'] = dfitsabiglyrics['string_values']\n",
    "#clean\n",
    "dfitsabig=dfitsabig.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 287,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Taste of Chocolate - Intro\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Cause I Can Do It Right\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"It's Hard Being the Kane\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Who Am I (feat. Gamilah Shabazz)\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Dance with the Devil\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"No Damn Good\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"All of Me (feat. Barry White)\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Keep 'Em on the Floor (feat. Barbara Weathers)\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Mr. Pitiful\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Put Your Weight on It\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Big Daddy vs. Dolemite (feat. Rudy Ray Moore)\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Down the Line\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Taste of Chocolate - Exit\" by Big Daddy Kane...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for taste\n",
    "#clean to album level\n",
    "dftaste= df[df['album'] == 'Taste Of Chocolate']\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "dftaste_list=[]\n",
    "for row in dftaste['name']:\n",
    "\n",
    "    dftaste_list.append(getLyric(row, 'Big Daddy Kane')),\n",
    "\n",
    "dftastelyrics = pd.DataFrame(dftaste_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "dftaste= dftaste.reset_index()\n",
    "#add lyrics\n",
    "dftaste['lyrics'] = dftastelyrics['string_values']\n",
    "#clean\n",
    "dftaste=dftaste.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 289,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Searching for \"Daddy's Home\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Brooklyn Style...Laid Out\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"In The PJ's\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Show & Prove\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Lyrical Gymnastics\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"That's How I Did 'Em\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Sex According To The Prince Of Darkness\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"3 Forties And A Bottle Of Moet\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"The Way It's Goin' Down\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Somebody's Been Sleeping In My Bed\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"W.G.O.N.R.S.\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Let Yourself Go\" by Big Daddy Kane...\n",
      "Done.\n",
      "Searching for \"Don't Do It To Yourself\" by Big Daddy Kane...\n",
      "Done.\n"
     ]
    }
   ],
   "source": [
    "#get lyric data for dh\n",
    "#clean to album level\n",
    "dfdh= df[df['album'] == 'Daddy\\'s Home']\n",
    "\n",
    "#names of songs aren't being added here, I need to fix that somehow\n",
    "dfdh_list=[]\n",
    "for row in dfdh['name']:\n",
    "\n",
    "    dfdh_list.append(getLyric(row, 'Big Daddy Kane')),\n",
    "\n",
    "dfdhlyrics = pd.DataFrame(dfdh_list, columns=['string_values'])\n",
    "#reset index so lyrics are added in order\n",
    "dfdh= dfdh.reset_index()\n",
    "#add lyrics\n",
    "dfdh['lyrics'] = dfdhlyrics['string_values']\n",
    "#clean\n",
    "dfdh=dfdh.drop('index', 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 290,
   "metadata": {},
   "outputs": [],
   "source": [
    "#joinall dataframes for bdk\n",
    "bdk = pd.concat([dflltk,dfitsabig, dftaste, dfdh])\n",
    "bdk=bdk.reset_index()\n",
    "#add region data\n",
    "region= []\n",
    "for row in bdk['name']:\n",
    "    region.append('eastcoast')\n",
    "\n",
    "bdk['region'] = region\n",
    "\n",
    "bdk.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\bdkfinal.csv', index = None, header=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---------------------------------------------------------------------------------------------------------------------------------------"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---------------------------------------------------------------------------------------------------------------------------------------"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---------------------------------------------------------------------------------------------------------------------------------------"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---------------------------------------------------------------------------------------------------------------------------------------"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}

{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 233,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "showing info https://raw.githubusercontent.com/nltk/nltk_data/gh-pages/index.xml\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 233,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import re #regular expressions\n",
    "import scipy.stats\n",
    "import math\n",
    "from matplotlib.mlab import PCA as mlabPCA\n",
    "from sklearn  import preprocessing\n",
    "from sklearn import ensemble\n",
    "import string\n",
    "\n",
    "#specifically nlp stuff\n",
    "\n",
    "import re\n",
    "from nltk.corpus import  stopwords\n",
    "from collections import Counter\n",
    "from nltk.tokenize import word_tokenize\n",
    "import nltk\n",
    "nltk.download()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 380,
   "metadata": {},
   "outputs": [],
   "source": [
    "bdk = pd.read_csv(r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\FINAL\\bdkfinal.csv')\n",
    "busta = pd.read_csv(r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\FINAL\\bustafinal.csv')\n",
    "drdre = pd.read_csv(r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\FINAL\\drdrefinal.csv')\n",
    "e40 = pd.read_csv(r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\FINAL\\e40final.csv')\n",
    "eaz = pd.read_csv(r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\FINAL\\eazfinal.csv')\n",
    "eminem = pd.read_csv(r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\FINAL\\eminemfinal.csv')\n",
    "jcole = pd.read_csv(r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\FINAL\\jcolefinal.csv')\n",
    "kanye = pd.read_csv(r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\FINAL\\kanyefinal.csv')\n",
    "kendrick = pd.read_csv(r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\FINAL\\kendrickfinal.csv')\n",
    "killermike = pd.read_csv(r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\FINAL\\killermikefinal.csv')\n",
    "macmiller = pd.read_csv(r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\FINAL\\macmillerfinal.csv')\n",
    "nas = pd.read_csv(r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\FINAL\\nasfinal.csv')\n",
    "notorious = pd.read_csv(r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\FINAL\\notoriousfinal.csv')\n",
    "snoop = pd.read_csv(r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\FINAL\\snoopfinal.csv')\n",
    "ti = pd.read_csv(r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\FINAL\\tifinal.csv')\n",
    "tupac = pd.read_csv(r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\FINAL\\tupacfinal.csv')\n",
    "\n",
    "music = pd.concat([bdk, busta, drdre, e40, eaz, eminem, jcole, kanye, kendrick, killermike, macmiller, nas, notorious, snoop, ti,tupac])\n",
    "music = music.reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 381,
   "metadata": {},
   "outputs": [],
   "source": [
    "music.lyrics = music.lyrics.astype(str)\n",
    "#drop columns we don't need\n",
    "music = music.drop('level_0', 1)\n",
    "music = music.drop('index', 1)\n",
    "#remove anything surrounded by square brackets\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"[\\[].*?[\\]]\", \"\", x)).astype(str)\n",
    "\n",
    "#replace \\n with 'replacefullstop' so we can replace this with a regular full  stop later\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"\\n\", \"replacefull\", x)).astype(str)\n",
    "\n",
    "#remove verse1, verse2, verse3, chorus\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"Verse 1\", \"\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"Verse 2\", \"\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"Verse 3\", \"\", x)).astype(str)\n",
    "\n",
    "\n",
    "\n",
    "#remove abberant punctuation, etc\n",
    "\n",
    "#remove 2x/3x/4x/5x/6x/7x/8x\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"(\\()?x\\d+(\\))?\", \"\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"2x\", \"\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"3x\", \"\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"4x\", \"\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"5x\", \"\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"6x\", \"\", x)).astype(str)\n",
    "\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"x2\", \"\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"x3\", \"\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"x4\", \"\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"x5\", \"\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"x6\", \"\", x)).astype(str)\n",
    "\n",
    "#change talkin to talking, walkin to walking, etc....\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"n\\\\\\' \", \"ng \", x)).astype(str)\n",
    "\n",
    "# Fix apostrophe issues\n",
    "music.lyrics = music.lyrics.apply(lambda x:re.sub(\"\\\\x91\", \"'\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x:re.sub(\"\\\\x92\", \"'\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x:re.sub(\"<u\\+0092>\", \"'\", x)).astype(str)\n",
    "\n",
    "#make text lower\n",
    "music.lyrics = music.lyrics.apply(lambda x: x.lower())\n",
    " \n",
    "punc = string.punctuation\n",
    "#remove punctuation..\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"'\", \"\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"//\", \"\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"/\", \".\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"-\", \"\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\":\", \"\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\":\", \"\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(r'[^\\w\\s]', \" \", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"  \", \" \", x)).astype(str)\n",
    "#replacefull\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"replacefull\", \". \", x)).astype(str)\n",
    "\n",
    "#replace periods\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"^. \", \"\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"^ . \", \"\", x)).astype(str)\n",
    "music.lyrics = music.lyrics.apply(lambda x: re.sub(\"^. . \", \"\", x)).astype(str)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 382,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0       party people in the place. embrace the bass as...\n",
      "1       here i am    raw. terrorist here to bring trou...\n",
      "2       let it roll get bold i just cant hold. back or...\n",
      "3       talk about ever meeting ms right. but one thin...\n",
      "4       yo on the mic right about now i go by the name...\n",
      "5       mmm mmm mmm. aw yea im with this. im just gonn...\n",
      "6       hear ye hear ye from far and near. the one the...\n",
      "7       funky . ready . funky funky ahhh  . one two on...\n",
      "8        who is the man with the master plan . dj mist...\n",
      "9       grab a hold of yourself open your eyes. get wi...\n",
      "10       dr harrah is mr kane loose in this hospital ....\n",
      "11      here comes the conquering brother that fathoms...\n",
      "12      the kiss of death on a rap pick. then you get ...\n",
      "13      on and on and on and on. me say the beat dont ...\n",
      "14      so out of the mercy of allah. and the law writ...\n",
      "15      well excuse me take a few minutes to mellow ou...\n",
      "16       yo whassup big daddy .  aiyyo whassup red ale...\n",
      "17      he has arrived at the apollo. big  daddy  kane...\n",
      "18       hey yo teddy.  yo.  i ran into a young lady m...\n",
      "19      here we go here we go on the smooth side. lets...\n",
      "20      anything goes when it comes to hoes they go. p...\n",
      "21      yo tone. play me some more pimp shit. . and yo...\n",
      "22      mmmm mmm mmm . .  . . my my my my my my my my ...\n",
      "23      introducing ladies and gentlemen. the young ma...\n",
      "24      chorus all together . . well here we are. unit...\n",
      "25      come get some you little bum. i take the cake ...\n",
      "26      lean on me  . .  big daddy kane a teacher   . ...\n",
      "27      yeah . you know 1990 begins a new decade. sinc...\n",
      "28      move over bacon theres something meatier. a na...\n",
      "29      uhh put your weight on it. uhh and uh prince p...\n",
      "                              ...                        \n",
      "1001    they say. influenced by crime addicted to grin...\n",
      "1002    heaven aint hard to find. all you gotta do is ...\n",
      "1003    at 1225 am wednesday 2pac was on his way into ...\n",
      "1004    a coward dies a thousand deaths. a soldier die...\n",
      "1005    its just me against the world. nothing to lose...\n",
      "1006    i shall not fear no man but god. though i walk...\n",
      "1007    heyyyy heyyayyaahhyy. . . yo mo bee mayn drop ...\n",
      "1008    i wanna dedicate this one to robert yummy sand...\n",
      "1009    oh you thug life is yours . life aint no somet...\n",
      "1010    damn another funeral another motherfucker. lor...\n",
      "1011    you are appreciated. when i was young me and m...\n",
      "1012    keeping it real. . . i take a shot of hennessy...\n",
      "1013    whassup its 2pac can you get away . let me com...\n",
      "1014    here we go we gonna send this one out to the o...\n",
      "1015    who you calling rapist . aint that a bitch. yo...\n",
      "1016    child why you by the window whats wrong daddy ...\n",
      "1017    thats right nigga you gotta get your papers in...\n",
      "1018    hard like an erection. young black male. hard ...\n",
      "1019    you know they got me trapped in this prison of...\n",
      "1020    all you wanted to be a soulja a soulja. all yo...\n",
      "1021     whats up .  yo this scene rollers tried to ja...\n",
      "1022    they claim that im violent. just cause i refus...\n",
      "1023    killing us one by one. in one way or another. ...\n",
      "1024    something wicked this way comes. somesomething...\n",
      "1025     suddenly i see some niggas that i dont like ....\n",
      "1026    ever since you was a peewee down by my knee wi...\n",
      "1027    brendas got a baby. . . i hear brendas got a b...\n",
      "1028    oh shit jumped on my mans dick. heard he had a...\n",
      "1029    rebel   rebel. rebel. rebel   rebel. . . they ...\n",
      "1030    shes a part time mutha. . . meet cindi. shes t...\n",
      "Name: lyrics, Length: 1031, dtype: object\n"
     ]
    }
   ],
   "source": [
    "print(music.lyrics)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 383,
   "metadata": {},
   "outputs": [],
   "source": [
    "#export concatonated database\n",
    "music.to_csv (r'C:\\Users\\Sean\\Documents\\Thinkful\\RAP NLP\\CSV\\music_clean_final.csv', index = None, header=True)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
